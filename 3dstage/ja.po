# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2021, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 7.4.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-08 00:04+0900\n"
"PO-Revision-Date: 2022-05-08 00:35+0900\n"
"Last-Translator: akakyouryuu <akakyouryuu@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.0.1\n"

#: ../../source/3dstage.rst:4
msgid "3D Stage"
msgstr "3D ステージ"

#: ../../source/3dstage.rst:6
msgid ""
"The 3D Stage, named after the stages that plays are performed on, is a "
"concept that allows displayables to be positioned in 3 dimensions. Ren'Py "
"will then render the displayables with the proper perspective, and will also "
"make the z dimension avalable, to make things like lighting and depth "
"rendering possible."
msgstr ""
"3D ステージは演技が行われるステージにちなんで名付けられたものであり、 3次元"
"に Displayable を設置出来るようにすることをコンセプトとしています。 Ren'Py は"
"適切な遠近法で Displayable をレンダリングし、 z 軸も利用可能にして、照明や深"
"度のようなもののレンダリングを可能にします。"

#: ../../source/3dstage.rst:13
msgid "Coordinates"
msgstr "座標"

#: ../../source/3dstage.rst:15
msgid ""
"Probably the most important thing to understand about the 3D Stage is the "
"coordinate system that Ren'Py uses for the 3D state. Here's the coordinate "
"system that's used to place displayables in 2D:"
msgstr ""
"3Dステージを理解する上におそらく最も重要なことは Ren'Py が 3D 状態で使用する"
"座標でしょう。次の図では座標システムは Displayable を 2D に配置するために使用"
"されています。"

#: ../../source/3dstage.rst:21
msgid ""
"In 2D, the rectangle is the size of the screen, and the width and height of "
"the visible area is set using :func:`gui.init` (usually when first making a "
"new game)."
msgstr ""
"2D では四角形は画面のサイズで、可視領域の幅と高さは :func:`gui.init` により "
"( 通常新しいゲームを作るときの最初に ) 設定されます。."

#: ../../source/3dstage.rst:27
msgid ""
"The 3D stage extends this coordinate system with a new axis, one facing "
"towards the viewer, so that values greater than 0 bring an image closer (and "
"make it bigger), and those less than 0 move the image away from the viewer "
"(and make it smaller)."
msgstr ""
"3D ステージではこの座標システムをユーザーを向いた追加の軸によって拡張し、その"
"値が 0 より大きくなるほど画像が近く ( 大きく ) 、小さくなるほど遠く ( 小さ"
"く ) なります。"

#: ../../source/3dstage.rst:34
msgid ""
"Finally, when a rotation in 3d happens, it's in the directions given here:"
msgstr "最後に、3次元での回転は次で指定する方向で起こります。"

#: ../../source/3dstage.rst:36
msgid "When rotating around Z, X moves toward Y."
msgstr "Z軸で回転するとXはYに向かって進みます。"

#: ../../source/3dstage.rst:37
msgid "When rotating around X, Y moves toward Z."
msgstr "X軸で回転すると Y は Z に向かって進みます。"

#: ../../source/3dstage.rst:38
msgid "When rotating around Y, Z moves toward X."
msgstr "Y軸で回転すると Z は X に向かって進みます。"

#: ../../source/3dstage.rst:40
msgid ""
"These coordinate systems are based on those used in Ren'Py, making it easy "
"to move from 2D to the 3D stage. When importing 3D models, coordinate "
"transforms may be applied to ensure the model coordinates are sensible."
msgstr ""
"カメラの座標システムは Ren'Py で使用される座標システムに基づいるので、 2D か"
"ら 3D ステージへの移行は容易です。 3D モデルをインポートしたときは座標変換さ"
"れ、そのモデルの座標が変更できるようになります。"

#: ../../source/3dstage.rst:45
msgid "Camera"
msgstr "Camera"

#: ../../source/3dstage.rst:47
msgid ""
"The initial placement of the camera is controlled by the parameters to :func:"
"`gui.init`. First, Ren'Py uses `width` and `fov` to compute the default `z` "
"distance. For the default `fov` of 75:"
msgstr ""
"カメラの最初の位置は :func:`gui.init` へのパラメータで制御されます。最初に "
"Ren'Py は `width` と `fov` を使用してデフォルトの `z` 距離を算出します。 "
"`fov` のデフォルトの 75 では次のようになります :"

#: ../../source/3dstage.rst:51
msgid "When width = 1280, z is about 834"
msgstr "width = 1280 なら z は約 834"

#: ../../source/3dstage.rst:52
msgid "When width = 1920, z is about 1251"
msgstr "width = 1920 なら z は約 1251"

#: ../../source/3dstage.rst:53
msgid "When width = 3840, z is about 2502"
msgstr "width = 3840 なら z は約 2502"

#: ../../source/3dstage.rst:55
msgid ""
"Where the actual value of z is less than 1 higher than the values given "
"here. The default z placement can be overridden with the :tpref:"
"`perspective` style property, or the :var:`config.perspective` variable."
msgstr ""
"実際の z 値はここで示した値より 1 未満高くなります。デフォルトの z 位置は :"
"tpref:`perspective` スタイルプロパティーや :var:`config.perspective` 変数で上"
"書き可能です。"

#: ../../source/3dstage.rst:59
msgid ""
"Ren'Py automatically applies an offset of (`width` / 2, `height` / 2, `z`) "
"to the camera, and it looks down the -Z axis."
msgstr ""
"Ren'Py は自動的に (`width` / 2, `height` / 2, `z`) カメラをオフセットし、カメ"
"ラは Z軸と逆を向きます。"

#: ../../source/3dstage.rst:62
msgid ""
"The `z` distance is also the distance from the camera to the plane where "
"pixels on-screen have the same size as they do in the original images "
"(ignoring window scaling). Increasing the camera's z position will make "
"everything smaller, while decreasing it will make everything bigger."
msgstr ""
"`z` 距離はオリジナルの画像サイズになる面 ( ウィンドウスケーリングを無視した場"
"合 ) からカメラまでの距離でもあります。カメラの z 座標を増やすとすべてが小さ"
"く、減らすと大きくなります。"

#: ../../source/3dstage.rst:67
msgid ""
"Finally, :tpref:`perspective` and :var:`config.perspective` describe the "
"near and far planes, defaulting to 100 and 100000, respectively. This means "
"than when an image is closer than 100 z-units from the camera, it "
"disappears, and it also disappears if it's more than 100,000 z-units away."
msgstr ""
"最後に :tpref:`perspective` と :var:`config.perspective` で最近接側の面と最遠"
"方側の面を記述します。デフォルトではそれぞれ 100 と 100000 です。つまり画像"
"が z単位で 100 より小さくても 100000 より大きくても消えます。"

#: ../../source/3dstage.rst:75
msgid "Using the 3D Stage"
msgstr "3D ステージの使用"

#: ../../source/3dstage.rst:77
msgid ""
"The first thing to do to use the 3D stage is to enable it for a layer, using "
"the ``camera`` statement. This is usually done with::"
msgstr ""
"3D ステージの使用で最初にすべきことは ``camera`` ステートメントを使用してレイ"
"ヤーを有効化することです。これは通常次のコードで実行されます。 ::"

#: ../../source/3dstage.rst:83
msgid ""
"though it's possible that you'll want to include a default camera position, "
"as described below."
msgstr "後述するようにデフォルトのカメラ位置を含めてもよいです。"

#: ../../source/3dstage.rst:86
msgid ""
"Showing images (backgrounds and sprites) works the same way as it does in "
"when using 2D coordinates. ::"
msgstr ""
"2D 座標と同様に ( 背景やスプライトのような ) 画像表示が動作しますが、 ::"

#: ../../source/3dstage.rst:95
msgid ""
"However, it's possible to use transforms to move these displayables in three "
"dimensional space::"
msgstr ""
"3次元的な空間でそれらの Displayable を移動できる transform を使用できま"
"す。 ::"

#: ../../source/3dstage.rst:108
msgid ""
"As an ATL transform is given, the default transform is not used, and it's "
"necessary to specify :tpref:`xalign` and :tpref:`yalign` to position the "
"displayable in the x and y axes. Of course, transforms can also be used. ::"
msgstr ""
"ATL transform が指定されるとデフォルトの transform は使用されず、 :tpref:"
"`xalign` と :tpref:`yalign` を指定して x と y軸に Displayable を配置する必要"
"があります。もちろん transform も使用できます。 ::"

#: ../../source/3dstage.rst:128
msgid ""
"If you try this, you'll see an empty space around the background. That's "
"because by moving it back, it becomes smaller, and doesn't fill the screen. "
"Ren'Py has an easy way of fixing this problem - :tpref:`zzoom`. Setting the "
"tpref:`zzoom` property to True will scale an image by the amount it was "
"shrunk due to having a negative zpos. It's useful for backgrounds. ::"
msgstr ""
"もしこれを試すと、背景の周辺に空き領域が見えるでしょう。これは背景が後ろに移"
"動して小さくなり、画面を満たさなくなるからです。 Ren'Py にはこの問題を解決す"
"る簡単な方法 :tpref:`zzoom` があります。 :tpref:`zzoom` プロパティーを True "
"にすると zpos が小さくなったために画像が小さくなった分だけ画像をスケーリング"
"します。これは背景に使用すると便利です。 ::"

#: ../../source/3dstage.rst:137
msgid ""
"It's also possible to use ATL to vary zpos, just like you would xpos and "
"ypos. ::"
msgstr "丁度 xpos と ypos のように ATL を使って zpos を変更もできます。"

#: ../../source/3dstage.rst:144
msgid ""
"Note that zpos can interact strangely with positions like ``left`` and "
"``right``, and with :propref:`xalign` and :propref:`yalign`. That's because "
"Ren'Py will position the images in a three dimensional rectangular volume "
"(like a cube, but not all the sides are the same length), and then apply "
"perspective to the image, which can cause parts of the image to move "
"offscreen."
msgstr ""
"``left`` と ``right`` や :propref:`xalign` と :propref:`yalign` のような位置"
"と同時に使用すると zpos は奇妙に作用することがあります。それは Ren'Py が 3次"
"元空間 (立方体のようではあるが、すべての面が同じ長さではない) に画像を配置"
"し、遠近法を画像に適用するため画像が画面外へ移動するからです。"

#: ../../source/3dstage.rst:150
msgid ""
"It's possible to move the camera, as well, using ``camera``. For example, ::"
msgstr "``camera`` を使用して同様にカメラも動かせます。例 ::"

#: ../../source/3dstage.rst:157
msgid ""
"When doing this, it probably makes sense to use background images that are "
"larger than the window."
msgstr "これはウィンドウより大きな背景画像の使用時に便利でしょう。"

#: ../../source/3dstage.rst:160
msgid ""
"If you apply a zpos to a sprite, and it doesn't take effect, the reason is "
"probably because you omitted the ``perspective`` clause of the ``camera`` "
"transform."
msgstr ""
"もし zpos をスプライトに適用しても効果がなければ、それはおそらく ``camera`` "
"transform の ``perspective`` 節を省力したからです。"

#: ../../source/3dstage.rst:164
msgid "The camera can be rotated, with::"
msgstr "カメラは次のようにして回転できます。 ::"

#: ../../source/3dstage.rst:170
msgid ""
"As the camera is what is rotating, the rotation is in the opposite direction "
"as one that rotates a displayable."
msgstr "カメラが回転するので、その回転は Displayable の回転とは逆向きです。"

#: ../../source/3dstage.rst:175
msgid "Depth"
msgstr "深度"

#: ../../source/3dstage.rst:177
msgid ""
"By default, Ren'Py will display the images in its usual order, with the last "
"image to be shown above the others. This might lead to odd results, like an "
"image that is closer (using perspective) beign shown behind one that's "
"farther away."
msgstr ""
"デフォルトでは Ren'Py は画像を通常の順番で表示し、最後に表示された画像が他よ"
"り上になります。このため、( perspective を使用した ) より近い画像がより遠い画"
"像の下にある奇妙な結果になることがあります。"

#: ../../source/3dstage.rst:182
msgid ""
"If your game shows images out of order like this, you can tell the GPU to "
"sort by depth, using :tpref:`gl_depth`::"
msgstr ""
"このように奇妙な順で画像が表示されるなら、 :tpref:`gl_depth` を使用して GPU "
"に深度によって順番を変えるよう指示します。 ::"

#: ../../source/3dstage.rst:189
msgid ""
"Slight rounding errors can cause images that are nominally at the same depth "
"to appear above or below each other. Flattening these images and displaying "
"them together may be the solution to this."
msgstr ""
"わずかな丸め誤差により、通常同じ深度の画像で違いに上下関係で表示されることが"
"あります。このような問題にはそれらの画像をくっつけて一緒に表示するとよいで"
"しょう。"

#: ../../source/3dstage.rst:194
msgid "Matrix Transforms"
msgstr "Matrix Transform"

#: ../../source/3dstage.rst:196
msgid ""
"Ren'Py uses the :tpref:`matrixtransform` transform property to apply a "
"matrix to displayables, which allows an image to be scaled, offset, and "
"rotated in three-dimensional space. This property takes either a :func:"
"`Matrix` or a TransformMatrix (defined below), and applies it to the "
"vertices at the corners of the images being displayed."
msgstr ""
"Ren'Py では :tpref:`matrixtransform` transform プロパティーを使用して、画像に"
"スケーリングやオフセット、三次元的な回転を適用する matrix を displayable に適"
"用します。このプロパティは、:func:`Matrix` または TransformMatrix (以下で定"
"義) のいずれかを受け取り、表示されている画像の角の頂点に適用します。"

#: ../../source/3dstage.rst:202
msgid ""
"Ren'Py uses the :tpref:`matrixanchor` transform property to make applying a "
"matrix easier. This defaults to (0.5, 0.5), and is translated to a pixel "
"offset inside the image being transformed using the usual Ren'Py anchor "
"rules. (If it's an integer or abolute, it's considered a number of pixels, "
"otherwise it's a fraction of the size of the image.)"
msgstr ""
"Ren'Py では :tpref:`matrixanchor` transform プロパティーを使用して matrix の"
"適用を簡易にしています。これはデフォルトでは (0.5, 0.5) であり、通常の "
"Ren'Py での anchor の使用方法で transform が適用されている画像内のピクセルオ"
"フセットに変換されます ( 整数または absolute の場合はピクセル数と見なされ、そ"
"れ以外の場合は画像サイズの割合となります ) 。"

#: ../../source/3dstage.rst:208
msgid ""
"Ren'Py applies the image by first shifting the image so the anchor is at (0, "
"0, 0). It then applies the transform, and then shifts it back by the same "
"amount. Using the defaults, this means that the matrix will be applied to "
"the center of the image."
msgstr ""
"Ren'Py は、アンカーが (0, 0, 0) になるように、最初に画像をシフトしてイメージ"
"を適用します。次に transform を適用し、同じ量だけシフトして戻ります。デフォル"
"トでは matrix はイメージの中心に適用されます。"

#: ../../source/3dstage.rst:213
msgid "For example::"
msgstr "例 ::"

#: ../../source/3dstage.rst:218
msgid ""
"Will rotate the image around the line going horizontally through it's "
"center. The top of the image will move back, and then bottom of the image "
"will move forwards."
msgstr ""
"画像の中心を通る水平線を中心に画像が回転します。画像の上部は後ろに下部は前に"
"移動します。"

#: ../../source/3dstage.rst:222
msgid ""
"Matrixes can be chained together with multiplication. It's easiest to think "
"about them being applied right to left. In this example::"
msgstr ""
"Matrix は複数連結できます。右から左に適用されると考えればわかりやすいです。例"
"えば ::"

#: ../../source/3dstage.rst:229
msgid ""
"The image will be shifted up by 300 pixels, and then will be rotated around "
"the X axis."
msgstr "これは画像が 300 ピクセル上昇してから X軸を中心に回転します。"

#: ../../source/3dstage.rst:232
msgid ""
"**Structural Similarity.** In ATL, interpolating a the :tpref:"
"`matrixtransform` property requires the use of TransformMatrixes that have "
"structural similarity. That means the same types of TransformMatrix, "
"multiplied together in the same order."
msgstr ""
"**恒常的類似** ATL では、 :tpref:`matrixtransform` プロパティーを使用して補間"
"する場合、構造的に類似した TransformMatrix を使用する必要があります。つまり、"
"同じタイプのTransformMatrixを同じ順序で掛け合わせるということです。"

#: ../../source/3dstage.rst:237
msgid "As an example, the following will rotate and offset, then move back::"
msgstr "例として、以下は回転してオフセットした後、元に戻ります ::"

#: ../../source/3dstage.rst:244
msgid ""
"While the first setting of matrixtransform may seem unnecessary, it is "
"required to provide a base for the first linear interpolation. If it wasn't "
"present, that interpolation would be skipped."
msgstr ""
"matrixtransform の最初の設定は不要に思えるかもしれませんが、これは最初の線形"
"補間に開始状態を提供するために必要なものです。もしこれがなければ、その補間は"
"スキップされます。"

#: ../../source/3dstage.rst:250
msgid "TransformMatrix"
msgstr "TransformMatrix"

#: ../../source/3dstage.rst:252
msgid ""
"While Matrix objects are suitable for static transformations, they're not "
"useful for animating changing transformations. It's also useful to have a "
"way of taking common matrices and encapsulating them in a way that allows "
"the matrix to be parameterized."
msgstr ""
"Matrix オブジェクトは静的な transform に最適であるが、アニメーションが変化す"
"る transform には不便です。共通の matrix を受け取ってそれらをパラメータ化でき"
"るようにするようカプセル化する方法があると便利です。"

#: ../../source/3dstage.rst:257
msgid ""
"The TransformMatrix is a base class that is is extended by a number of "
"Matrix-creating classes. Instances of TransformMatrix are called by Ren'Py, "
"and return Matrixes. TransformMatrix is well integrated with ATL, allowing "
"for matrixtransform animations. ::"
msgstr ""
"TransformMatrixは、多数のMatrix作成クラスによって拡張される基本クラスです。 "
"TransformMatrixのインスタンスは、Ren'Pyによって呼び出され、Matrixを返しま"
"す。 TransformMatrixはATLと十分に統合されているため、matrixtransform によるア"
"ニメーションが可能です。 ::"

#: ../../source/3dstage.rst:267
msgid ""
"Subclasses of TransformMatrix are expected to implement the ``__call__`` "
"method. This method takes:"
msgstr ""
"TransformMatrix のサブクラスには ``__call__`` メソッドの実装が期待され、この"
"メソッドはつぎを受け取ります。 :"

#: ../../source/3dstage.rst:270
msgid ""
"An old object to interpolate off of. This object may be of any class, and "
"may be None if no old object exists."
msgstr ""
"補間する以前のオブジェクト。このオブジェクトは任意のクラスである可能性があ"
"り、以前のオブジェクトがなければ None です。"

#: ../../source/3dstage.rst:272
msgid ""
"A value between 0.0 and 1.0, representing the point to interpolate. 0.0 is "
"entirely the old object, and 1.0 is entirely the new object."
msgstr ""
"補間の進行度を表す 0.0 から 1.0の間の値。 0.0が完全な old オブジェクトで、1.0"
"が完全な new オブジェクトです。"

#: ../../source/3dstage.rst:276
msgid "Built-In TransformMatrix Subclasses"
msgstr ""
"組み込みの TransformMatrix サブクラ\n"
"ス"

#: ../../source/3dstage.rst:278
msgid ""
"The following is the list of TransformMatrix subclasses that are built into "
"Ren'Py."
msgstr "以下は Ren'Py に組み込まれた TransformMatrix サブクラスのリストです。"

#: ../../source/inc/transform_matrix:5
msgid ""
"A TransformMatrix that returns a matrix that offsets the vertex by a fixed "
"amount."
msgstr "固定値だけ頂点をオフセットする Matrix を返す TransformMatrix です。"

#: ../../source/inc/transform_matrix:9
msgid ""
"A TransformMatrix that returns a matrix that rotates the displayable around "
"the origin."
msgstr "原点中心で Displayable を回転する Matrix を返す TransformMatrix です。"

#: ../../source/inc/transform_matrix:14 ../../source/inc/transform_matrix:26
msgid "`x`, `y`, `z`"
msgstr "`x`, `y`, `z`"

#: ../../source/inc/transform_matrix:13
msgid "The amount to rotate around the origin, in degrees."
msgstr "原点を中心に回転数する度数法での量です。"

#: ../../source/inc/transform_matrix:16
msgid "The rotations are applied in order:"
msgstr "回転は以下の順で適用されます。 :"

#: ../../source/inc/transform_matrix:18
msgid "A clockwise rotation by `x` degrees in the Y/Z plane."
msgstr "Y/Z 面で `x` 度時計回りに回転します。"

#: ../../source/inc/transform_matrix:19
msgid "A clockwise rotation by `y` degrees in the Z/X plane."
msgstr "Z/X 面で `y` 度時計回りに回転します。"

#: ../../source/inc/transform_matrix:20
msgid "A clockwise rotation by `z` degrees in the X/Y plane."
msgstr "X/Y 面で `z` 度時計回りに回転します。"

#: ../../source/inc/transform_matrix:24
msgid "A TransformMatrix that returns a matrix that scales the displayable."
msgstr "Displayable をスケーリングする Matrix を返す TransformMatrix です。"

#: ../../source/inc/transform_matrix:27
msgid "The factor to scale each axis by."
msgstr "各軸に対するスケーリングファクターです。"

#: ../../source/3dstage.rst:285
msgid "Transform Properties"
msgstr "Transform プロパティー"

#: ../../source/3dstage.rst:287
msgid "The following transform properties are used by the 3D Stage."
msgstr "以下の transform プロパティーが 3D ステージで使用されます。"

#: ../../source/3dstage.rst:289
msgid ""
":tpref:`perspective`, :tpref:`matrixanchor`, :tpref:`matrixtransform`, :"
"tpref:`zpos`, :tpref:`zzoom`"
msgstr ""
":tpref:`perspective`, :tpref:`matrixanchor`, :tpref:`matrixtransform`, :"
"tpref:`zpos`, :tpref:`zzoom`"

#: ../../source/3dstage.rst:0
msgid "type"
msgstr "type"

#: ../../source/3dstage.rst:293
msgid "(position, position)"
msgstr "(position, position)"

#: ../../source/3dstage.rst:0
msgid "default"
msgstr "default"

#: ../../source/3dstage.rst:294
msgid "(0.5, 0.5)"
msgstr "(0.5, 0.5)"

#: ../../source/3dstage.rst:296
msgid ""
"This gives the position of the matrix anchor relative to the image. If the "
"variables are floats, this is relative to the size of the child, otherwise "
"it's absolute pixels."
msgstr ""
"画像に対する matrix アンカーの相対位置を指定します。変数が浮動小数なら、子の"
"サイズの割合で、そうでなければピクセル数での絶対値です。"

#: ../../source/3dstage.rst:300
msgid ""
"This sets the location of the (0, 0, 0) point that matrixtransform applies "
"its transform to."
msgstr ""
"これは matrixtransform がその transform に適用する (0, 0, 0) の点の場所を設定"
"します。"

#: ../../source/3dstage.rst:305
msgid "None or Matrix or TransformMatrix"
msgstr "None または Matrix または TransformMatrix"

#: ../../source/3dstage.rst:306
msgid "None"
msgstr "None"

#: ../../source/3dstage.rst:308
msgid ""
"If not None, this gives a matrix that is used to transform the vertices of "
"the child of the transform. The transformation goes from the coordinates "
"used by the screen to the coordinates used by the child of the transform."
msgstr ""
"None でなければ transform の子の頂点を変換する matrix を指定します。画面で使"
"用される座標から transform の子で使用される座標へ変換します。"

#: ../../source/3dstage.rst:312
msgid ""
"Interpolations involving this property are only supported when using a "
"TransformMatrix, and when the TransformMatrix values are structurally "
"similar, as described above."
msgstr ""
"このプロパティーを含む補間は、 TransformMatrix を使用する場合、および上記のよ"
"うに TransformMatrix の値が構造的に類似している場合にのみサポートされます。"

#: ../../source/3dstage.rst:318
msgid "True or False or Float or (Float, Float, Float)"
msgstr "True または False または浮動小数 or (浮動小数, 浮動小数, 浮動小数)"

#: ../../source/3dstage.rst:319 ../../source/3dstage.rst:352
msgid "False"
msgstr "False"

#: ../../source/3dstage.rst:321
msgid ""
"When applied to a transform, this enables perspective rendering. This takes "
"a triple, giving the near plane, z-distance to the 1:1 plane, and far plane."
msgstr ""
"transform を適用されると、遠近法でのレンダリングを有効にします。これは最近接"
"面、(訳注:画像サイズが ) 1:1になる面までの z距離、最遠方の面を指定する 3 つを"
"受け取ります。"

#: ../../source/3dstage.rst:325
msgid ""
"If a single float, the distances to the near and far planes are taken from :"
"var:`config.perspective`. If True, all three values are taken from that "
"variable."
msgstr ""
"浮動小数 1つなら最近接面と最遠方面までの距離は :var:`config.perspective` から"
"取られます。 True なら、 3つすべてがこの変数から取られます。"

#: ../../source/3dstage.rst:329
msgid ""
"When perspective is not false, the meaning of the :tpref:`xpos`, :tpref:"
"`ypos`, :tpref:`zpos`, and :tpref:`rotate` are inverted, providing the "
"effect of positioning the camera rather than the child."
msgstr ""
"perspective が False でなければ子ではなくカメラの方を配置移動するので :tpref:"
"`xpos` と :tpref:`ypos`, :tpref:`zpos` の意味は反転します。"

#: ../../source/3dstage.rst:333
msgid ""
"As the perspective transformation assumes it's aligned wiht the window, it "
"doesn't make sense to reposition it using :tpref:`xanchor`, and :tpref:"
"`yanchor`, or properties that set those, such as :tpref:`anchor`, :tpref:"
"`align`, :tpref:`center`, etc."
msgstr ""
"Perspective 効果はカメラとウィンドウが一致すると前提しているため、 :tpref:"
"`xanchor` や :tpref:`yanchor` および :tpref:`anchor`, :tpref:`align`, :tpref:"
"`center` のようなそれらを設定するプロパティーを使用しても効果はありません。"

#: ../../source/3dstage.rst:340
msgid "float"
msgstr "浮動小数"

#: ../../source/3dstage.rst:341
msgid "0"
msgstr "0"

#: ../../source/3dstage.rst:343
msgid ""
"This offsets the child along the z-axis. When perspective is false, this is "
"used directly, otherwise it is multiplied by -1 and used."
msgstr ""
"z軸に沿って子をオフセットします。 perspective が False なら、これは直接使用さ"
"れ、そうでなければ -1 を掛けて使用されます。"

#: ../../source/3dstage.rst:346
msgid ""
"If setting this causes the child to disappear, it's likely that the "
"transform is not being used with a displayable where zpos is False."
msgstr ""
"この設定で子が消える場合、その transform は displayable に使用されず、 zpos "
"は False になります。"

#: ../../source/3dstage.rst:351
msgid "bool"
msgstr "bool"

#: ../../source/3dstage.rst:354
msgid ""
"If this is true, the z-distance to the 1:1 plane (`zone`) is determined, "
"along with this displayable's zpos. The child is then scaled by (`zone` - "
"`zpos`) / `zone` in the x and y axes."
msgstr ""
"True なら、 1:1 になる面までのz距離 (`zone`) とこの Displayable の zpos が算"
"出され、その子はx, y方向に (`zone` - `zpos`) / `zone` でスケーリングされま"
"す。"

#: ../../source/3dstage.rst:358
msgid ""
"The intended use for this is in displaying a background with a negative "
"`zpos`, which would normally make the background small. Setting this to true "
"means that the background will be displayed at 1:1 size."
msgstr ""
"これは zpos が負で小さく表示される背景での使用を意図しています。 True に設定"
"すると背景は 1:1 のサイズで表示されます(訳注: zzoomをTrueにして背景のzposを負"
"にすると立ち絵の方を前に移動してサイズを変形しないでもカメラ移動時に遠近効果"
"が得られ、zposを最遠方面付近の非常に小さな数値にすれば実際の遠景のようにカメ"
"ラを動かしても影響の少ない背景を作成できます)。"

#~ msgid "`x`, `y`, `x`"
#~ msgstr "`x`, `y`, `x`"
