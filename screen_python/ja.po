# Japanese translation for renpy-doc
# Copyright (c) 2013 Rosetta Contributors and Canonical Ltd 2013
# This file is distributed under the same license as the renpy-doc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: renpy-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-12 18:27+0900\n"
"PO-Revision-Date: 2025-07-05 10:58+0900\n"
"Last-Translator: kyouryuukunn <akakyouryuu@gmail.com>\n"
"Language-Team: Japanese <ja@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2015-04-08 05:43+0000\n"
"X-Generator: Poedit 2.2.4\n"

#: ../../source/screen_python.rst:3
msgid "Screens and Python"
msgstr "スクリーンと Python"

#: ../../source/screen_python.rst:6
msgid "Screen Functions"
msgstr "スクリーン関数"

#: ../../source/screen_python.rst:8
msgid "The following functions support various operations related to screens."
msgstr "次の関数はスクリーンに関連する様々な処理をサポートします。"

#: ../../source/inc/screens:5
msgid "The programmatic equivalent of the call screen statement."
msgstr "プログラム的には call screen ステートメントに相当します。"

#: ../../source/inc/screens:7
msgid ""
"This shows `_screen_name` as a screen, then causes an interaction to occur. "
"The screen is hidden at the end of the interaction, and the result of the "
"interaction is returned."
msgstr ""
"これはスクリーンとして `_screen_name` を表示し、インタラクションを実行しま"
"す。スクリーンはインタラクションが終わると非表示になり、インタラクションの結"
"果が返されます。"

#: ../../source/inc/screens:11
msgid ""
"Positional arguments, and keyword arguments that do not begin with _ are "
"passed to the screen."
msgstr "_ で始まらない位置引数、キーワード引数はスクリーンに渡されます。"

#: ../../source/inc/screens:14
msgid ""
"If `_with_none` is false, \"with None\" is not run at the end of end of the "
"interaction."
msgstr ""
"キーワード引数 `_with_none` が False なら「 with None 」はインタラクションの"
"終わりに実行されません。"

#: ../../source/inc/screens:17
msgid ""
"If `_mode` is passed, it will be the mode of this interaction, otherwise the "
"mode will be \"screen\"."
msgstr ""
"キーワード引数 `_mode` があれば、それがこのインタラクションのモードになり、そ"
"うでなければ \"screen\" モードになります。"

#: ../../source/inc/screens:22
msgid ""
"Returns information about the screen currently being updated, rendered, or "
"processed."
msgstr "現在更新または描画、処理中のスクリーンに対する情報を返します。"

#: ../../source/inc/screens:25
msgid "See :func:`get_screen` for documented fields on the returned object."
msgstr ""
"返されたオブジェクトのドキュメントに記載されたフィールドは :func:"
"`get_screen` を参照してください。"

#: ../../source/inc/screens:29
msgid ""
"Given `bar_value`, a :class:`BarValue`, returns the :func:`ui.adjustment` it "
"uses. The adjustment has the following attributes defined:"
msgstr ""
"指定の `bar_value`, :class:`BarValue` から、使用している :func:`ui."
"adjustment` を返します。 adjustment には以下の定義された属性があります。:"

#: ../../source/inc/screens:34
msgid "The current value of the bar."
msgstr "バーの現在の値です。"

#: ../../source/inc/screens:38
msgid "The current range of the bar."
msgstr "バーの現在の範囲です。"

#: ../../source/inc/screens:42
msgid ""
"From the `screen` on `layer`, returns the displayable with `id`. Returns "
"None if the screen doesn't exist, or there is no widget with that id on the "
"screen."
msgstr ""
"`layer` 上の `screen` から `id` を持つ ウィジェットを返します。スクリーンが存"
"在しないか、そのスクリーン上にその id を持つウィジェットが存在しなければ "
"None を返します。"

#: ../../source/inc/screens:48
msgid ""
"Returns the properties for the displayable with `id` in the `screen` on "
"`layer`. If `screen` is None, returns the properties for the current screen. "
"This can be used from Python or property code inside a screen."
msgstr ""
"`layer` 上の `screen` にある `id` のウィジェットのプロパティーを返します。"
"`screen` が None なら、現在のスクリーンに対するプロパティーを返します。これ"
"は python やスクリーン内のプロパティーコードから使用出来ます。"

#: ../../source/inc/screens:53
msgid ""
"Note that this returns a dictionary containing the widget properties, and so "
"to get an individual property, the dictionary must be accessed."
msgstr ""
"これはそのウィジェットのプロパティーを持つ辞書を返すので、そこから各プロパ"
"ティーを所得出来ることに注意してください。"

#: ../../source/inc/screens:58
msgid ""
"Returns information about the screen with the given `name` on `layer`. "
"`name` is first interpreted as a tag name, and then as a screen name. If the "
"screen is not showing, returns None."
msgstr ""
"与えられた `name` を持つ `layer` 上のスクリーンの情報を返します。 `name` は画"
"像タグとして解釈され、なければスクリーンの名前と解釈されます。そのスクリーン"
"が表示されていなければ None が返されます。"

#: ../../source/inc/screens:62
msgid ""
"This can also take a list of names, in which case the first screen that is "
"showing is returned."
msgstr ""
"`name` は name のリストでもかまいません、その場合表示されている最初のスクリー"
"ンが返されます。"

#: ../../source/inc/screens:66
msgid "`tag_only`"
msgstr "`tag_only`"

#: ../../source/inc/screens:66
msgid "If true, only the tag is considered."
msgstr "True の場合、タグのみが考慮されます。"

#: ../../source/inc/screens:68
msgid "This function can be used to check whether a screen is showing::"
msgstr "この関数を使用してスクリーンが表示されているかチェック出来ます。例 ::"

#: ../../source/inc/screens:75
msgid ""
"The objects returned by this function have the following documented fields:"
msgstr ""
"この関数から返されたオブジェクトはフィールドのうち、次のフィールドを記載しま"
"す :"

#: ../../source/inc/screens:80
msgid "The layer the screen is being displayed on."
msgstr "スクリーンを表示するためのレイヤーです。"

#: ../../source/inc/screens:84 ../../source/inc/screens:101
msgid "The name of the screen."
msgstr "表示するスクリーンの名前です。"

#: ../../source/inc/screens:88
msgid "The zorder the screen is being displayed at."
msgstr "スクリーンが表示される zorder です。"

#: ../../source/inc/screens:92
msgid ""
"Like other similar functions, the object this returns is meant to be used in "
"the short term after the function is called. Including it in save data or "
"making it participate in rollback is not advised."
msgstr ""
"他の同様の関数と同様に、この関数が返すオブジェクトは、関数が呼び出されてから"
"の短期的な使用を意図しています。このオブジェクトのセーブデータへの保存やロー"
"ルバックへの参加は推奨されません。"

#: ../../source/inc/screens:98
msgid "Returns the docstring for the screen with `name` and `variant`."
msgstr "`name` と `variant` のスクリーンに対するの docstring をで返します。"

#: ../../source/inc/custom_sl:9 ../../source/inc/custom_sl:108
#: ../../source/inc/screens:100 ../../source/inc/screens:110
#: ../../source/inc/screens:147
msgid "`name`"
msgstr "`name`"

#: ../../source/inc/screens:102
msgid "`variant`"
msgstr "`variant`"

#: ../../source/inc/screens:103
msgid "The variant of the screen. If None, the default variant is used."
msgstr ""
"screen の variant です。 None なら、デフォルトの variant が使用されます。"

#: ../../source/inc/screens:107
msgid "Returns the value of a variable in the scope of a screen."
msgstr "スクリーンのスコープ内の変数の値を返します。"

#: ../../source/inc/screens:110
msgid "The name of the variable to return."
msgstr "返す変数の名前です。"

#: ../../source/inc/custom_sl:115 ../../source/inc/screens:116
#: ../../source/inc/screens:156
msgid "`screen`"
msgstr "`screen`"

#: ../../source/inc/screens:113 ../../source/inc/screens:153
msgid ""
"The name of the screen to return the variable from. If None, the current "
"screen is used. (The current screen is only defined when updating a screen, "
"and in actions that are run inside the screen.)"
msgstr ""
"変数を返すスクリーンの名前です。 None なら現在のスクリーンが使用されます(現在"
"のスクリーンはスクリーンの更新時とスクリーン内で実行されるアクション内でのみ"
"定義されます)。"

#: ../../source/inc/screens:118 ../../source/inc/screens:158
msgid "`layer`"
msgstr "`layer`"

#: ../../source/inc/screens:119 ../../source/inc/screens:159
msgid "The layer to find the screen on, if `screen` is not None."
msgstr "`screen` が None でなければスクリーンを探すためのレイヤーです。"

#: ../../source/inc/screens:123
msgid "The programmatic equivalent of the hide screen statement."
msgstr "プログラム的に hide screen ステートメントに相当します。"

#: ../../source/inc/screens:125
msgid "Hides the screen with `tag` on `layer`."
msgstr "`layer` 上の `tag` を持つスクリーンを非表示にします。"

#: ../../source/inc/screens:127
msgid ""
"If `immediately` is true, the screen is hidden immediately, without the 'on "
"hide' event."
msgstr ""
"`immediately` が True の場合、その screen はすぐに非表示になり、 `on hide` イ"
"ベントは発生しません。"

#: ../../source/inc/screens:131
msgid ""
"This attempts to focus the displayable with `id` in the screen `screen`. "
"Focusing will fail if the displayable isn't found, the window isn't focused, "
"or something else is grabbing focus."
msgstr ""
"`screen` 中の `id` を持つ displayable にフォーカスを試みます。これはその "
"Displayable が見つからなければ失敗し、そのウィンドウはフォーカスされないか、"
"他のものにフォーカスします。"

#: ../../source/inc/screens:135
msgid ""
"The focus may change if the mouse moves, even slightly, after this call is "
"processed."
msgstr ""
"この呼び出しが処理されると僅かでもマウスが移動するとフォーカスは変化します。"

#: ../../source/inc/screens:140
msgid ""
"Sets a variable to a value in the scope of a screen. Note that this will not "
"immediately update the variable's value - call :func:`renpy."
"restart_interaction` to cause the screen to be updated."
msgstr ""
"あるスクリーンのスコープにある変数の値を設定します。これは変数の値を即座には"
"更新しないことに注意してください。 :func:`renpy.restart_interaction` を呼び出"
"してアップデートしてください。"

#: ../../source/inc/screens:145
msgid ""
"The name of the variable to set. This should be a variable created with the :"
"ref:`sl-default` statement, as optimization may prevent changes to other "
"variables from being visible."
msgstr ""
"設定する変数名です。最適化が他の変数に対する変更を見えなくすることがあるた"
"め、これは :ref:`sl-default` ステートメントで作成された変数であるべきです。"

#: ../../source/inc/screens:150 ../../source/inc/ui:17
msgid "`value`"
msgstr "`value`"

#: ../../source/inc/screens:150
msgid "The value to set the variable to."
msgstr "変数を設定する値です。"

#: ../../source/inc/screens:163
msgid "The programmatic equivalent of the show screen statement."
msgstr "プログラム的には show screen ステートメントに相当します。"

#: ../../source/inc/screens:165
msgid "Shows the named screen. This takes the following keyword arguments:"
msgstr ""
"その名前のスクリーンを表示します。これは以下のキーワード引数を受け取りま"
"す。 :"

#: ../../source/inc/screens:167
msgid "`_screen_name`"
msgstr "`_screen_name`"

#: ../../source/inc/screens:168
msgid "The name of the screen to show."
msgstr "表示するスクリーンの名前です。"

#: ../../source/inc/screens:170
msgid "`_layer`"
msgstr "`_layer`"

#: ../../source/inc/screens:170
msgid ""
"The layer to show the screen on. This is equivalent to the ``onlayer`` "
"clause of the :ref:`show-screen-statement` statement."
msgstr ""
"スクリーンを表示するレイヤーです。これは :ref:`show-screen-statement` ステー"
"トメントの ``onlayer`` 節に相当します。"

#: ../../source/inc/screens:174
msgid "`_zorder`"
msgstr "`_zorder`"

#: ../../source/inc/screens:173
msgid ""
"The zorder to show the screen on. If not specified, defaults to the zorder "
"associated with the screen. If that's not specified, it is 0 by default."
msgstr ""
"スクリーンを表示する zorder です。指定されなければそのスクリーンのデフォルト"
"の zorder になります。それもなければ 0 になります。"

#: ../../source/inc/screens:181
msgid "`_tag`"
msgstr "`_tag`"

#: ../../source/inc/screens:177
msgid ""
"The tag to show the screen with. If not specified, defaults to the tag "
"associated with the screen. If that's not specified, defaults to the name of "
"the screen."
msgstr ""
"表示するスクリーンのタグになります。指定されなければそのスクリーンのデフォル"
"トのタグです。それもなければデフォルトでそのスクリーンの名前になります。"

#: ../../source/inc/screens:181
msgid ""
"This is equivalent to the ``as`` clause of the :ref:`show-screen-statement` "
"statement."
msgstr ""
"これは :ref:`show-screen-statement` ステートメントの ``as`` 節に相当します。"

#: ../../source/inc/screens:185
msgid "`_widget_properties`"
msgstr "`_widget_properties`"

#: ../../source/inc/screens:184
msgid ""
"A map from the id of a widget to a property name -> property value "
"dictionary. When a widget with that id is shown by the screen, the specified "
"properties are added to it."
msgstr ""
"ウィジェットの id をキーとする辞書であり、その値はプロパティー名をキーにその"
"値を値とする辞書です。その id のウィジェットがスクリーンによって表示される"
"と、指定したプロパティーがそこに追加されます。"

#: ../../source/inc/screens:189
msgid "`_transient`"
msgstr "`_transient`"

#: ../../source/inc/screens:188
msgid ""
"If true, the screen will be automatically hidden at the end of the current "
"interaction."
msgstr ""
"True ならスクリーンは現在のインタラクションが終わると自動的に非表示になりま"
"す。"

#: ../../source/inc/screens:191
msgid ""
"Non-keyword arguments, and keyword arguments that do not begin with an "
"underscore, are passed to the screen."
msgstr ""
"アンダースコア (_) で始まらない位置引数とキーワード引数はそのスクリーンに渡さ"
"れます。"

#: ../../source/inc/screens:196
msgid ""
"Causes Ren'Py to start predicting the screen named `_screen_name` with the "
"given arguments. This replaces any previous prediction of `_screen_name`. To "
"stop predicting a screen, call :func:`renpy.stop_predict_screen`."
msgstr ""
"`_screen_name` という名のスクリーンを指定された引数で表示したときの予測を "
"Ren'Py に開始させます。これは `_screen_name` の以前の予測を置き換えます。スク"
"リーンの予測を停止するためには :func:`renpy.stop_predict_screen` を呼び出して"
"ください。"

#: ../../source/inc/screens:200
msgid ""
"Prediction will occur during normal gameplay. To wait for prediction to "
"complete, use the `predict` argument to :func:`renpy.pause`."
msgstr ""
"予測は通常のゲームプレイ中ずっと発生します。予測の完了を待つには、 `predict` "
"引数に :func:`renpy.pause` を使用してください。"

#: ../../source/inc/screens:205
msgid "Causes Ren'Py to stop predicting the screen named `name`."
msgstr "`name` という名のスクリーンの予測を停止させます。"

#: ../../source/inc/screens:209
msgid ""
"Returns true if `name` is a screen variant that corresponds to the context "
"in which Ren'Py is currently executing. See :ref:`screen-variants` for more "
"details. This function can be used as the condition in an if statement to "
"switch behavior based on the selected screen variant."
msgstr ""
"`name` が現在 Ren'Py に実行されているスクリーン variant なら True を返しま"
"す。詳細は :ref:`screen-variants` を参考にしてください。この関数を if ステー"
"トメントで条件に使用して、選択したスクリーン variant に対して振る舞いを変更出"
"来ます。"

#: ../../source/inc/screens:214
msgid ""
"`name` can also be a list of variants, in which case this function returns "
"True if any of the variants would."
msgstr ""
"`name` はスクリーン variant のリストでもかまいません、その場合この関数はその"
"どのスクリーン variant が選択されても True を返します。"

#: ../../source/inc/ui:5
msgid ""
"Adjustment objects represent a value that can be adjusted by a bar or "
"viewport. They contain information about the value, the range of the value, "
"and how to adjust the value in small steps and large pages."
msgstr ""
"adjustment オブジェクトは bar や viewport によって調整される値を表します。こ"
"れは値や値の範囲、 step と page での値の調整法についての情報を含みます。"

#: ../../source/inc/ui:10
msgid ""
"The following parameters correspond to fields or properties on the "
"adjustment object:"
msgstr ""
"以下のパラメーターは adjustment オブジェクトのフィールドやプロパティーに対応"
"します。 :"

#: ../../source/inc/ui:14
msgid "`range`"
msgstr "`range`"

#: ../../source/inc/ui:14
msgid "The range of the adjustment, a number."
msgstr "adjustment の範囲で、数字です。"

#: ../../source/inc/ui:17
msgid "The value of the adjustment, a number."
msgstr "adjustment の値で、数字です。"

#: ../../source/inc/ui:24
msgid "`step`"
msgstr "`step`"

#: ../../source/inc/ui:20
msgid ""
"The step size of the adjustment, a number. If None, then defaults to 1/10th "
"of a page, if set. Otherwise, defaults to the 1/20th of the range."
msgstr ""
"adjustment の一つの step のサイズで、数字です。 None ならデフォルトでは page "
"が設定されていればその10分の1で、そうでなければ range の10分の1です。"

#: ../../source/inc/ui:24
msgid "This is used when scrolling a viewport with the mouse wheel."
msgstr "これはマウスホイールで viewport をスクロールするときに使用されます。"

#: ../../source/inc/ui:31
msgid "`page`"
msgstr "`page`"

#: ../../source/inc/ui:27
msgid ""
"The page size of the adjustment. If None, this is set automatically by a "
"viewport. If never set, defaults to 1/10th of the range."
msgstr ""
"adjustment の page あたりのサイズです。 None ならこれは viewport により自動的"
"に設定されます。もし設定されなければ、デフォルトで range の10分の1です。"

#: ../../source/inc/ui:31
msgid "It's can be used when clicking on a scrollbar."
msgstr "スクロールバーをクリックすると使用されます。"

#: ../../source/inc/ui:33
msgid "The following parameters control the behavior of the adjustment."
msgstr "以下のパラメーターは adjustment の動作を制御します。"

#: ../../source/inc/ui:41
msgid "`adjustable`"
msgstr "`adjustable`"

#: ../../source/inc/ui:36
msgid "If True, this adjustment can be changed by a bar. If False, it can't."
msgstr ""
"True ならこの adjustment はbar から変更できます。 False なら出来ません。"

#: ../../source/inc/ui:39
msgid ""
"It defaults to being adjustable if a `changed` function is given or if the "
"adjustment is associated with a viewport, and not adjustable otherwise."
msgstr ""
"デフォルトでは `changed` 関数が与えられているか adjustment が viewport に関連"
"づけられていれば変更可能で、そうでなければ出来ません。"

#: ../../source/inc/ui:45
msgid "`changed`"
msgstr "`changed`"

#: ../../source/inc/ui:44
msgid ""
"This function is called with the new value when the value of the adjustment "
"changes."
msgstr ""
"この関数は adjustment の値が変更されるとその新しい値を引数に呼び出されます。"

#: ../../source/inc/ui:51
msgid "`raw_changed`"
msgstr "`raw_changed`"

#: ../../source/inc/ui:48
msgid ""
"This function is called when the value of the adjustment changes. Unlike "
"`changed`, this function is called with the raw value, which may be out of "
"range. It's called with two arguments, the adjustment and the new value."
msgstr ""
"この関数は、 adjustment の値が変更されたときに呼び出されます。 `changed` とは"
"異なり、この関数は生の値を引数に呼び出されますが、これは範囲外である可能性が"
"あります。これは、 adjustment と新しい値の 2 つの引数で呼び出されます。"

#: ../../source/inc/ui:58
msgid "`ranged`"
msgstr "`ranged`"

#: ../../source/inc/ui:54
msgid ""
"This function is called with the adjustment object when the range of the "
"adjustment is set by a viewport."
msgstr ""
"この関数は adjustment の range が viewport によって設定されると adjustment オ"
"ブジェクトを引数に呼び出されます。"

#: ../../source/inc/ui:57
msgid ""
"This function may be called multiple times, as part of the layout process."
msgstr "レイアウトの過程でこの関数は複数回呼び出されます。"

#: ../../source/inc/ui:68
msgid "`force_step`"
msgstr "`force_step`"

#: ../../source/inc/ui:61
msgid ""
"If True and this adjustment changes by dragging associated viewport or a "
"bar, value will be changed only if the drag reached next step. If \"release"
"\" and this adjustment changes by dragging associated viewport or a bar, "
"after the release, value will be rounded to the nearest step. If False, this "
"adjustment will changes by dragging, ignoring the step value."
msgstr ""
"adjustment が viewport や bar に対応する draggable で変更され、かつこれが "
"True ならばドラッグが次のステップに達したときのみ値が変更されます。 "
"adjustment が viewport や bar に対応する draggable で変更され、かつこれが "
"\"release\" ならば、 draggable の解放時、値は最も近いステップに丸められま"
"す。 False ならばこの adjustment はステップの値を無視します。"

#: ../../source/inc/ui:72
msgid ""
"Changes the value of the adjustment to `value`, updating any bars and "
"viewports that use the adjustment."
msgstr ""
"adjustment の値を `value` に変更し、その adjustment を使用しているすべての "
"bar や viewport が更新されます。"

#: ../../source/inc/ui:77
msgid ""
"Causes an interaction with the user, and returns the result of that "
"interaction. This causes Ren'Py to redraw the screen and begin processing "
"input events. When a displayable returns a value in response to an event, "
"that value is returned from ui.interact, and the interaction ends."
msgstr ""
"ユーザーとのインタラクションを起し、その結果を返します。これは Ren'Py にスク"
"リーンを再描画させ入力イベントの処理を開始します。 displayable がイベントに対"
"して値を返すと、その値は ui.interact から返され、インタラクションは終了しま"
"す。"

#: ../../source/inc/ui:82
msgid ""
"This function is rarely called directly. It is usually called by other parts "
"of Ren'Py, including the say statement, menu statement, with statement, "
"pause statement, call screen, :func:`renpy.input`, among many other "
"functions. However, it can be called directly if necessary."
msgstr ""
"この関数は滅多に直接呼び出されません。 say ステートメントや menu, with "
"pause, call screen ステートメント含む Ren'Py の一部、 :func:`renpy.input` な"
"どの多くの関数から通常呼び出されます。しかし必要なら直接呼び出せます。"

#: ../../source/inc/ui:87
msgid ""
"When an interaction ends, the transient layer and all screens shown with "
"`_transient` as true are cleared from the scene lists."
msgstr ""
"インタラクション終了時、 transient レイヤーと `transient` が True として表示"
"されたすべてのスクリーンはそのシーンリストから除去されます。"

#: ../../source/inc/ui:90
msgid ""
"The following arguments are documented. As other, undocumented arguments "
"exist for Ren'Py's internal use, please pass all arguments as keyword "
"arguments."
msgstr ""
"以下の引数はドキュメントに記載されています。ドキュメントに記載されていない引"
"数は Ren'Py 内部で使用するために存在するのですべての引数はキーワード引数とし"
"て渡してください。"

#: ../../source/inc/ui:98
msgid "`roll_forward`"
msgstr "`roll_forward`"

#: ../../source/inc/ui:95
msgid ""
"The information that will be returned by this function when a roll forward "
"occurs. (If None, the roll forward is ignored.) This should usually be "
"passed the result of the :func:`renpy.roll_forward_info` function."
msgstr ""
"ロールバック時にこの関数から返される情報です( None ならロールフォワードは無視"
"されます)。これには通常 :func:`renpy.roll_forward_info` 関数の結果が渡される"
"はずです。"

#: ../../source/inc/ui:100
msgid "`mouse`"
msgstr "`mouse`"

#: ../../source/inc/ui:101
msgid "The style of mouse cursor to use during this function."
msgstr "この関数を実行中のマウスカーソルのスタイルです。"

#: ../../source/screen_python.rst:15
msgid "Actions"
msgstr "アクション"

#: ../../source/screen_python.rst:17
msgid ""
"Many of the displayables created in the screen language take actions as "
"arguments. An action is one of three things:"
msgstr ""
"スクリーン言語で作成された displayable の多くは引数としてアクションを受け取り"
"ます。アクションは以下の三つのうちいずれかです。 :"

#: ../../source/screen_python.rst:20
msgid ""
"A callable Python object (like a function or bound method) that takes no "
"arguments."
msgstr ""
"引数を受け取らない呼び出し可能な ( 関数や bound method のような ) python オブ"
"ジェクト"

#: ../../source/screen_python.rst:22
msgid "An object of a class that inherits from the Action class."
msgstr "Action クラスを継承するクラスのオブジェクト"

#: ../../source/screen_python.rst:23
msgid "A list of other Actions."
msgstr "他のアクションのリスト"

#: ../../source/screen_python.rst:25
msgid ""
"The advantage to inheriting from the Action class is that it allows you to "
"override the methods that determine when a button should be sensitive, and "
"when it is selected."
msgstr ""
"Action クラスを継承する利点はボタンが有効か、選択されているかを設定するメソッ"
"ドを上書き可能なことです。"

#: ../../source/screen_python.rst:31
msgid ""
"To define a new action, inherit from this class. Override the methods in "
"this class to change the behavior of the action."
msgstr ""
"新しいアクションを定義するためにはこのクラスを継承してください。アクションの"
"動作を変更するためにはこのクラスのメソッドを上書きしてください。"

#: ../../source/screen_python.rst:36
msgid ""
"This is the method that is called when the action is activated. In many "
"cases, returning a non-None value from the action will cause the current "
"interaction to end."
msgstr ""
"これはアクションがアクティベートされると呼び出されるメソッドです。多くの場合 "
"None でない値を返すと、現在のインタラクションが終了します。"

#: ../../source/screen_python.rst:40
msgid ""
"This method must be overridden, as the default method will raise a "
"NotImplementedError (and hence cause Ren'Py to report an error)."
msgstr ""
"このメソッドはデフォルトでは NotImplemented の例外を出す ( Ren'Py にエラーを"
"報告させる ) ため、上書きする必要があります。"

#: ../../source/screen_python.rst:46
msgid ""
"This is called to determine if the button with this action should be "
"sensitive. It should return true if the button is sensitive."
msgstr ""
"これはこのアクションに関連づけられたボタンが有効かどうかを決定するために呼び"
"出されます。ボタンが有効なら True を返すべきです。"

#: ../../source/screen_python.rst:50
msgid "Note that __call__ can be called, even if this returns False."
msgstr "これが False を返しても __call__ は実行されることに注意してください。"

#: ../../source/screen_python.rst:52
msgid "The default implementation returns True."
msgstr "デフォルトでは True を返します。"

#: ../../source/screen_python.rst:56
msgid ""
"This should return true if the button should be rendered as a selected "
"button, and false otherwise."
msgstr ""
"これはボタンが選択された状態でレンダリングされるべきなら True を返し、そうで"
"ないなら False を返すべきです。"

#: ../../source/screen_python.rst:59
msgid "The default implementation returns False."
msgstr "デフォルトの実装では False を返します。"

#: ../../source/screen_python.rst:63 ../../source/screen_python.rst:137
msgid ""
"This gets a default tooltip for this button, if a specific tooltip is not "
"assigned. It should return the tooltip value, or None if a tooltip is not "
"known."
msgstr ""
"特定のツールチップが代入されていなければこのボタンのデフォルトのツールチップ"
"を所得します。ツールチップの値または ツールチップが分からなければ None を返し"
"ます。"

#: ../../source/screen_python.rst:67 ../../source/screen_python.rst:141
msgid "This defaults to returning None."
msgstr "デフォルトでは None を返します。"

#: ../../source/screen_python.rst:71
msgid ""
"This method is called once at the start of each interaction, and then is "
"called periodically thereafter. If it returns a number, it will be called "
"before that many seconds elapse, but it might be called sooner."
msgstr ""
"このメソッドは各インタラクションが開始されると一旦呼び出され、その後も継続的"
"に呼び出されます。数字を返すとその秒数が経過すると、そうでないならすぐに呼び"
"出されます。"

#: ../../source/screen_python.rst:76
msgid ""
"The main use of this is to call :func:`renpy.restart_interaction` if the "
"value of get_selected or get_sensitive should change."
msgstr ""
"これの主な使用法は get_selected や get_sensitive の値が変更されたら :func:"
"`renpy.restart_interaction`  を呼び出すことです。"

#: ../../source/screen_python.rst:80
msgid "It takes one argument:"
msgstr "引数を一つ受け取ります。"

#: ../../source/screen_python.rst:83
msgid "`st`"
msgstr "`st`"

#: ../../source/screen_python.rst:83
msgid ""
"The number of seconds since the screen or displayable this action is "
"associated with was first shown."
msgstr ""
"このアクションに関連づけられたスクリーンか displayable が最初に表示されてから"
"の秒数です。"

#: ../../source/screen_python.rst:88
msgid ""
"When the action is used as the `hovered` parameter to a button (or similar "
"object), this method is called when the object loses focus."
msgstr ""
"アクションがボタン ( または同様なオブジェクト ) への `hovered` パラメーターと"
"して使用されると、このメソッドはそのオブジェクトがフォーカスを失うと呼び出さ"
"れます。"

#: ../../source/screen_python.rst:93
msgid ""
"The text-to-speech text used for buttons that use this Action, if the button "
"does not have the :propref:`alt` property set. This can set to a string in "
"the class, or in the constructor, or it can be a Python property that "
"returns a string."
msgstr ""
"このアクションを使用するボタンに :propref:`alt` プロパティーが設定されていな"
"ければ、そのボタンに対して読み上げられるテキストとなります。これはそのクラス"
"やそのコンストラクターの文字列、文字列を返す python プロパティーにできます。"

#: ../../source/screen_python.rst:98
msgid "To run an action from Python, use :func:`renpy.run`."
msgstr ""
"pythonからアクションを実行するには :func:`renpy.run` を使用してください。"

#: ../../source/inc/run:5
msgid ""
"Returns a true value if the provided action or list of actions indicates it "
"is selected, and false otherwise."
msgstr ""
"提供された action や action のリストが選択状態なら True を返し、そうでないな"
"ら False を返します。"

#: ../../source/inc/run:10
msgid ""
"Returns a true value if the provided action or list of actions indicates it "
"is sensitive, and false otherwise."
msgstr ""
"提供された action や action のリストが選択可能状態なら True を返し、そうでな"
"いなら False を返します。"

#: ../../source/inc/run:15
msgid ""
"Run an action or list of actions. A single action is called with no "
"arguments, a list of actions is run in order using this function, and None "
"is ignored."
msgstr ""
"アクションまたはアクションのリストを実行します。単体のアクションは引数なしで"
"呼び出され、アクションのリストはこの関数で順番に実行されます。 None は無視さ"
"れます。"

#: ../../source/inc/run:19
msgid "Returns the result of the last action to return a value."
msgstr "最後のアクションの結果の値を返します。"

#: ../../source/screen_python.rst:103
msgid "BarValues"
msgstr "BarValue"

#: ../../source/screen_python.rst:105
msgid ""
"When creating a bar, vbar, or hotbar, a BarValue object can be supplied as "
"the `value` property. Methods on the BarValue object are called to get the "
"adjustment and styles."
msgstr ""
"bar, vbar または hotbar 作成時に BarValue オブジェクトは `value` 引数に提供さ"
"れます。 BarValue オブジェクトのメソッドは adjustment やスタイルを得るために"
"呼び出されます。"

#: ../../source/screen_python.rst:112
msgid ""
"To define a new BarValue, inherit from this class and override some of the "
"methods."
msgstr ""
"新しい BarValue を定義するためには、このクラスを継承してそのメソッドを上書き"
"してください。"

#: ../../source/screen_python.rst:117
msgid ""
"This method is called to get an adjustment object for the bar. It should "
"create the adjustment with :func:`ui.adjustment`, and then return the object "
"created this way."
msgstr ""
"このメソッドは bar の adjustment オブジェクトを得るために呼び出されます。 :"
"func:`ui.adjustment` で adjustment を作成し、作成されたオブジェクトを返しま"
"す。"

#: ../../source/screen_python.rst:122
msgid ""
"This method must be overridden, as the default method will raise "
"NotImplementedError (and hence cause Ren'Py to report an error)."
msgstr ""
"このメソッドはデフォルトでは NotImplemented の例外を出す ( Ren'Py にエラーを"
"報告させる ) ため、上書きする必要があります。"

#: ../../source/screen_python.rst:128
msgid ""
"This is used to determine the style of bars that use this value. It should "
"return a tuple of two style names or style objects. The first is used for a "
"bar, and the second for vbar."
msgstr ""
"これはこの値を使用する bar  のスタイルを決定するために使用されます。二つのス"
"タイル名か、 style オブジェクトのタプルを返すべきです。第 一要素は bar に、第"
"二要素は vbar に使用されます。 :"

#: ../../source/screen_python.rst:133
msgid "This defaults to (\"bar\", \"vbar\")."
msgstr "これはデフォルトで (\"bar\", \"vbar\") です。"

#: ../../source/screen_python.rst:145
msgid ""
"This is called when a BarValue replaces another BarValue, such as when a "
"screen is updated. It can be used to update this BarValue from the other. It "
"is called before get_adjustment."
msgstr ""
"これはスクリーンが更新される時のように、 BarValue が他の BarValue を置き換え"
"るときに呼び出され、 other からこの BarValue に更新するために使用されます。 "
"get_adjustment より前に、呼び出されます。"

#: ../../source/screen_python.rst:149
msgid "Note that `other` is not necessarily the same type as `self`."
msgstr "`other` は `self` と同じ型である必要はありません。"

#: ../../source/screen_python.rst:153
msgid ""
"This method is called once at the start of each interaction. If it returns a "
"number of seconds, it will be called before that many seconds elapse, but it "
"might be called sooner. It is called after get_adjustment."
msgstr ""
"このメソッドは各インタラクションの開始時に一度呼び出され、秒数の数字を返すと"
"その時間が経過した後に、そうでなければすぐに再び呼び出されます。 これは "
"get_adjustment の後に呼び出されます。"

#: ../../source/screen_python.rst:158
msgid ""
"It can be used to update the value of the bar over time, like :func:"
"`AnimatedValue` does. To do this, get_adjustment should store the "
"adjustment, and periodic should call the adjustment's changed method."
msgstr ""
":func:`AnimatedValue` のように時間につれて bar の値を更新するために使用されま"
"す。このためには、 get_adjustment で adjustment を保持し、 periodic で "
"adjustment の changed メソッドを呼び出すべきです。"

#: ../../source/screen_python.rst:165
msgid ""
"The text-to-speech text used for bars that use this BarValue, if the bar "
"does not have the :propref:`alt` property set. This can set to a string in "
"the class, or in the constructor, or it can be a Python property that "
"returns a string."
msgstr ""
"この BarValue を使用するボタンに :propref:`alt` プロパティーが設定されていな"
"ければ、そのバーに対して読み上げられるテキストとなります。これはそのクラスや"
"そのコンストラクターの文字列、文字列を返す python プロパティーにできます。"

#: ../../source/screen_python.rst:172
msgid "InputValue"
msgstr "InputValue"

#: ../../source/screen_python.rst:174
msgid ""
"When creating an input, an InputValue object can be supplied as the `value` "
"property. Methods on the InputValue object are called to get and set the "
"text, determine if the input is editable, and handle the enter key being "
"pressed."
msgstr ""
"input 作成時に、 InputValue オブジェクトは `value` プロパティーとして提供され"
"ます。 InputValue オブジェクトのメソッドは テキストの設定と所得、編集可能かど"
"うか、エンターキーが押されたときの処理を決定するために呼び出されます。"

#: ../../source/screen_python.rst:181
msgid ""
"To define a new InputValue, inherit from this class, override some or all of "
"the methods, and set the value of the default field."
msgstr ""
"新しい InputValue を定義するためには、このクラスを継承してそのメソッドを上書"
"きしてください。"

#: ../../source/screen_python.rst:187
msgid "If not true, disables the input field from being editable at all."
msgstr "True でないならば、入力欄を無効化します。"

#: ../../source/screen_python.rst:191
msgid ""
"If true, the input is eligible to be editable by default. (That is, it may "
"be given the caret when the screen is shown.)"
msgstr ""
"Trueなら、input はデフォルトで編集可能な状態です(スクリーン表示時に、キャレッ"
"トが与えられます)。"

#: ../../source/screen_python.rst:196
msgid "Returns the default text of the input. This must be implemented."
msgstr "入力されたテキストを返します。これは実装されなければいけません。"

#: ../../source/screen_python.rst:200
msgid ""
"Called when the text of the input is changed, with the new text. This must "
"be implemented."
msgstr ""
"入力されたテキストが変更されると、新しいテキストで呼び出されます。これは実装"
"されなければいけません。"

#: ../../source/screen_python.rst:205
msgid ""
"Called when the user presses enter. If this returns a non-None value, that "
"value is returned from the interaction. This may also raise :exc:`renpy."
"IgnoreEvent` to ignore the press. Otherwise, the enter-press is propagated "
"to other displayables."
msgstr ""
"ユーザーがエンターを押すと呼び出されます。これが None 以外を返すと、その値が"
"インタラクションから返されます。これは :exc:`renpy.IgnoreEvent()` イベントを"
"投げて押下を無視させられます。そうでなければ、他の displayable にエンターキー"
"の押下が伝達されます。"

#: ../../source/screen_python.rst:210
msgid "The following actions are available as methods on InputValue:"
msgstr "以下のアクションは InputValue で利用可能なメソッドです。 :"

#: ../../source/screen_python.rst:214
msgid "Returns an action that enables text editing on the input."
msgstr "テキストを編集可能にするアクションを返します。"

#: ../../source/screen_python.rst:218
msgid "Returns an action that disables text editing on the input."
msgstr "テキストを編集不能にするアクションを返します。"

#: ../../source/screen_python.rst:222
msgid "Returns an action that toggles text editing on the input."
msgstr "テキストが編集可能かをトグルするアクションを返します。"

#: ../../source/screen_python.rst:228
msgid "Creator-Defined Screen Language Statements"
msgstr "ユーザー定義スクリーン言語ステートメント"

#: ../../source/screen_python.rst:230
msgid ""
"Ren'Py supports defining custom screen language statements. Creator-defined "
"screen language statements are wrappers for the screen language :ref:`use "
"statement <sl-use>`. Positional arguments remain positional arguments, "
"properties become keyword arguments, and if the statement takes a block, so "
"does the use statement. For example, the custom screen language statement::"
msgstr ""
"Ren'Py はユーザー定義スクリーン言語ステートメントをサポートしています。ユー"
"ザー定義スクリーン言語ステートメントはスクリーン言語の :ref:`use ステートメン"
"ト <sl-use>` に対するラッパーです。位置引数はそのまま位置引数になり、プロパ"
"ティーはキーワード引数になり、ステートメントがブロックを受け取ると、use ス"
"テートメント同様に処理します。例えば次のユーザー定義スクリーン言語ステートメ"
"ントは ::"

#: ../../source/screen_python.rst:241
msgid "becomes::"
msgstr "こうなります。 ::"

#: ../../source/screen_python.rst:246
msgid ""
"Creator-defined screen language statements must be registered in a ``python "
"early`` block. What's more, the filename containing the creator-defined "
"statement must be be loaded earlier than any file that uses it. Since Ren'Py "
"loads files in the Unicode sort order of their paths, it generally makes "
"sense to prefix the name of any file registering a user-defined statement "
"with 01, or some other small number."
msgstr ""
"ユーザー定義スクリーン言語ステートメントは ``python early`` ブロックで登録さ"
"れなければなりません。また、そのユーザー定義ステートメントがあるファイル名は"
"それを使用するどのファイルよりも先に読み込まれなけれなければなりません。"
"Ren'Py はファイルをパスのユニコード順に読み込むので、ユーザー定義ステートメン"
"トを登録するファイル名の先頭に 01 や小さい数を付けるとよいです。"

#: ../../source/screen_python.rst:252
msgid ""
"Creator-defined screen language statements are registered with the renpy."
"register_sl_statement function:"
msgstr ""
"ユーザー定義スクリーン言語ステートメント renpy.register_sl_statement 関数で登"
"録されます。 :"

#: ../../source/inc/custom_sl:5
msgid "Registers a screen language statement that creates a displayable."
msgstr ""
"displayable を作成するユーザー定義のスクリーン言語ステートメントを登録しま"
"す。"

#: ../../source/inc/custom_sl:8
msgid ""
"The name of the screen language statement, a string containing a Ren'Py "
"keyword. This keyword is used to introduce the new statement."
msgstr ""
"スクリーン言語ステートメントの名前でと Ren'Py のキーワードを含む文字列です。"
"このキーワードは新しいステートメントを導入するために使用されます。"

#: ../../source/inc/custom_sl:20
msgid "`displayable`"
msgstr "`displayable`"

#: ../../source/inc/custom_sl:12
msgid ""
"This is a function that, when called, returns a displayable object. All "
"position arguments, properties, and style properties are passed as arguments "
"to this function. Other keyword arguments are also given to this function, a "
"described below."
msgstr ""
"これは関数で、呼び出されると displayable オブジェクトを返します。すべての位置"
"引数、プロパティーとスタイルプロパティーはこの関数へ引数として渡されます。そ"
"の他のキーワード引数も以下のようにこの関数へ渡されます。"

#: ../../source/inc/custom_sl:17
msgid ""
"This must return a Displayable. If it returns multiple displayables, the "
"_main attribute of the outermost displayable should be set to the \"main\" "
"displayable - the one that children should be added to."
msgstr ""
"これは displayable を返すべきです。 複数の displayable を返すと最も外側の "
"displayable の _main 属性が \"main\" displayable に設定され、子はこれに追加さ"
"れます。"

#: ../../source/inc/custom_sl:26
msgid "`style`"
msgstr "`style`"

#: ../../source/inc/custom_sl:23
msgid ""
"The base name of the style of this displayable. If the style property is not "
"given, this will have the style prefix added to it. The computed style is "
"passed to the `displayable` function as the ``style`` keyword argument."
msgstr ""
"この displayable のスタイルのベース名です。 スタイルプロパティーが指定されな"
"いと、これにスタイル接頭辞を追加します。結果のスタイルが `displayable` 関数"
"に ``style`` キーワード引数として渡されます。"

#: ../../source/inc/custom_sl:38
msgid "`nchildren`"
msgstr "`nchildren`"

#: ../../source/inc/custom_sl:29
msgid "The number of children of this displayable. One of:"
msgstr "この displayable の子の数で、次のうちのひとつです。 :"

#: ../../source/inc/custom_sl:31
msgid "0"
msgstr "0"

#: ../../source/inc/custom_sl:32
msgid "The displayable takes no children."
msgstr "displayable は子を受け取りません。"

#: ../../source/inc/custom_sl:34
msgid "1"
msgstr "1"

#: ../../source/inc/custom_sl:34
msgid ""
"The displayable takes 1 child. If more than one child is given, the children "
"are placed in a Fixed."
msgstr ""
"displayable はひとつ子を受け取ります。ひとつ以上の子が与えられると、子は "
"Fixed に配置されます。"

#: ../../source/inc/custom_sl:38
msgid "\"many\""
msgstr "\"many\""

#: ../../source/inc/custom_sl:37
msgid "The displayable takes more than one child."
msgstr "displayable ひとつ以上の子を受け取ります。"

#: ../../source/inc/custom_sl:42
msgid "`unique`"
msgstr "`unique`"

#: ../../source/inc/custom_sl:41
msgid ""
"This should be set to true if the function returns a  displayable with no "
"other references to it."
msgstr ""
"関数が他のどこからも参照されない Displayable を返すなら True にするべきです。"

#: ../../source/inc/custom_sl:44
msgid "The following arguments should be passed in using keyword arguments:"
msgstr "以下の引数はキーワード引数を使って渡されるべきです。"

#: ../../source/inc/custom_sl:48
msgid "`replaces`"
msgstr "`replaces`"

#: ../../source/inc/custom_sl:47
msgid ""
"If true, and the displayable replaces a prior displayable, that displayable "
"is passed as a parameter to the new displayable."
msgstr ""
"True で、 displayable が以前の displayable を置き換えるなら、新しい "
"displayable に対するパラメーターとしてその displayable は渡されます。"

#: ../../source/inc/custom_sl:51
msgid "`default_keywords`"
msgstr "`default_keywords`"

#: ../../source/inc/custom_sl:51
msgid "The default set of keyword arguments to supply to the displayable."
msgstr "その displayable に与えられるキーワード引数のデフォルトの設定です。"

#: ../../source/inc/custom_sl:54
msgid "`default_properties`"
msgstr "`default_properties`"

#: ../../source/inc/custom_sl:54
msgid "If true, the ui and position properties are added by default."
msgstr "True なら ui と position プロパティーがデフォルトで追加されます。"

#: ../../source/inc/custom_sl:56
msgid ""
"Returns an object that can have positional arguments and properties added to "
"it by calling the following methods. Each of these methods returns the "
"object it is called on, allowing methods to be chained together."
msgstr ""
"以下のメソッドを呼び出して、追加する位置引数とプロパティーを指定出来るオブ"
"ジェクトを返します。それらの各メソッドは同様に呼び出せるオブジェクトを返し、"
"メソッドをひとつなぎに出来ます。"

#: ../../source/inc/custom_sl:63
msgid "Adds a positional argument with `name`"
msgstr "`name` の位置引数を追加します。"

#: ../../source/inc/custom_sl:67
msgid ""
"Adds a property with `name`. Properties are passed as keyword arguments."
msgstr ""
"`name` のプロパティーを追加します。プロパティーはキーワード引数として渡されま"
"す。"

#: ../../source/inc/custom_sl:72
msgid ""
"Adds a family of properties, ending with `name` and prefixed with the "
"various style property prefixes. For example, if called with (\"size\"), "
"this will define size, idle_size, hover_size, etc."
msgstr ""
"`name` で終り、さまざまなスタイルプロパティー接頭辞を接頭辞にするプロパティー"
"の一群を追加します。例えば (\"size\") で呼び出されると、size, idle_size, "
"hover_size などを定義します。"

#: ../../source/inc/custom_sl:78
msgid ""
"Adds a family of properties with names consisting of `prefix`, a style "
"property prefix, and `name`. For example, if called with a prefix of `text_` "
"and a name of `size`, this will create text_size, text_idle_size, "
"text_hover_size, etc."
msgstr ""
"`prefix` とスタイルプロパティーの接頭辞、 `name` で構成された名前を持つプロパ"
"ティーの一群を追加します。例えば prefix が `text_` name  が `size` で呼び出さ"
"れると、これは text_size, text_idle_size, text_hover_size などを作成します。"

#: ../../source/inc/custom_sl:85
msgid ""
"Adds a group of properties, prefixed with `prefix`. `Group` may be one of "
"the strings:"
msgstr ""
"`prefix` を接頭辞に持つプロパティーのグループを追加します。 `Group` は次の文"
"字列のうちの一つです。 :"

#: ../../source/inc/custom_sl:88
msgid "\"bar\""
msgstr "\"bar\""

#: ../../source/inc/custom_sl:89
msgid "\"box\""
msgstr "\"box\""

#: ../../source/inc/custom_sl:90
msgid "\"button\""
msgstr "\"button\""

#: ../../source/inc/custom_sl:91
msgid "\"position\""
msgstr "\"position\""

#: ../../source/inc/custom_sl:92
msgid "\"text\""
msgstr "\"text\""

#: ../../source/inc/custom_sl:93
msgid "\"window\""
msgstr "\"window\""

#: ../../source/inc/custom_sl:95
msgid ""
"These correspond to groups of :doc:`style_properties`. Group can also be \"ui"
"\", in which case it adds the :ref:`common ui properties <common-"
"properties>`."
msgstr ""
"これらは :doc:`style_properties` のグループに対応します。グループは \"ui\" に"
"も出来、その場合 :ref:`共通のUIプロパティー <common-properties>` を追加しま"
"す。"

#: ../../source/inc/custom_sl:100
msgid ""
"Adds all styles and positional/keyword arguments that can be passed to the "
"`name` screen statement."
msgstr ""
"`name` スクリーンステートメントに渡せるすべてのスタイルと位置引数、キーワード"
"引数を追加します。"

#: ../../source/inc/custom_sl:104
msgid "Registers a custom screen language statement with Ren'Py."
msgstr "Ren'Py にユーザー定義のスクリーン言語ステートメントを登録します。"

#: ../../source/inc/custom_sl:107
msgid ""
"This must be a word. It's the name of the custom screen language statement."
msgstr ""
"これは単語でなくてはいけません。そのユーザー定義スクリーン言語ステートメント"
"の名前になります。"

#: ../../source/inc/custom_sl:112
msgid "`children`"
msgstr "`children`"

#: ../../source/inc/custom_sl:111
msgid ""
"The number of children this custom statement takes. This should be 0, 1, or "
"\"many\", which means zero or more."
msgstr ""
"このユーザー定義ステートメントが受け取る子の数です。これは 0, 1 または 0 以上"
"を表す \"many\" であるべきです。"

#: ../../source/inc/custom_sl:115
msgid "The screen to use. If not given, defaults to `name`."
msgstr "使用するスクリーンです。未指定では `name` になります。"

#: ../../source/inc/custom_sl:117
msgid ""
"Returns an object that can have positional arguments and properties added to "
"it. This object has the same .add_ methods as the objects returned by :class:"
"`renpy.register_sl_displayable`."
msgstr ""
"追加する位置引数とプロパティーを指定出来るオブジェクトを返します。このオブ"
"ジェクトは  :class:`renpy.register_sl_displayable` が返すオブジェクト同様に "
" .add_ メソッドを持ちます。"

#: ../../source/screen_python.rst:257
msgid ""
"As an example of a creator-defined screen language statement, here's an "
"implementation of the ``titledwindow`` statement given above. First, the "
"statement must be registered in a ``python early`` block in a file that is "
"loaded early – a name like 01custom.rpy will often load soon enough. The "
"registration call looks like::"
msgstr ""
"ユーザー定義スクリーン言語ステートメントの例として、上記で指定した "
"``titlewindow`` ステートメントの実装を示します。先ず、 01custom.rpy のような"
"初期に読み込まれるファイルの ``python early`` ブロックでステートメントは登録"
"されなければなりません。以下のように登録します。 ::"

#: ../../source/screen_python.rst:267
msgid ""
"Then, we define a screen that implements the custom statement. This screen "
"can be defined in any file. One such screen is::"
msgstr ""
"次にユーザー定義ステートメントを実装するスクリーンを定義します。このスクリー"
"ンはどのファイルでも定義出来ます。そのようなスクリーンの 1 例です。 ::"

#: ../../source/screen_python.rst:290
msgid ""
"When are used large property groups like a `add_property_group`, it makes "
"sense to use the \\*\\*properties syntax with a properties keyword in some "
"place. For example::"
msgstr ""
"`add_property_group` のような大きなプロパティ―グループを使用するなら、 \\*"
"\\*properties シンタックスを使用してどこかに properties キーワードを使うとよ"
"いです。例 ::"

#: ../../source/screen_python.rst:312
msgid ""
"Custom defined screen language statements support the ``as`` clause, which "
"takes the name of the variable. If present, this variable will be assigned "
"the value of `main` in the scope of the screen."
msgstr ""
"ユーザー定義のスクリーン言語ステートメントは、変数の名前を取る ``as`` 節をサ"
"ポートします。存在する場合、この変数はそのスクリーンのスコープ内の `main` の"
"値に割り当てられます。"

#~ msgid ""
#~ "This method must be overridden, as the default method will raise a "
#~ "NotImplemented exception (and hence cause Ren'Py to report an error)."
#~ msgstr ""
#~ "このメソッドはデフォルトでは NotImplemented の例外を出す ( Ren'Py にエラー"
#~ "を報告させる ) ため、上書きする必要があります。"

#~ msgid "`ScreenDisplayable.layer`"
#~ msgstr "`ScreenDisplayable.layer`"

#~ msgid "`ScreenDisplayable.name`"
#~ msgstr "`ScreenDisplayable.name`"

#~ msgid "`ScreenDisplayable.zorder`"
#~ msgstr "`ScreenDisplayable.zorder`"

#~ msgid ""
#~ "Ren'Py supports defining screens in Python, as well as in the Ren'Py "
#~ "screen language. A Python screen is created by supplying a screen "
#~ "function to the :func:`renpy.define_screen` function. It can then be used "
#~ "like it was any other screen."
#~ msgstr ""
#~ "スクリーン言語同様に Ren'Py は python でのスクリーンの定義をサポートしま"
#~ "す。 python でのスクリーンはスクリーン関数を :func:`renpy.define_screen` "
#~ "に与えて作成され、どんなスクリーンにも使用できます。"

#~ msgid ""
#~ "The screen function should have parameters corresponding to the scope "
#~ "variables it expects, and it should ignore extra keyword arguments. (That "
#~ "is, it should have `**kwargs` at the end of its parameter list.) It is "
#~ "then expected to call the UI functions to add displayables to the screen."
#~ "The screen function is called whenever an interaction starts or restarts."
#~ msgstr ""
#~ "スクリーン関数は期待するスコープ変数に対する引数を受け取り、それ以外のキー"
#~ "ワード引数は無視するべきです( それ故その引数の末尾には `**kwargs` を持つべ"
#~ "きです)。UI 関数を呼び出してスクリーンに displayable を追加します。スク"
#~ "リーン関数はインタラクションが開始するか再開すると呼び出されます。"

#~ msgid ""
#~ "To ensure that this restarting is seamless to the user (and not causing "
#~ "things to reset), it's important that every call to a UI function supply "
#~ "the `id` argument. As a screen is re-created, Ren'Py will update each "
#~ "displayable with the contents of the old displayable with the same id. "
#~ "Ids are generated automatically by the screen language, but when doing "
#~ "things by hand, they must be manually specified."
#~ msgstr ""
#~ "この再開がユーザーにとってシームレスであると保証するには UI 関数へのすべて"
#~ "の呼び出しが `id` 引数をサポートすることが重要です。スクリーンは再生成され"
#~ "るため、 Ren'Py は同じ id を持つ以前の displayable の内容で各 displayable "
#~ "を更新します。 id はスクリーン言語によって自動的に生成されますが、直接 ui "
#~ "関数を使用するときは手動で指定する必要があります。"

#~ msgid "UI Functions are deprecated and not recommended."
#~ msgstr "注意: UI 関数は非推奨です。"

#~ msgid "Here's an example Python screen::"
#~ msgstr "python スクリーンの例を示します ::"

#~ msgid "Defines a screen with `name`, which should be a string."
#~ msgstr "`name` は文字列で、これを名前に持つスクリーンを定義します。"

#~ msgid "`function`"
#~ msgstr "`function`"

#~ msgid ""
#~ "The function that is called to display the screen. The function is called "
#~ "with the screen scope as keyword arguments. It should ignore additional "
#~ "keyword arguments."
#~ msgstr ""
#~ "スクリーンを表示するために呼び出される関数です。関数はそのスクリーンのス"
#~ "コープをキーワード引数として呼び出されます。追加のキーワード引数は無視する"
#~ "べきです。"

#~ msgid ""
#~ "The function should call the ui functions to add things to the screen."
#~ msgstr "スクリーンに追加するためには、関数は UI 関数を呼び出すべきです。"

#~ msgid "`modal`"
#~ msgstr "`modal`"

#~ msgid ""
#~ "A string that, when evaluated, determines of the created screen should be "
#~ "modal. A modal screen prevents screens underneath it from receiving input "
#~ "events."
#~ msgstr ""
#~ "作成されるスクリーンがモーダルであるかどうかを決定するために評価される文字"
#~ "列です。モーダルなスクリーンは その下にあるスクリーンが入力イベントを受け"
#~ "取ることを防ぎます。"

#~ msgid "`zorder`"
#~ msgstr "`zorder`"

#~ msgid ""
#~ "A string that, when evaluated, should be an integer. The integer controls "
#~ "the order in which screens are displayed. A screen with a greater zorder "
#~ "number is displayed above screens with a lesser zorder number."
#~ msgstr ""
#~ "評価すると整数になる文字列です。整数はスクリーンが表示される順番を制御しま"
#~ "す。 大きな zorder を持つスクリーンほど小さな zorder を持つスクリーンの上"
#~ "に表示されます。"

#~ msgid ""
#~ "The tag associated with this screen. When the screen is shown, it "
#~ "replaces any other screen with the same tag. The tag defaults to the name "
#~ "of the screen."
#~ msgstr ""
#~ "このスクリーンに関連づけられるタグです。スクリーンが表示されると、同じタグ"
#~ "を持つ他のすべてのスクリーンを置き換えます。タグはデフォルトではスクリーン"
#~ "の名前です。"

#~ msgid "`predict`"
#~ msgstr "`predict`"

#~ msgid ""
#~ "If true, this screen can be loaded for image prediction. If false, it "
#~ "can't. Defaults to true."
#~ msgstr ""
#~ "True ならこのスクリーンは画像を予測のためにロード出来ます。 False なら出来"
#~ "ません。デフォルトでは True です。"

#~ msgid "String. Gives the variant of the screen to use."
#~ msgstr "使用するスクリーンバージョンの文字列です。"

#~ msgid "Returns true if Ren'Py is currently predicting the screen."
#~ msgstr "Ren'Py が現在スクリーンを予測していれば True を返します。"

#~ msgid "UI Functions"
#~ msgstr "UI 関数"

#~ msgid ""
#~ "The implementation of Ren'Py has changed, and UI functions that create "
#~ "displayables can now be far slower than their screen language equivalents."
#~ msgstr ""
#~ "Ren'Py の実装が変更され、 displayable を作成する UI 関数は現在スクリーン言"
#~ "語による実装よりかなり遅くなりえます。"

#~ msgid ""
#~ "The UI functions are Python equivalents of the screen language "
#~ "statements. For each screen language statement, there is a ui function "
#~ "with the same name. For example, ui.text corresponds to the text "
#~ "statement, and ui.add corresponds to the add statement."
#~ msgstr ""
#~ "UI 関数はスクリーン言語と等価な python です。各スクリーン言語のステートメ"
#~ "ントに対して、同じ名前の UI 関数があります。例えば ui.text は text ステー"
#~ "トメントに対応し、 ui.add は add ステートメントに対応します。"

#~ msgid ""
#~ "There is a simple mapping between screen language parameters and "
#~ "arguments and Python arguments. Screen language parameters become "
#~ "positional arguments, while properties become keyword arguments. For "
#~ "example, the screen language statement: ::"
#~ msgstr ""
#~ "スクリーン言語のパラメーターや引数と python の引数には簡単な対応関係があり"
#~ "ます。スクリーン言語のパラメーターは位置引数に、プロパティーはキーワード引"
#~ "数になります。例えば、スクリーン言語のステートメントではこれが ::"

#~ msgid "becomes: ::"
#~ msgstr "こうなります。 ::"

#~ msgid "(It really should have an `id` parameter added.)"
#~ msgstr "( 実際には `id` 引数が追加されるべきです。 )"

#~ msgid ""
#~ "There are three groups of UI functions, corresponding to the number of "
#~ "children they take."
#~ msgstr "UI 関数にはそれらが取る子の数に対応した三つのグループがあります。"

#~ msgid "The following UI functions do not take any children."
#~ msgstr "以下の UI 関数は子を受け取りません。"

#~ msgid "ui.add"
#~ msgstr "ui.add"

#~ msgid "ui.bar"
#~ msgstr "ui.bar"

#~ msgid "ui.imagebutton"
#~ msgstr "ui.imagebutton"

#~ msgid "ui.input"
#~ msgstr "ui.input"

#~ msgid "ui.key"
#~ msgstr "ui.key"

#~ msgid "ui.label"
#~ msgstr "ui.label"

#~ msgid "ui.null"
#~ msgstr "ui.null"

#~ msgid "ui.text"
#~ msgstr "ui.text"

#~ msgid "ui.textbutton"
#~ msgstr "ui.textbutton"

#~ msgid "ui.timer"
#~ msgstr "ui.timer"

#~ msgid "ui.vbar"
#~ msgstr "ui.vbar"

#~ msgid "ui.hotspot"
#~ msgstr "ui.hotspot"

#~ msgid "ui.hotbar"
#~ msgstr "ui.hotbar"

#~ msgid "ui.spritemanager"
#~ msgstr "ui.spritemanager"

#~ msgid ""
#~ "The following UI functions take a single child. They must be given that "
#~ "child – use :func:`ui.null` if the child is missing."
#~ msgstr ""
#~ "以下の UI 関数は一つの子を取ります。これらはその子を与えられる必要があり、"
#~ "子がないと、 :func:`ui.null` を使用します。"

#~ msgid "ui.button"
#~ msgstr "ui.button"

#~ msgid "ui.frame"
#~ msgstr "ui.frame"

#~ msgid "ui.transform"
#~ msgstr "ui.transform"

#~ msgid "ui.window"
#~ msgstr "ui.window"

#~ msgid "ui.drag"
#~ msgstr "ui.drag"

#~ msgid ""
#~ "The following UI functions take multiple children. They continue taking "
#~ "children until :func:`ui.close` is called."
#~ msgstr ""
#~ "以下の UI 関数は複数の子を受け取ります。これらは :func:`ui.close` が呼び出"
#~ "されるまでは子を受け付けます。"

#~ msgid "ui.fixed"
#~ msgstr "ui.fixed"

#~ msgid "ui.grid"
#~ msgstr "ui.grid"

#~ msgid "ui.hbox"
#~ msgstr "ui.hbox"

#~ msgid "ui.side"
#~ msgstr "ui.side"

#~ msgid "ui.vbox"
#~ msgstr "ui.vbox"

#~ msgid "ui.imagemap"
#~ msgstr "ui.imagemap"

#~ msgid "ui.draggroup"
#~ msgstr "ui.draggroup"

#~ msgid ""
#~ "There are a few UI functions that do not correspond to screen language "
#~ "statements, as they correspond to concepts that are not present in the "
#~ "screen language."
#~ msgstr ""
#~ "スクリーン言語には存在しない考え方に対応するため、僅かにスクリーン言語のス"
#~ "テートメントに対応しない UI 関数もあります。"

#~ msgid ""
#~ "Specifies a transform that is applied to the next displayable to be "
#~ "created. This is largely obsolete, as all UI functions now take an `at` "
#~ "argument."
#~ msgstr ""
#~ "次に作成される displayable に適用される transform を指定します。すべての "
#~ "UI 関数が今は `at` 引数を受け取るため、これはもはや過去の遺物です。"

#~ msgid ""
#~ "Closes a displayable created with by a UI function. When a displayable is "
#~ "closed, we add new displayables to its parent, or to the layer if no "
#~ "displayable is open."
#~ msgstr ""
#~ "UI 関数で作成した displayable を 閉じます。 displayable を閉じるとき、 "
#~ "displayable が何も開かれていなけらば新しい displayable をその親か、レイ"
#~ "ヤーに追加します。"

#~ msgid ""
#~ "Do not add the next displayable to any later or container. Use this if "
#~ "you want to assign the result of a ui function to a variable."
#~ msgstr ""
#~ "次の displayable をその先の displayable やコンテナに追加しません。これは "
#~ "ui 関数の結果を変数に代入したいなら使用してください。"

#~ msgid ""
#~ "Adds displayables to the layer named `name`. The later must be closed "
#~ "with :func:`ui.close`."
#~ msgstr ""
#~ "`name` と名付けられたレイヤーに displayable を追加します。そのレイヤーは :"
#~ "func:`ui.close` で閉じられなければなりません。"

#~ msgid ""
#~ "Assigns the displayable `d` the screen widget id `id_`, as if it had been "
#~ "created by a screen statement with that id."
#~ msgstr ""
#~ "その id で screen ステートメントに作成されたかのように displayable `d` を"
#~ "スクリーンウィジェットid `id_` に代入します。"

#~ msgid "`positional`"
#~ msgstr "`positional`"

#~ msgid "The number of positional parameters this statement takes."
#~ msgstr "このステートメントが受け取る位置引数の数です。"

#~ msgid "This can be used inside screen code."
#~ msgstr "これはスクリーンのコード内部で使用されます。"

#~ msgid ""
#~ "With the advent of SL2, UI Functions are deprecated and not recommended."
#~ msgstr "SL2 の利点により、 UI 関数は非推奨です。"

#~ msgid ""
#~ "This returns an object that can have properties added to it. Properties "
#~ "are added using the method:"
#~ msgstr ""
#~ "これが返すオブジェクトにはプロパティーが追加出来ます。プロパティーは次のメ"
#~ "ソッドを使用して追加出来ます。"

#~ msgid ""
#~ "Registers a property with the creator-defined screen language statement. "
#~ "This returns the object it is called on, so calls can be chained."
#~ msgstr ""
#~ "ユーザー定義スクリーン言語ステートメントにプロパティーを登録します。これは"
#~ "自身を返すので連続して呼び出せます。"

#~ msgid ""
#~ "This method must be overriden, as the default method will raise "
#~ "NotImplemented (and hence cause Ren'Py to report an error)."
#~ msgstr ""
#~ "このメソッドはデフォルトでは NotImplemented の例外を出す ( Ren'Py にエラー"
#~ "を報告させる ) ため、上書きする必要があります。"

#~ msgid ""
#~ "It can be used to update the value of the bar over time, like :func:"
#~ "`AnimatedValue` does. To do this, get_adjustment should store the "
#~ "adjustment, and periodic should calle the adjustment's changed method."
#~ msgstr ""
#~ ":func:`AnimatedValue` のように時間につれて bar の値を更新するために使用さ"
#~ "れます。このためには、 get_adjustment で adjustment を保持し、 periodic "
#~ "で adjustment の changed メソッドを呼び出すべきです。"

#~ msgid ""
#~ "There are a few UI functions that do not correspond to screen language "
#~ "statments, as they correspond to concepts that are not present in the "
#~ "screen language."
#~ msgstr ""
#~ "スクリーン言語には存在しない考え方に対応するため、僅かにスクリーン言語のス"
#~ "テートメントに対応しない UI 関数もあります。"

#~ msgid ""
#~ "Specifieds a transform that is applied to the next displayable to be "
#~ "created. This is largely obsolete, as all UI functions now take an `at` "
#~ "argument."
#~ msgstr ""
#~ "次に作成される displayable に適用される transform を指定します。すべての "
#~ "UI 関数が今は `at` 引数を受け取るため、これはもはや過去の遺物です。"
