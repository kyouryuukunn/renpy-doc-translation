# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2018, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 6.99.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-20 21:53+0900\n"
"PO-Revision-Date: 2023-04-29 15:31+0900\n"
"Last-Translator: akakyouryuu <akakyouryuu@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.0.1\n"

#: ../../source/gui_advanced.rst:5
msgid "Advanced GUI"
msgstr "高度な GUI"

#: ../../source/gui_advanced.rst:7
msgid "This section has some odds and ends about advanced usage of the GUI."
msgstr "この章では gui の高度な使用についての雑多な事柄を扱います。"

#: ../../source/gui_advanced.rst:11
msgid "Python Functions"
msgstr "Python 関数"

#: ../../source/gui_advanced.rst:13
msgid "There are some Python functions that support the GUI."
msgstr "GUI をサポートするPython関数がいくつかあります。"

#: ../../source/gui_advanced.rst:18
msgid "More on gui.rebuild"
msgstr "guit.rebuild"

#: ../../source/gui_advanced.rst:20
msgid ""
"The gui.rebuild function is a rather slow function that updates the GUI to "
"reflect the current state of Ren'Py. What it does is:"
msgstr ""
"gui.rebuild 関数は GUI を更新して Ren'Py の 現在の状態を反映するやや遅い関数"
"です。これは以下のことをします。 :"

#: ../../source/gui_advanced.rst:23
msgid ""
"Re-runs all of the ``define`` statements that define variables in the gui "
"namespace."
msgstr ""
"gui 名前空間で変数を定義するすべての ``define`` ステートメントを再実行しま"
"す。"

#: ../../source/gui_advanced.rst:25
msgid ""
"Re-runs all of the ``translate python`` blocks for the current language."
msgstr "現在の言語ですべての ``translate python`` ブロックを再実行します。"

#: ../../source/gui_advanced.rst:26
msgid "Re-runs all of the ``style`` statements."
msgstr "すべての  ``style`` ステートメントを再実行します。"

#: ../../source/gui_advanced.rst:27
msgid "Rebuilds all of the styles in the system."
msgstr "システムのすべてのスタイルを再構築します。"

#: ../../source/gui_advanced.rst:29
msgid ""
"Note that ``init python`` blocks are not re-run on ``gui.rebuild``. In this "
"way, ::"
msgstr ""
"``init python`` ブロックは ``gui.rebuild`` で再実行されないことに注意してくだ"
"さい。このため ::"

#: ../../source/gui_advanced.rst:33
msgid "and::"
msgstr "と ::"

#: ../../source/gui_advanced.rst:38
msgid "are different."
msgstr "は異なります。"

#: ../../source/gui_advanced.rst:41
msgid "The default statement, the gui namespace, and gui.rebuild"
msgstr "default ステートメント, gui 名前空間, gui.rebuild"

#: ../../source/gui_advanced.rst:43
msgid ""
"The ``default`` statement has changed semantics when applied to the ``gui`` "
"namespace. When applied to a variable in the ``gui`` namespace, the default "
"statement runs interleaved with the define statement, and the default "
"statements are not re-run when :func:`gui.rebuild` is called."
msgstr ""
"``default`` ステートメントは ``gui`` 名前空間に適用されると意味が変わりま"
"す。 ``gui`` 名前空間の変数に適用されると、 default ステートメントの実行に "
"define ステートメントが挟まれ、default ステートメントは :func:`gui.rebulid` "
"が呼び出されても再実行されません。"

#: ../../source/gui_advanced.rst:48
msgid "What this means is that if we have::"
msgstr "つまり、以下のコードがあるとすると ::"

#: ../../source/gui_advanced.rst:53
msgid ""
"The first time the game is run, the accent color will be set, and then the "
"hover color will be set to the accent color. (Both are then used to set "
"various style colors.)"
msgstr ""
"ゲームの最初の起動時、accent color が設定され、hover color は accent color に"
"設定されます(共に様々なスタイルの色に使用されます)。"

#: ../../source/gui_advanced.rst:57
msgid "However, if as part of the game script, we have::"
msgstr "しかし、ゲームスクリプトとして以下のソースがあると ::"

#: ../../source/gui_advanced.rst:62
msgid ""
"Ren'Py will only re-run the define, so it will set the hover color to the "
"accent color, and then update the styles. This makes it possible to have "
"parts of the GUI that change as the game progresses."
msgstr ""
"Ren'Py は define のみを再実行し、 hover color を accent color に設定し、スタ"
"イルを更新します。これにより、ゲーム中に gui の一部を変更可能になります。"

#: ../../source/gui_advanced.rst:69
msgid "GUI Preferences"
msgstr "GUI Preferences"

#: ../../source/gui_advanced.rst:71
msgid ""
"Ren'Py also supports a GUI preference system, consisting of a single "
"function and a pair of actions."
msgstr ""
"Ren'Py は1つの関数に対応するアクションから成る GUI Preference システムもサ"
"ポートしています。"

#: ../../source/gui_advanced.rst:77
msgid "Example"
msgstr "例"

#: ../../source/gui_advanced.rst:79
msgid ""
"The GUI preference system is used by calling :func:`gui.preference` when "
"defining variables, with the name of the preference and the default value. "
"For example, one can use GUI preferences to define the text font and size. ::"
msgstr ""
"GUI preference システムは変数定義時に、Preference の名前とデフォルト値ととも"
"に :func:`gui.preference` を呼び出して使用します。例えば、 gui preferences を"
"使用してテキストのフォントとサイズを定義できます。 ::"

#: ../../source/gui_advanced.rst:87
msgid ""
"It's then possible to use the :class:`gui.SetPreference` and :class:`gui."
"TogglePreference` actions to add change the values of the preferences. "
"Here's some examples that can be added to the preferences screen. ::"
msgstr ""
"こうすると、 :class:`gui.SetPreference` と :class:`gui.TogglePreference` アク"
"ションを使用して、 preferences の値の変更が可能になります。こちらは "
"Preferences スクリーンに追加できるいくつかの例になります。 ::"

#~ msgid ""
#~ "Given a `kind` of button, returns a dictionary giving standard style "
#~ "properties for that button. This sets:"
#~ msgstr ""
#~ "ボタンの `kind` を指定すると、そのボタンの標準的なスタイルプロパティーの辞"
#~ "書を返します。これは以下の set です。 :"

#~ msgid ":propref:`background`"
#~ msgstr ":propref:`background`"

#~ msgid "As described below."
#~ msgstr "下記に記述します。"

#~ msgid ":propref:`padding`"
#~ msgstr ":propref:`padding`"

#~ msgid "To gui.kind_borders.padding (if it exists)."
#~ msgstr "(あれば)  gui.kind_borders.padding へのものです。"

#~ msgid ":propref:`xsize`"
#~ msgstr ":propref:`xsize`"

#~ msgid "To gui.kind_width (if it exists)."
#~ msgstr "(あれば)  gui.kind_widthへのものです。"

#~ msgid ":propref:`ysize`"
#~ msgstr ":propref:`ysize`"

#~ msgid "To gui.kind_height (if it exists)."
#~ msgstr "(あれば)  gui.kind_height へのものです。"

#~ msgid ""
#~ "(Note that if `kind` is the string \"nvl_button\", this will look for the "
#~ "gui.nvl_button_background variable.)"
#~ msgstr ""
#~ "(`kind` が文字列 \"nvl_button\"ならば、これは gui.nvl_button_background 変"
#~ "数の方を探すことに注意してください)"

#~ msgid ""
#~ "The background is a frame that takes its background picture from the "
#~ "first existing one of:"
#~ msgstr ""
#~ "background は以下のうち最初にあったものをその背景画像とするフレームです。"

#~ msgid "gui/button/kind_[prefix\\_].background.png"
#~ msgstr "gui/button/kind_[prefix\\_].background.png"

#~ msgid "gui/button/[prefix\\_].background.png"
#~ msgstr "gui/button/[prefix\\_].background.png"

#~ msgid ""
#~ "If a gui variables named gui.kind_borders exists, it's used. Otherwise, :"
#~ "var:`gui.button_borders` is used. If gui.kind_tile exists, it determines "
#~ "if the borders are tiled, else :var:`gui.button_tile` controls tiling."
#~ msgstr ""
#~ "gui 変数 gui.kind_borders があればそれが使用され、そうでなければ :var:"
#~ "`gui.button_borders` が使用されます。 gui.kind_tile があれば、それが "
#~ "Borders がタイリングされるかを決定し、そうでなければ :var:`gui."
#~ "button_tile` がタイリングを制御します。"

#~ msgid ""
#~ "For what [prefix\\_] means, check out the :ref:`style prefix search "
#~ "<style-prefix-search>` documentation."
#~ msgstr ""
#~ "[prefix\\_] の意味は :ref:`スタイル接頭辞検索 <style-prefix-search>` を参"
#~ "照してください。"

#~ msgid "Initializes the gui."
#~ msgstr "GUI を初期化します。"

#~ msgid "`width`"
#~ msgstr "`width`"

#~ msgid "The width of the default window."
#~ msgstr "デフォルトウィンドウの幅です。"

#~ msgid "`height`"
#~ msgstr "`height`"

#~ msgid "The height of the default window."
#~ msgstr "デフォルトウィンドウの高さです。"

#~ msgid "`fov`"
#~ msgstr "`fov`"

#~ msgid "The field of view of the 3d stage."
#~ msgstr "3d ステージの視野です。"

#~ msgid "Rebuilds the GUI."
#~ msgstr "GUIを再構築します。"

#~ msgid "Note: This is a very slow function."
#~ msgstr "これはかなり遅い関数であることに注意してください。"

#~ msgid ":propref:`font`"
#~ msgstr ":propref:`font`"

#~ msgid "To gui.kind_text_font, if it exists."
#~ msgstr "あれば gui.kind_text_font へのものです。"

#~ msgid ":propref:`size`"
#~ msgstr ":propref:`size`"

#~ msgid "To gui.kind_text_size, if it exists."
#~ msgstr "(あれば)  gui.kind_text_size へのものです。"

#~ msgid ":propref:`xalign`"
#~ msgstr ":propref:`xalign`"

#~ msgid "To gui.kind_text_xalign, if it exists."
#~ msgstr "(あれば)  gui.kind_text_xalign へのものです。"

#~ msgid ":propref:`textalign`"
#~ msgstr ":propref:`textalign`"

#~ msgid ":propref:`layout`"
#~ msgstr ":propref:`layout`"

#~ msgid ""
#~ "To \"subtitle\" if gui.kind_text_xalign is greater than zero and less "
#~ "than one."
#~ msgstr ""
#~ "gui.kind_text_xalign が 0 以上 1 以下なら、 \"subtitle\" へのものです。"

#~ msgid ""
#~ "There are also a number of variables that set the text :propref:`color` "
#~ "style property:"
#~ msgstr ""
#~ "テキストの :propref:`color` スタイルプロパティーを設定する変数も複数ありま"
#~ "す。"

#~ msgid "color"
#~ msgstr "color"

#~ msgid ""
#~ "To gui.kind_text_color, if it exists. If the variable is not set, and "
#~ "`accent` is True, sets the text color to the default accent color."
#~ msgstr ""
#~ "あれば gui.kind_text_colorへのものです。変数が設定されておらず、 "
#~ "`accent`  が True ならば、テキストの色をデフォルトのアクセントカラーに設定"
#~ "します。"

#~ msgid "insensitive_color"
#~ msgstr "insensitive_color"

#~ msgid "To gui.kind_text_insensitive_color, if it exists."
#~ msgstr "(あれば)  gui.kind_text_insensitive_color へのものです。"

#~ msgid "idle_color"
#~ msgstr "idle_color"

#~ msgid "To gui.kind_text_idle_color, if it exists."
#~ msgstr "(あれば)  gui.kind_text_idle_color へのものです。"

#~ msgid "hover_color"
#~ msgstr "hover_color"

#~ msgid "To gui.kind_text_hover_color, if it exists."
#~ msgstr "(あれば)  gui.kind_text_hover_color へのものです。"

#~ msgid "selected_color"
#~ msgstr "selected_color"

#~ msgid "To gui.kind_text_selected_color, if it exists."
#~ msgstr "(あれば)  gui.kind_text_selected_color へのものです。"

#~ msgid ""
#~ "All other :ref:`text style properties <text-style-properties>` are "
#~ "available. When `kind` is not None, :ref:`position style properties "
#~ "<position-style-properties>` are also available. For example, gui."
#~ "kind_text_outlines sets the outlines style property, gui."
#~ "kind_text_kerning sets kerning, and so on."
#~ msgstr ""
#~ "他のすべての :ref:`テキストスタイルプロパティー <text-style-properties>` "
#~ "も利用可能です。 `kind` が None でないときは、 :ref:`位置スタイルプロパ"
#~ "ティー <position-style-properties>` も利用可能です。例えば gui."
#~ "kind_text_outlines は outline スタイルプロパティーを設定し、 gui."
#~ "kind_text_kerning はカーニングを設定します。"

#~ msgid ""
#~ "A decorator that causes a function to be called when the gui is first "
#~ "initialized, and again each time the gui is rebuilt.  This is intended to "
#~ "be used as a function decorator,  of the form::"
#~ msgstr ""
#~ "デコレーターは gui が最初の初期化時および再構築時のたびに関数が呼び出され"
#~ "るようにします。これは次の形式で関数のデコレーターとしての使用を意図してい"
#~ "ます。"

#~ msgid ""
#~ "It can also be called with `f` (a function) and `variant` (a string), "
#~ "giving the variant name."
#~ msgstr ""
#~ "`f` (関数)とスクリーン variant を指定する `variant` (文字列)で呼び出しても"
#~ "使えます。"

#~ msgid "This Action sets the gui preference with `name` to `value`."
#~ msgstr "このアクションは `name` の gui preference を `value` に設定します。"

#~ msgid "`rebuild`"
#~ msgstr "`rebuild`"

#~ msgid ""
#~ "If true, the default, :func:`gui.rebuild` is called to make the changes "
#~ "take effect. This should generally be true, except in the case of "
#~ "multiple gui.SetPreference actions, in which case it should be False in "
#~ "all but the last one."
#~ msgstr ""
#~ "デフォルトでは True で、 :func:`gui.rebuild` を呼び出して変更を反映しま"
#~ "す。これは一般的に True ですが、 gui.SetPreference アクションが複数の場合"
#~ "は最後の1つ以外すべて False であるべきです。"

#~ msgid ""
#~ "This is a very slow action, and probably not suitable for use when a "
#~ "button is hovered."
#~ msgstr ""
#~ "これはとても遅いアクションで、ボタンがホバーされるときの使用には適さないで"
#~ "しょう。"

#~ msgid ""
#~ "This Action toggles the gui preference with `name` between value `a` and "
#~ "value `b`. It is selected if the value is equal to `a`."
#~ msgstr ""
#~ "このアクションは `name` の gui preference を `a` と `b` の値でトグルしま"
#~ "す。値が `a` と等しければ、選択状態になります。"

#~ msgid "This function returns the value of the gui preference with `name`."
#~ msgstr "この関数は `name` の gui preference の値を返します。"

#~ msgid "`default`"
#~ msgstr "`default`"

#~ msgid ""
#~ "If given, this value becomes the default value of the gui preference. The "
#~ "default value must be given the first time the preference is used."
#~ msgstr ""
#~ "指定されると、この値はその gui preference のデフォルトの値になります。デ"
#~ "フォルト値はその preference が最初に使用される時に指定されなければいけませ"
#~ "ん。"
