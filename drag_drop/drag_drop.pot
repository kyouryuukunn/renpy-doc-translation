# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2018, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 7.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-09-11 07:39+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/drag_drop.rst:7
msgid "Drag and Drop"
msgstr ""

#: ../../source/drag_drop.rst:9
msgid "Ren'Py includes drag and drop displayables that allow things to be moved around the screen with the mouse. Some of the uses of dragging are:"
msgstr ""

#: ../../source/drag_drop.rst:13
msgid "Allowing windows to be repositioned by the user, storing the window positions."
msgstr ""

#: ../../source/drag_drop.rst:15
msgid "Card games that require cards to be dragged around the screen. (For example, solitaire.)"
msgstr ""

#: ../../source/drag_drop.rst:17
msgid "Inventory systems."
msgstr ""

#: ../../source/drag_drop.rst:18
msgid "Drag-to-reorder systems."
msgstr ""

#: ../../source/drag_drop.rst:20
msgid "The drag and drop displayables make it possible to implement these and other uses of drag and drop. There are two classes involved here. The Drag class represents either something that can be dragged around the screen, something that can have a draggable dropped onto it, or something that can do both. The DragGroup class represents a group of Drags â€“ for a drag and drop to occur, both Drags must be part of the same drag group."
msgstr ""

#: ../../source/drag_drop.rst:28
msgid "The drag and drop system can be used either through the :ref:`Screen Language <screens>` or directly as displayables. It makes sense to use the screen language when you don't need to refer to the Drags that you create after they've been created. This might be the case if the draggable represents a window that the user places on the screen. If you need to refer to the drags after they've been created, then it's often better to create Drags directly, and add them to a DragGroup."
msgstr ""

#: ../../source/drag_drop.rst:37
msgid "Displayables"
msgstr ""

#: ../../source/inc/drag_drop:5
msgid "A displayable that represents an object that can be dragged around its enclosing area. A Drag can also represent an area that other Drags can be dropped on."
msgstr ""

#: ../../source/inc/drag_drop:9
msgid "A Drag can be moved around inside is parent. Generally, its parent should be either a :func:`Fixed` or :class:`DragGroup`."
msgstr ""

#: ../../source/inc/drag_drop:12
msgid "A Drag has one child. The child's state reflects the status of the drag and drop operation:"
msgstr ""

#: ../../source/inc/drag_drop:15
msgid "``selected_hover`` - when it is being dragged."
msgstr ""

#: ../../source/inc/drag_drop:16
msgid "``selected_idle`` - when it can be dropped on."
msgstr ""

#: ../../source/inc/drag_drop:17
msgid "``hover`` - when the draggable will be dragged when the mouse is clicked."
msgstr ""

#: ../../source/inc/drag_drop:19
msgid "``idle`` - otherwise."
msgstr ""

#: ../../source/inc/drag_drop:21
msgid "The drag handle is a rectangle inside the child. The mouse must be over a non-transparent pixel inside the drag handle for dragging or clicking to occur."
msgstr ""

#: ../../source/inc/drag_drop:25
msgid "A newly-created draggable is added to the default DragGroup. A draggable can only be in a single DragGroup - if it's added to a second group, it's removed from the first."
msgstr ""

#: ../../source/inc/drag_drop:29
msgid "When a Drag is first rendered, if it's position cannot be determined from the DragGroup it is in, the position of its upper-left corner is computed using the standard layout algorithm. Once that position"
msgstr ""

#: ../../source/inc/drag_drop:36
msgid "`d`"
msgstr ""

#: ../../source/inc/drag_drop:35
msgid "If present, the child of this Drag. Drags use the child style in preference to this, if it's not None."
msgstr ""

#: ../../source/inc/drag_drop:42
msgid "`drag_name`"
msgstr ""

#: ../../source/inc/drag_drop:39
msgid "If not None, the name of this draggable. This is available as the `name` property of draggable objects. If a Drag with the same name is or was in the DragGroup, the starting position of this Drag is taken from that Draggable."
msgstr ""

#: ../../source/inc/drag_drop:46
msgid "`draggable`"
msgstr ""

#: ../../source/inc/drag_drop:45
msgid "If true, the Drag can be dragged around the screen with the mouse."
msgstr ""

#: ../../source/inc/drag_drop:49
msgid "`droppable`"
msgstr ""

#: ../../source/inc/drag_drop:49
msgid "If true, other Drags can be dropped on this Drag."
msgstr ""

#: ../../source/inc/drag_drop:53
msgid "`drag_raise`"
msgstr ""

#: ../../source/inc/drag_drop:52
msgid "If true, this Drag is raised to the top when it is dragged. If it is joined to other Drags, all joined drags are raised."
msgstr ""

#: ../../source/inc/drag_drop:59
msgid "`activated`"
msgstr ""

#: ../../source/inc/drag_drop:56
msgid "A callback (or list of callbacks) that is called when the mouse is pressed down on the drag. It is called with one argument, a a list of Drags that are being dragged. The return value of this callback is ignored."
msgstr ""

#: ../../source/inc/drag_drop:67
msgid "`dragged`"
msgstr ""

#: ../../source/inc/drag_drop:62
msgid "A callback (or list of callbacks) that is called when the Drag has been dragged. It is called with two arguments. The first is a list of Drags that are being dragged. The second is either a Drag that is being dropped onto, or None of a drop did not occur. If the callback returns a value other than None, that value is returned as the result of the interaction."
msgstr ""

#: ../../source/inc/drag_drop:78
msgid "`dropped`"
msgstr ""

#: ../../source/inc/drag_drop:70
msgid "A callback (or list of callbacks) that is called when this Drag is dropped onto. It is called with two arguments. The first is the Drag being dropped onto. The second is a list of Drags that are being dragged.  If the callback returns a value other than None, that value is returned as the result of the interaction."
msgstr ""

#: ../../source/inc/drag_drop:76
msgid "When a dragged and dropped callback are triggered for the same event, the dropped callback is only called if dragged returns None."
msgstr ""

#: ../../source/inc/drag_drop:84
msgid "`clicked`"
msgstr ""

#: ../../source/inc/drag_drop:81
msgid "A callback this is called, with no arguments, when the Drag is clicked without being moved. A droppable can also be focused and clicked.  If the callback returns a value other than None, that value is returned as the result of the interaction."
msgstr ""

#: ../../source/inc/drag_drop:90
msgid "`drag_handle`"
msgstr ""

#: ../../source/inc/drag_drop:87
msgid "A (x, y, width, height) tuple, giving the position of the drag handle within the child. In this tuple, integers are considered to be a literal number of pixels, while floats are relative to the size of the child."
msgstr ""

#: ../../source/inc/drag_drop:97
msgid "`drag_joined`"
msgstr ""

#: ../../source/inc/drag_drop:93
msgid "This is called with the current Drag as an argument. It's expected to return a list of [ (drag, x, y) ] tuples, giving the draggables to drag as a unit. `x` and `y` are the offsets of the drags relative to each other, they are not relative to the corner of this drag."
msgstr ""

#: ../../source/inc/drag_drop:103
msgid "`drag_offscreen`"
msgstr ""

#: ../../source/inc/drag_drop:100
msgid "If true, this draggable can be moved offscreen. This can be dangerous to use with drag_joined or drags that can change size, as the drags can leave the screen entirely, with no way to get them back on the screen."
msgstr ""

#: ../../source/inc/drag_drop:108
msgid "`mouse_drop`"
msgstr ""

#: ../../source/inc/drag_drop:106
msgid "If true, the drag is dropped on the first droppable under the cursor. If false, the default, the drag is dropped onto the droppable with the largest degree of overlap."
msgstr ""

#: ../../source/inc/drag_drop:110
msgid "Except for `d`, all of the parameters are available as fields (with the same name) on the Drag object. In addition, after the drag has been rendered, the following fields become available:"
msgstr ""

#: ../../source/inc/drag_drop:115
msgid "`x`, `y`"
msgstr ""

#: ../../source/inc/drag_drop:115
msgid "The position of the Drag relative to its parent, in pixels."
msgstr ""

#: ../../source/inc/drag_drop:119
msgid "`w`, `h`"
msgstr ""

#: ../../source/inc/drag_drop:118
msgid "The width and height of the Drag's child, in pixels."
msgstr ""

#: ../../source/inc/drag_drop:123
msgid "Lowers this displayable to the bottom of its drag_group."
msgstr ""

#: ../../source/inc/drag_drop:127
msgid "Changes the child of this drag to `d`."
msgstr ""

#: ../../source/inc/drag_drop:131
msgid "Changes the position of the drag. If the drag is not showing, then the position change is instantaneous. Otherwise, the position change takes `delay` seconds, and is animated as a linear move."
msgstr ""

#: ../../source/inc/drag_drop:138
msgid "Raises this displayable to the top of its drag_group."
msgstr ""

#: ../../source/inc/drag_drop:142
msgid "Represents a group of Drags. A Drag is limited to the boundary of its DragGroup. Dropping only works between Drags that are in the same DragGroup. Drags may only be raised when they are inside a DragGroup."
msgstr ""

#: ../../source/inc/drag_drop:147
msgid "A DragGroup is laid out like a :func:`Fixed`."
msgstr ""

#: ../../source/inc/drag_drop:149
msgid "All positional parameters to the DragGroup constructor should be Drags, that are added to the DragGroup."
msgstr ""

#: ../../source/inc/drag_drop:154
msgid "Adds `child`, which must be a Drag, to this DragGroup."
msgstr ""

#: ../../source/inc/drag_drop:158
msgid "Returns the first child of this DragGroup that has a drag_name of name."
msgstr ""

#: ../../source/inc/drag_drop:163
msgid "Removes `child` from this DragGroup."
msgstr ""

#: ../../source/drag_drop.rst:42
msgid "Examples"
msgstr ""

#: ../../source/drag_drop.rst:44
msgid "An example of a say screen that allows the user to choose the location of the window by dragging it around the screen.::"
msgstr ""

#: ../../source/drag_drop.rst:67
msgid "Here's a more complicated example, one that shows how dragging can be used to influence gameplay. It shows how dragging can be used to send a character to a location::"
msgstr ""

#: ../../source/drag_drop.rst:125
msgid "More complicated systems take significant programming skill to get right. The `Ren'Py cardgame framework <http://www.renpy.org/wiki/renpy/Frameworks#Cardgame>`_ is both an example of how to use drag and drop in a complex system, and useful for making card games in its own right."
msgstr ""

