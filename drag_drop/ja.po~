# Japanese translation for renpy-doc
# Copyright (c) 2013 Rosetta Contributors and Canonical Ltd 2013
# This file is distributed under the same license as the renpy-doc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: renpy-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-30 21:47+0900\n"
"PO-Revision-Date: 2019-11-20 20:55+0900\n"
"Last-Translator: kyouryuukunn <akakyouryuu@gmail.com>\n"
"Language-Team: Japanese <ja@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2014-06-21 06:26+0000\n"
"X-Generator: Poedit 1.5.7\n"

#: ../../source/drag_drop.rst:7
msgid "Drag and Drop"
msgstr "ドラッグドロップ"

#: ../../source/drag_drop.rst:9
msgid ""
"Ren'Py includes drag and drop displayables that allow things to be moved "
"around the screen with the mouse. Some of the uses of dragging are:"
msgstr ""
"Ren'Py にはマウスで画面上を移動できるドラッグドロップ displayable がありま"
"す。ドラッグの使用法としては :"

#: ../../source/drag_drop.rst:13
msgid ""
"Allowing windows to be repositioned by the user, storing the window "
"positions."
msgstr "ウィンドウの位置合わせ、ウィンドウ位置を記憶できるようにする。"

#: ../../source/drag_drop.rst:15
msgid ""
"Card games that require cards to be dragged around the screen. (For example, "
"solitaire.)"
msgstr ""
"カードを画面上でドラッグする必要のあるカードゲーム ( 例えばソリティア )。"

#: ../../source/drag_drop.rst:17
msgid "Inventory systems."
msgstr "アイテムシステム。"

#: ../../source/drag_drop.rst:18
msgid "Drag-to-reorder systems."
msgstr "ドラッグで並び順を変えるシステム。"

#: ../../source/drag_drop.rst:20
msgid ""
"The drag and drop displayables make it possible to implement these and other "
"uses of drag and drop. There are two classes involved here. The Drag class "
"represents either something that can be dragged around the screen, something "
"that can have a draggable dropped onto it, or something that can do both. "
"The DragGroup class represents a group of Drags – for a drag and drop to "
"occur, both Drags must be part of the same drag group."
msgstr ""
"ドラッグドロップ displayable は、上記やその他の場面においてドラッグドロップを"
"実装できるようにします。ここで関係する2つのクラスがあります。 Drag クラスは、"
"スクリーン上をドラッグできるもの、またはその上にドロップされたドラッグ可能な"
"ものを受け取れるもの、その両方が出来るもののいずれかを表します。 DragGroup ク"
"ラスは Drag のグループを表します。ドラッグドロップを実行するためには、両方の "
"Drag が同じドラッググループに属していなければなりません。"

#: ../../source/drag_drop.rst:28
msgid ""
"The drag and drop system can be used either through the :ref:`Screen "
"Language <screens>` or directly as displayables. It makes sense to use the "
"screen language when you don't need to refer to the Drags that you create "
"after they've been created. This might be the case if the draggable "
"represents a window that the user places on the screen. If you need to refer "
"to the drags after they've been created, then it's often better to create "
"Drags directly, and add them to a DragGroup."
msgstr ""
"ドラッグドロップシステムは :ref:`スクリーン言語 <screens>` を通してか、または"
"直接 displayable として使用できます。作成後に作成した Drag を参照する必要がな"
"いときは、スクリーン言語を使用すると良いでしょう。これはドラッグ可能オブジェ"
"クトが、ユーザーがスクリーン上に配置したウィンドウである場合などです。作成後"
"も作成した Drag を参照する必要がある場合は、直接 Drag を作成し、それらを "
"DragGroup に追加すると良いでしょう。"

#: ../../source/drag_drop.rst:37
msgid "Displayables"
msgstr "Displayable"

#: ../../source/drag_drop.rst:42
msgid "Examples"
msgstr "例"

#: ../../source/drag_drop.rst:44
msgid ""
"An example of a say screen that allows the user to choose the location of "
"the window by dragging it around the screen.::"
msgstr ""
"以下の say スクリーンの例では、スクリーン上をドラッグしてユーザーがウィンドウ"
"の位置を選べます。 ::"

#: ../../source/drag_drop.rst:67
msgid ""
"Here's a more complicated example, one that shows how dragging can be used "
"to influence gameplay. It shows how dragging can be used to send a character "
"to a location::"
msgstr ""
"こちらはより複雑な例で、ゲームプレイに影響を与えるためにどのようにドラッグを"
"使用できるかを表示します。これはどのようにキャラクターをある場所に送るために"
"ドラッグが使用できるかを表示します。"

#: ../../source/drag_drop.rst:126
msgid ""
"More complicated systems take significant programming skill to get right. "
"The `Ren'Py cardgame framework <http://www.renpy.org/wiki/renpy/"
"Frameworks#Cardgame>`_ is both an example of how to use drag and drop in a "
"complex system, and useful for making card games in its own right."
msgstr ""
"さらに複雑なシステムを作るには、高度なプログラミングスキルが必要です。 "
"`Ren'Py cardgame framework <http://www.renpy.org/wiki/renpy/"
"Frameworks#Cardgame>`_ は、複雑なゲームにおけるドラッグドロップの例を示すとと"
"もに、カードゲームの作成を容易にします。"

#: ../../source/drag_drop.rst:133
msgid ""
"The ``as`` clause can be used to bind a drag to variable, which can then be "
"used to call methods on the drag. ::"
msgstr ""
"``as`` 節をその Drag のメソッドを呼び出すのに使用出来る変数と Drag をリンク出"
"来ます。"

#~ msgid ""
#~ "A displayable that represents an object that can be dragged around its "
#~ "enclosing area. A Drag can also represent an area that other Drags can be "
#~ "dropped on."
#~ msgstr ""
#~ "それを囲んでいる領域上でドラッグ可能なオブジェクトを表わす displayable で"
#~ "す。 Drag は他の Drag がドロップ可能な領域も表現できます。"

#~ msgid ""
#~ "A Drag can be moved around inside is parent. Generally, its parent should "
#~ "be either a :func:`Fixed` or :class:`DragGroup`."
#~ msgstr ""
#~ "Drag がその内側で移動可能なものを親と呼びます。一般的には親は :func:"
#~ "`Fixed` か :class:`DragGroup` であるはずです。"

#~ msgid ""
#~ "A Drag has one child. The child's state reflects the status of the drag "
#~ "and drop operation:"
#~ msgstr ""
#~ "Dorag は子を一つ持ちます。子の状態はドラッグドロップ処理の状態を反映しま"
#~ "す。 :"

#~ msgid "``selected_hover`` - when it is being dragged."
#~ msgstr "``selected_hover`` ドラッグされている時。"

#~ msgid "``selected_idle`` - when it can be dropped on."
#~ msgstr "``selected_idle`` その上にドロップ可能な時。"

#~ msgid ""
#~ "``hover`` - when the draggable will be dragged when the mouse is clicked."
#~ msgstr ""
#~ "``hover`` - マウスがクリックされるとドラッグ可能オブジェクトがドラッグされ"
#~ "る時。"

#~ msgid "``idle`` - otherwise."
#~ msgstr "``idle`` それ以外。"

#~ msgid ""
#~ "The drag handle is a rectangle inside the child. The mouse must be over a "
#~ "non-transparent pixel inside the drag handle for dragging or clicking to "
#~ "occur."
#~ msgstr ""
#~ "ドラッグで持てるのはその子の内側の長方形です。ドラッグやクリックを実行する"
#~ "ためにマウスは Drag の不透明なピクセル上になければなりません。"

#~ msgid ""
#~ "A newly-created draggable is added to the default DragGroup. A draggable "
#~ "can only be in a single DragGroup - if it's added to a second group, it's "
#~ "removed from the first."
#~ msgstr ""
#~ "新しく作成されたドラッグ可能なオブジェクトはデフォルトの DragGroup に追加"
#~ "されます。 ドラッグ可能オブジェクトは 一つの DragGroup にのみ所属できま"
#~ "す。二つ目のグループに追加すると、最初のものからは削除されます。"

#~ msgid ""
#~ "When a Drag is first rendered, if it's position cannot be determined from "
#~ "the DragGroup it is in, the position of its upper-left corner is computed "
#~ "using the standard layout algorithm. Once that position has been "
#~ "computed, the layout properties are ignored in favor of the position "
#~ "stored inside the Drag."
#~ msgstr ""
#~ "Drag が最初にレンダリングされる時に、それが所属する DragGroup からその座標"
#~ "を決定できない場合その左上の座標が基本的なレイアウトアルゴリズムを使用して"
#~ "算出されます。いったん座標が算出されると、その Drag に保存された座標を優先"
#~ "し、レイアウトプロパティーは無視されます。"

#~ msgid "`d`"
#~ msgstr "`d`"

#~ msgid ""
#~ "If present, the child of this Drag. Drags use the child style in "
#~ "preference to this, if it's not None."
#~ msgstr ""
#~ "与えられると、この Drag の子になります。 None でなければ Drag はこれに優先"
#~ "して child スタイルを使用します。"

#~ msgid "`drag_name`"
#~ msgstr "`drag_name`"

#~ msgid ""
#~ "If not None, the name of this draggable. This is available as the `name` "
#~ "property of draggable objects. If a Drag with the same name is or was in "
#~ "the DragGroup, the starting position of this Drag is taken from that "
#~ "Draggable."
#~ msgstr ""
#~ "None を指定するかこのドラッグ可能オブジェクトの名前を指定します。これはド"
#~ "ラッグ可能オブジェクトの `name` プロパティーとして利用できます。もし同じ名"
#~ "前の Drag がその DragGroup に所属しているまたはしていたならこの Drag の最"
#~ "初の座標はそのドラッグ可能オブジェクトから受け取ります。"

#~ msgid "`draggable`"
#~ msgstr "`draggable`"

#~ msgid "If true, the Drag can be dragged around the screen with the mouse."
#~ msgstr "True の場合、Drag はスクリーン上をマウスでドラッグできます。"

#~ msgid "`droppable`"
#~ msgstr "`droppable`"

#~ msgid "If true, other Drags can be dropped on this Drag."
#~ msgstr "True なら他の Drag がこの Drag 上にドロップ可能です。"

#~ msgid "`drag_raise`"
#~ msgstr "`drag_raise`"

#~ msgid ""
#~ "If true, this Drag is raised to the top when it is dragged. If it is "
#~ "joined to other Drags, all joined drags are raised."
#~ msgstr ""
#~ "True ならこの Drag がドラッグされたときにトップまで持ち上げられます。他の "
#~ "Drag と接続されていたら、すべての接続された Drag も持ち上げられます。"

#~ msgid "`activated`"
#~ msgstr "`activated`"

#~ msgid ""
#~ "A callback (or list of callbacks) that is called when the mouse is "
#~ "pressed down on the drag. It is called with one argument, a a list of "
#~ "Drags that are being dragged. The return value of this callback is "
#~ "ignored."
#~ msgstr ""
#~ "Drag 上でマウスが押されたとき呼び出されるコールバック ( またはコールバック"
#~ "のリスト ) です。ドラッグされている Drag のリストを引数に呼び出されます。"
#~ "このコールバックの返り値は無視されます。"

#~ msgid "`dragged`"
#~ msgstr "`dragged`"

#~ msgid ""
#~ "A callback (or list of callbacks) that is called when the Drag has been "
#~ "dragged. It is called with two arguments. The first is a list of Drags "
#~ "that are being dragged. The second is either a Drag that is being dropped "
#~ "onto, or None of a drop did not occur. If the callback returns a value "
#~ "other than None, that value is returned as the result of the interaction."
#~ msgstr ""
#~ "Drag がドラッグされた時に呼び出されるコールバック ( またはコールバックのリ"
#~ "スト ) です。それは二つの引数で呼び出されます。一つ目はドラッグされている "
#~ "Drag のリストです。二つ目はその上にドロップされている Drag か、ドロップが"
#~ "起きていないなら None です。コールバックが None ではなく値を返すとその値は"
#~ "インタラクションの結果として返されます。"

#~ msgid "`dropped`"
#~ msgstr "`dropped`"

#~ msgid ""
#~ "A callback (or list of callbacks) that is called when this Drag is "
#~ "dropped onto. It is called with two arguments. The first is the Drag "
#~ "being dropped onto. The second is a list of Drags that are being "
#~ "dragged.  If the callback returns a value other than None, that value is "
#~ "returned as the result of the interaction."
#~ msgstr ""
#~ "Drag がドロップされた時に呼び出されるコールバック ( またはコールバックのリ"
#~ "スト ) です。それは二つの引数で呼び出されます。一つ目はその上にドロップさ"
#~ "れている Drag 二つ目はドラッグされている Drag のリストです。コールバック"
#~ "が None 以外の値を返すと、その値はインタラクションの結果として返されます。"

#~ msgid ""
#~ "When a dragged and dropped callback are triggered for the same event, the "
#~ "dropped callback is only called if dragged returns None."
#~ msgstr ""
#~ "dragged と dropped のコールバックが同じイベントで起こされると、 dropped "
#~ "コールバックは dragged が None を返したときのみ呼び出されます。"

#~ msgid "`clicked`"
#~ msgstr "`clicked`"

#~ msgid ""
#~ "A callback this is called, with no arguments, when the Drag is clicked "
#~ "without being moved. A droppable can also be focused and clicked.  If the "
#~ "callback returns a value other than None, that value is returned as the "
#~ "result of the interaction."
#~ msgstr ""
#~ "Drag が移動せずにクリックされると、引数なしで呼び出されるコールバックで"
#~ "す。ドロップ可能オブジェクトはフォーカスを持ち、クリックすることも可能で"
#~ "す。 コールバックが None ではなく値を返したら、その値はインタラクションの"
#~ "結果として返されます。"

#~ msgid "`alternate`"
#~ msgstr "`alternate`"

#~ msgid ""
#~ "An action that is run when the Drag is right-clicked (on the desktop) or "
#~ "long-pressed without moving (on mobile). It may be necessary to increase :"
#~ "var:`config.longpress_duration` if this triggers to early on mobile "
#~ "platforms."
#~ msgstr ""
#~ "Drag が(デスクトップの場合)右クリックされるか動かさないで長押し(モバイル)"
#~ "すると実行されるアクションです。このトリガーがモバイルプラットフォームで早"
#~ "すぎる場合は  :var:`config.longpress_duration` を大きくする必要がありま"
#~ "す。"

#~ msgid "`drag_handle`"
#~ msgstr "`drag_handle`"

#~ msgid ""
#~ "A (x, y, width, height) tuple, giving the position of the drag handle "
#~ "within the child. In this tuple, integers are considered to be a literal "
#~ "number of pixels, while floats are relative to the size of the child."
#~ msgstr ""
#~ "子内部のドラッグ有効範囲の位置を与える (x, y, width, height) のタプルで"
#~ "す。このタプルでは、整数はピクセルの定数になるように配慮され、一方少数は子"
#~ "のサイズに対する割合です。"

#~ msgid "`drag_joined`"
#~ msgstr "`drag_joined`"

#~ msgid ""
#~ "This is called with the current Drag as an argument. It's expected to "
#~ "return a list of [ (drag, x, y) ] tuples, giving the draggables to drag "
#~ "as a unit. `x` and `y` are the offsets of the drags relative to each "
#~ "other, they are not relative to the corner of this drag."
#~ msgstr ""
#~ "これは現在の Drag を引数として呼び出されます。ひとかたまりでドラッグしてい"
#~ "るドラッグ可能オブジェクトのタプル [ (drag, x, y) ] を返すことが期待されま"
#~ "す。 `x`, `y` は Drag の互いに対するオフセットで、この drag に対するもので"
#~ "はありません。"

#~ msgid "`drag_offscreen`"
#~ msgstr "`drag_offscreen`"

#~ msgid ""
#~ "If true, this draggable can be moved offscreen. This can be dangerous to "
#~ "use with drag_joined or drags that can change size, as the drags can "
#~ "leave the screen entirely, with no way to get them back on the screen."
#~ msgstr ""
#~ "True なら ドラッグ可能オブジェクトは画面外へ動かせます。これは "
#~ "drag_joined やサイズを変更出来る Drag に使用すると、Drag が完全に画面外に"
#~ "出て画面に戻す方法がなくなるため危険でしょう。"

#~ msgid "`mouse_drop`"
#~ msgstr "`mouse_drop`"

#~ msgid ""
#~ "If true, the drag is dropped on the first droppable under the cursor. If "
#~ "false, the default, the drag is dropped onto the droppable with the "
#~ "largest degree of overlap."
#~ msgstr "True, "

#~ msgid "`drop_allowable`"
#~ msgstr "`drop_allowable`"

#~ msgid ""
#~ "A callback that is called to determine whether this drop allow the "
#~ "current drags dropped onto. It is called with two arguments. The first is "
#~ "the Drag which determines its sensitivity. The second is a list of Drags "
#~ "that are being dragged."
#~ msgstr ""
#~ "ドラッグしているもののドロップを許可するかを決定するコールバックです。二つ"
#~ "の引数で呼び出され、一つ目はドロップを受け取る Drag, 二つ目はドラッグされ"
#~ "ている Drag のリストです。"

#~ msgid ""
#~ "Except for `d`, all of the parameters are available as fields (with the "
#~ "same name) on the Drag object. In addition, after the drag has been "
#~ "rendered, the following fields become available:"
#~ msgstr ""
#~ "`d` を除いて引数のすべてはその Drag オブジェクトでフィールドとして ( 同じ"
#~ "名前で ) 利用可能です。さらに Drag がレンダリングされた後は次のフィールド"
#~ "が利用可能になります。"

#~ msgid "`x`, `y`"
#~ msgstr "`x`, `y`"

#~ msgid "The position of the Drag relative to its parent, in pixels."
#~ msgstr "ピクセルでのその親に対する Drag の位置"

#~ msgid "`w`, `h`"
#~ msgstr "`w`, `h`"

#~ msgid "The width and height of the Drag's child, in pixels."
#~ msgstr "Drag の子のピクセルでの幅と高さです。"

#~ msgid "Lowers this displayable to the bottom of its drag_group."
#~ msgstr "この displayable をその DragGroup の最下端にします。"

#~ msgid "Changes the child of this drag to `d`."
#~ msgstr "この Drag の子を `d` に変更します。"

#~ msgid ""
#~ "Changes the position of the drag. If the drag is not showing, then the "
#~ "position change is instantaneous. Otherwise, the position change takes "
#~ "`delay` seconds, and is animated as a linear move."
#~ msgstr ""
#~ "Drag の位置を変更します。 Drag が表示されていないと位置の変更は瞬間です。"
#~ "そうでなければ、位置の変更は `delay` 秒かかり、等速で移動するアニメーショ"
#~ "ンが表示されます。"

#~ msgid "Raises this displayable to the top of its drag_group."
#~ msgstr "この displayable をその DragGroup のトップに持ち上げます。"

#~ msgid ""
#~ "Represents a group of Drags. A Drag is limited to the boundary of its "
#~ "DragGroup. Dropping only works between Drags that are in the same "
#~ "DragGroup. Drags may only be raised when they are inside a DragGroup."
#~ msgstr ""
#~ "Drag のグループを表します。ドラッグはその DragGroup 内部に制限されます。ド"
#~ "ロップは同じ DragGroup に所得する Drag 間でのみ働きます。 Drag はそれが "
#~ "DragGroup の内側にあるときのみ持ち上げられます。"

#~ msgid "A DragGroup is laid out like a :func:`Fixed`."
#~ msgstr ":func:`Fixed` と同様に DragGroup はレイアウトされます。"

#~ msgid ""
#~ "All positional parameters to the DragGroup constructor should be Drags, "
#~ "that are added to the DragGroup."
#~ msgstr ""
#~ "DragGroup のコンストラクターに渡されるすべての位置引数はその DragGroup に"
#~ "追加される Drag であるべきです。"

#~ msgid "`min_overlap`"
#~ msgstr "`min_overlap`"

#~ msgid ""
#~ "An integer which means the minimum number of pixels at the overlap so "
#~ "that drop will be allow."
#~ msgstr ""
#~ "ドロップが受け入れられる最小のオーバーラップするピクセル数を表す整数です。"

#~ msgid "Adds `child`, which must be a Drag, to this DragGroup."
#~ msgstr ""
#~ "`child` をこの DragGroup に追加します。 `child` は Drag でなければいけませ"
#~ "ん。"

#~ msgid ""
#~ "Returns the first child of this DragGroup that has a drag_name of name."
#~ msgstr "drag_name の名前を持つこの DragGroup の最初の子を返します。"

#~ msgid "Removes `child` from this DragGroup."
#~ msgstr "DragGroup から `child` を除去します。"

#~ msgid ""
#~ "The drag and drop system can be used either through the :ref:`Screen "
#~ "Language <screens>` or directly as displayables. It makes sense to use "
#~ "the screen language when you don't need to refer to the Drags that you "
#~ "create after they've been created. This might be the case if the "
#~ "draggable represents a window that the user places on the scren. If you "
#~ "need to refer to the drags after they've been created, then it's often "
#~ "better to create Drags directly, and add them to a DragGroup."
#~ msgstr ""
#~ "ドラッグドロップシステムは :ref:`スクリーン言語 <screens>` を通してか、ま"
#~ "たは直接 displayable として使用できます。作成後に作成した Drag を参照する"
#~ "必要がないときは、スクリーン言語を使用すると良いでしょう。これはドラッグ可"
#~ "能オブジェクトが、ユーザーがスクリーン上に配置したウィンドウである場合など"
#~ "です。作成後も作成した Drag を参照する必要がある場合は、直接 Drag を作成"
#~ "し、それらを DragGroup に追加すると良いでしょう。"
