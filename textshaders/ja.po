# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2024, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 8.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-11 11:17+0900\n"
"PO-Revision-Date: 2025-03-02 12:05+0900\n"
"Last-Translator: kyouryuukunn <akakyouryuu@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.2.4\n"

#: ../../source/textshaders.rst:3
msgid "Text Shaders"
msgstr "テキストシェーダー"

#: ../../source/textshaders.rst:5
msgid ""
"Ren'Py contains a text shader system that makes it possible to control how "
"Ren'Py displays text. When enabled, the text shader system uses :doc:`model` "
"to render two triangles for each unicode character. Shader parts, either "
"specified from the creator or generated by Ren'Py, are applied to the model, "
"and can change how text is displayed."
msgstr ""
"Ren'Py には、Ren'Py がテキストを表示する方法を制御できるテキストシェーダーシ"
"ステムが含まれています。有効にすると、テキストシェイダー システムは :doc:"
"`model` を使用して、各文字につき 2 つの三角形をレンダリングします。シェーダー"
"パーツは、開発者から指定されたものか、Ren'Py によって生成されたものかにかかわ"
"らず、モデルに適用され、テキストの表示方法を変更できます。"

#: ../../source/textshaders.rst:11
msgid "The text shader documentation is in three parts:"
msgstr "テキストシェーダーのドキュメントは、次の3パートに分けられます :"

#: ../../source/textshaders.rst:13
msgid "How to use text shaders"
msgstr "テキストシェーダーの使い方"

#: ../../source/textshaders.rst:14
msgid "What text shaders are included in Ren'Py"
msgstr "Ren'Py に含まれるテキストシェーダー"

#: ../../source/textshaders.rst:15
msgid "How to create new text shaders"
msgstr "新しいテキストシェーダーを作成する方法"

#: ../../source/textshaders.rst:17
msgid ""
"Note that while text shaders are intended to be easily used by game "
"creators, making your own text shaders requires some knowledge of GLSL, the "
"OpenGL Shading Language, as well as :doc:`model`, and hence is more advanced "
"than most Ren'Py features."
msgstr ""
"テキストシェーダーはゲームクリエイターが簡単に使えるように意図されています"
"が、独自のテキストシェーダーを作るには GLSL つまり OpenGL シェーディング言語"
"と :doc:`model` の知識が必要で、Ren'Py のほとんどの機能よりも高度です。"

#: ../../source/textshaders.rst:24
msgid "Using Text Shaders"
msgstr "テキストシェーダの使用"

#: ../../source/textshaders.rst:26
msgid "There are three ways to use text shaders:"
msgstr "テキストシェーダを使用するには、次の 3 つの方法があります。 :"

#: ../../source/textshaders.rst:28
msgid ""
"**Default Text Shader** The first is to set the default text shader, using :"
"var:`config.default_textshader`. ::"
msgstr ""
"**デフォルトのテキストシェイダー** 1つ目は、 :var:`config."
"default_textshader` を使用してデフォルトのテキストシェイダーを設定します ::"

#: ../../source/textshaders.rst:33
msgid ""
"When set this way, the text shader will be used for all text that does not "
"specify a text shader. It will also be combined with text shaders that "
"include the default text shader, which is most of them."
msgstr ""
"このように設定すると、テキストシェーダーが指定されていないすべてのテキストに"
"このテキストシェーダーが使用されます。また、デフォルトのテキストシェイダーを"
"含みテキストシェイダーの組み合わせも使用できます。"

#: ../../source/textshaders.rst:37
msgid ""
"Generally, the default textshader should take care of slow text and "
"shouldn't add more complicated effects."
msgstr ""
"一般に、デフォルトのテキストシェーダーはスローテキスト(一文字ずつ表示するテキ"
"スト)を処理し、より複雑な効果は追加すべきでありません。"

#: ../../source/textshaders.rst:40
msgid ""
"**Styles** The second way to use text shaders is to set the :propref:"
"`textshader` style property, either directly or in one of the many ways "
"provided by Ren'Py to set styles. ::"
msgstr ""
"**スタイル** テキストシェーダーを使う 2 つ目の方法は、 :propref:`textshader` "
"スタイルプロパティーを直接設定するか、 Ren'Py が提供するスタイル設定方法のう"
"ちの 1 つでの設定です。 ::"

#: ../../source/textshaders.rst:55
msgid ""
"**Text Tags** The third way to use text shaders is to use the :tt:"
"`appropriate text tag <shader>` to change the look of a portion of text. ::"
msgstr ""
"**テキストタグ** テキストシェーダーを使用する 3 つ目の方法は、 :tt:`適切な "
"text tag <shader>` を使用した、一部のテキストの外観変更です。 ::"

#: ../../source/textshaders.rst:60
msgid ""
"**Note** A text block should either use text shaders or not - mixing is not "
"supported. For example, you should set :var:`config.default_textshader` or :"
"propref:`textshader` style property if you use the text tag like above."
msgstr ""
"**注** テキストブロックは、テキストシェーダーを使用するか使用しないかのどちら"
"かにする必要があり、混合はサポートされていません。例えば、上記のようにテキス"
"トタグを使用する場合は、 :var:`config.default_textshader` または :propref:"
"`textshader` スタイルプロパティーを設定する必要があります。"

#: ../../source/textshaders.rst:65
msgid "Specifying Text Shaders"
msgstr "テキストシェーダの指定"

#: ../../source/textshaders.rst:67
msgid "Text shaders are specified as strings like::"
msgstr "テキストシェーダーは、次のような文字列として指定されます。 ::"

#: ../../source/textshaders.rst:73
msgid ""
"The first part of the string, before the first colon, is the name of the "
"text shader. The rest of the string is a series of uniforms that are passed "
"to the shader, separated by colons. (Uniforms are parameters that are passed "
"to the shader, that can be used to control how the shader works.)"
msgstr ""
"文字列の最初の部分 (最初のコロンの前) は、テキストシェイダーの名前です。文字"
"列の残りの部分は、シェーダーに渡される一連の uniform で、コロンで区切られてい"
"ます( uniform はシェーダーに渡されるパラメータで、シェーダーの動作を制御する"
"ために使用できます)。"

#: ../../source/textshaders.rst:78
msgid ""
"Uniforms can be specified by name followed by =, or the name can be omitted "
"to set each uniform in order. (Omitting the name is not supported in Ren'Py "
"7.) While internally all uniforms begin with u\\_, the u\\_ can be omitted "
"for brevity."
msgstr ""
"uniform は、名前に続く = で指定するか、各 uniform を順番に設定して名前を省略"
"できます(名前の省略は Ren'Py 7 ではサポートされていません)。内部的には、すべ"
"ての uniform は u\\_ で始まりますが、簡潔にするために u\\_ を省略できます。"

#: ../../source/textshaders.rst:82
msgid "The value of a uniform can be:"
msgstr "uniform の値は次のとおりです。"

#: ../../source/textshaders.rst:84
msgid ""
"Between 1 and 4 numbers, separated by commas. These can be used with the the "
"float, vec2, vec3, or vec4 types."
msgstr ""
"コンマで区切られた 1 から 4 の間の数字。これらは、 float, vec2, vec3 または "
"vec4 タイプで使用できます。"

#: ../../source/textshaders.rst:86
msgid ""
"A color, beginning with #. (For example, #f00 or #ff0000 for red.) This "
"creates a vec4 corresponding to that color. This color will be premultiplied "
"by its alpha channel."
msgstr ""
"# で始まる色(例えば、赤の場合は #f00 または #ff0000)。これにより、その色に対"
"応する vec4 が作成されます。この色は、そのアルファチャンネルによって事前に乗"
"算されます。"

#: ../../source/textshaders.rst:89
msgid ""
"A :doc:`displayable <displayables>` that will be used as a texture. This "
"creates a sampler2D that can be used to sample the texture."
msgstr ""
"テクスチャとして使用される :doc:`displayable <displayables>` です。これがテク"
"スチャのサンプリングに使用できる sampler2D を作成します。"

#: ../../source/textshaders.rst:93
msgid ""
"Uniform values can't be expressions or access variables, though it is "
"possible to use text interpolation to create a string that can be evaluated "
"as a textshader tag or its parameter."
msgstr ""
"uniform の値を式やアクセス変数にはできませんが、テキスト置換を使用して、テキ"
"ストシェーダタグまたはそのパラメータとして評価できる文字列を作成できます。"

#: ../../source/textshaders.rst:98
msgid ""
"Finally, text shaders can be combined with each other using the | operator. "
"For example::"
msgstr ""
"最後に、テキストシェーダーは、| 演算子を使用して互いに組み合わせられます。例"
"えば ::"

#: ../../source/textshaders.rst:103
msgid ""
"This will apply both the jitter and wave shaders to the text. This only "
"works if the shaders are compatible with each other, and do not use the same "
"uniforms (or use the uniform in a way that is compatible with each other, in "
"which case it takes the value from the last shader in the list)."
msgstr ""
"これにより、 jitter と wave の両方のシェーダーがテキストに適用されます。これ"
"は、シェーダーが互いに互換性があり、同じ uniform を使用しない(または、リスト"
"の最後のシェーダーから値を取得して互いに互換性のある方法で uniform を使用す"
"る)場合にのみ機能します。"

#: ../../source/textshaders.rst:108
msgid ""
"Unless a textshader has `include_default` set to False, the default "
"textshader will be combined with the textshader specified in the style or "
"tag."
msgstr ""
"テキストシェーダーの `include_default` が False に設定されていない限り、デ"
"フォルトのテキストシェーダーはスタイルまたはタグで指定されたテキストシェー"
"ダーと組み合わせられます。"

#: ../../source/textshaders.rst:113
msgid "Text Shader Callbacks"
msgstr "テキストシェーダーコールバック"

#: ../../source/textshaders.rst:115
msgid ""
"The :var:`config.textshader_callbacks` variable can be used to set a "
"callback that is run when a text shader is applied. This can be used to "
"customize the text shader based on a preference. ::"
msgstr ""
":var:`config.textshader_callbacks` 変数により、テキストシェーダーが適用された"
"ときに実行されるコールバックを設定できます。これを使用して、設定に基づいてテ"
"キストシェーダーをカスタマイズできます。 ::"

#: ../../source/textshaders.rst:133
msgid "Built-In Text Shaders"
msgstr "組み込みのテキストシェーダ"

#: ../../source/textshaders.rst:135
msgid "Ren'Py includes a number of built-in text shaders. These are:"
msgstr "Ren'Py には多数の組み込みテキストシェーダーが含まれています。 ::"

#: ../../source/textshaders.rst:141
msgid "Creating Text Shaders"
msgstr "テキストシェーダの作成"

#: ../../source/textshaders.rst:143
msgid ""
"Text shaders are GLSL programs that are run on the GPU. These shaders are "
"registered using the renpy.register_text_shader function."
msgstr ""
"テキストシェイダーは、 GPU 上で実行される GLSL プログラムです。これらのシェー"
"ダーは、関数 renpy.register_text_shader を使用して登録されます。"

#: ../../source/textshaders.rst:149
msgid "Variables in Text Shaders"
msgstr "テキストシェーダーの変数"

#: ../../source/textshaders.rst:151
msgid ""
"In additions to the uniforms you provided to the text shader (generally "
"beginning with ``u__``), Ren'Py makes the following variables available to "
"text shaders. To use a variable in a text shader, it needs to be declared in "
"the `variables` argument to renpy.register_text_shader."
msgstr ""
"テキストシェーダーに提供したユニフォーム (通常は ``u__`` で始まる) に加えて、"
"Ren'Py は以下の変数をテキストシェーダーで利用できるようにします。テキスト"
"シェーダーで変数を使用するには、変数を renpy.register_text_shader の "
"`variables` 引数で宣言する必要があります。"

#: ../../source/textshaders.rst:155
msgid ""
"In addition to these, the model :ref:`uniforms and attributes <model-"
"uniforms>` are available, with `a_position`, `a_tex_coord`, `u_time` and "
"`u_random` being particularly useful."
msgstr ""
"これらに加えて、 :ref:`model uniforms と attributes <model-uniforms>` が利用"
"可能です、特に `a_position`, `a_tex_coord`, `u_time`, `u_random` が便利です。"

#: ../../source/textshaders.rst:160
msgid "Uniforms"
msgstr "Uniform"

#: ../../source/textshaders.rst:164
msgid "``float u_text_depth``"
msgstr "``float u_text_depth``"

#: ../../source/textshaders.rst:163
msgid ""
"The depth of the text from the top. The topmost text has a depth of 0.0, the "
"first outline or shadow has a depth of 1.0, the second outline or shadow has "
"a depth of 2.0, and so on."
msgstr ""
"最前面からのテキストの深度です。最前面のテキストの深度は 0.0になり、1つ目のア"
"ウトラインや影は深度1.0、2つ目のアウトラインや影は深度2.0のようになります。"

#: ../../source/textshaders.rst:167
msgid "``float u_text_main``"
msgstr "``float u_text_main``"

#: ../../source/textshaders.rst:167
msgid ""
"If this is 1.0, the text is the main text. If this is 0.0, the text is the "
"outline or shadow of the main text."
msgstr ""
"これが 1.0 の場合、そのテキストはメインテキストです。これが 0.0 の場合、その"
"テキストはメインテキストのアウトラインまたは影です。"

#: ../../source/textshaders.rst:171
msgid "``float u_text_max_depth``"
msgstr "``float u_text_max_depth``"

#: ../../source/textshaders.rst:170
msgid ""
"The maximum value of u_text_depth. This is the number of outlines and "
"shadows that will be drawn. When u_text_depth is equal to this value, the "
"texct is the last outline or shadow, which may be useful for drawing "
"backgrounds."
msgstr ""
"u_text_depth の最大値。これは描画されるアウトラインと影の数です。 "
"u_text_depth がこの値と等しい場合、そのテキストが最後のアウトラインまたはシャ"
"ドウとなり、背景の描画に役立つ場合があります。"

#: ../../source/textshaders.rst:174
msgid "``vec2 u_text_offset``"
msgstr "``vec2 u_text_offset``"

#: ../../source/textshaders.rst:174
msgid ""
"The offset of the text from the center of the character. This is in drawable "
"pixels in x, y order."
msgstr ""
"文字の中心からのテキストのオフセット。これは、x、y順の描画可能なピクセルで"
"す。"

#: ../../source/textshaders.rst:177
msgid "``float u_text_outline``"
msgstr "``float u_text_outline``"

#: ../../source/textshaders.rst:177
msgid ""
"The width of the outline around the text. This is in drawable pixels, and is "
"the distance from the edge of the text to the edge of the outline."
msgstr ""
"テキストの周りのアウトラインの幅。これは描画可能なピクセル単位で、テキストの"
"端からアウトラインの端までの距離です。"

#: ../../source/textshaders.rst:180
msgid "``float u_text_slow_duration``"
msgstr "``float u_text_slow_duration``"

#: ../../source/textshaders.rst:180
msgid ""
"The duration of a single slow character, when showing slow text. 0.0 if not "
"showing slow text."
msgstr ""
"低速テキストを表示するときの低速テキストの 1 文字の長さ。低速テキストを表示し"
"ていない場合は 0.0。"

#: ../../source/textshaders.rst:185
msgid "``float u_text_slow_time``"
msgstr "``float u_text_slow_time``"

#: ../../source/textshaders.rst:183
msgid ""
"The time in seconds since the start of the slow text effect. This will only "
"increase until the end of slow text, when it will max out. If the user "
"clicks to terminate slow text, this will max out. It should only be used for "
"slow text - use u_time for other effects that need to vary over time."
msgstr ""
"低速テキスト効果の開始からの経過時間(秒単位)。これは、低速テキストが完了し、"
"最大になるまでのみ増加します。ユーザーがクリックして低速テキストを終了する"
"と、これは最大になります。低速テキストにのみ使用してください。時間経過と共に"
"変化する必要のある他のエフェクトには u_time を使用してください。"

#: ../../source/textshaders.rst:188
msgid "``float u_text_to_drawable``"
msgstr "``float u_text_to_drawable``"

#: ../../source/textshaders.rst:188
msgid ""
"The ratio of virtual pixels to drawable pixels. This is used to convert from "
"virtual pixels to drawable pixels."
msgstr ""
"描画可能なピクセルに対する仮想ピクセルの比率。これにより仮想ピクセルから描画"
"可能ピクセルに変換します。"

#: ../../source/textshaders.rst:191
msgid "``float u_text_to_virtual``"
msgstr "``float u_text_to_virtual``"

#: ../../source/textshaders.rst:191
msgid ""
"The ratio of drawable pixels to virtual pixels. This is used to convert from "
"drawable pixels to virtual pixels."
msgstr ""
"仮想ピクセルに対する描画可能なピクセルの比率。これにより描画可能ピクセルから"
"仮想ピクセルに変換します。"

#: ../../source/textshaders.rst:194
msgid "``sampler2D tex0``"
msgstr "``sampler2D tex0``"

#: ../../source/textshaders.rst:194
msgid "This texture contains the rendered text at the current depth."
msgstr "このテクスチャは現在の深度にレンダリングされたテキストを含みます。"

#: ../../source/textshaders.rst:198
msgid "``vec2 res0``"
msgstr "``vec2 res0``"

#: ../../source/textshaders.rst:197
msgid "The resolution of tex0, in drawable pixels."
msgstr "tex0 のの解像度 (描画可能なピクセル単位)。"

#: ../../source/textshaders.rst:201
msgid "Attributes"
msgstr "Attribute"

#: ../../source/textshaders.rst:203
msgid ""
"When drawing text, each vertex corresponds to a single glyph. Multiple "
"glyphs may have vertices that share locations, but these are passed to the "
"shader as different vertices."
msgstr ""
"テキストを描画する場合、各頂点は 1 つのグリフに対応します。複数のグリフの頂点"
"が位置を共有する場合がありますが、これらは異なる頂点としてシェーダーに渡され"
"ます。"

#: ../../source/textshaders.rst:207
msgid "``float a_text_ascent``"
msgstr "``float a_text_ascent``"

#: ../../source/textshaders.rst:207
msgid ""
"The ascent of the current glyph's font above the baseline, in drawable "
"pixels."
msgstr ""
"現在のグリフのフォントのベースラインからの上向きのオフセット (描画可能なピク"
"セル単位)。"

#: ../../source/textshaders.rst:211
msgid "``vec2 a_text_center``"
msgstr "``vec2 a_text_center``"

#: ../../source/textshaders.rst:210
msgid ""
"The position of the center of the glyphs's baseline, in drawable pixels. "
"This is not the center of the rectangle, it's a point on the baseline and "
"around the center of the character."
msgstr ""
"グリフのベースラインの中心の位置 (描画可能なピクセル単位)。これは矩形の中心で"
"はなく、ベースライン上、文字の中心の周りの点です。"

#: ../../source/textshaders.rst:214
msgid "``float a_text_descent``"
msgstr "``float a_text_descent``"

#: ../../source/textshaders.rst:214
msgid ""
"The descent of the current glyph below the baseline, in drawable pixels."
msgstr ""
"現在のグリフのフォントのベースラインからの下向きのオフセット (描画可能なピク"
"セル単位)。"

#: ../../source/textshaders.rst:217
msgid "``float a_text_index``"
msgstr "``float a_text_index``"

#: ../../source/textshaders.rst:217
msgid ""
"The index of the glyph being drawn. This is 0 for the first vertex and goes "
"up by one for each vertex."
msgstr ""
"描画される文字のインデックス。これは、最初の頂点では 0 で、頂点ごとに 1 ずつ"
"増加します。"

#: ../../source/textshaders.rst:222
msgid "``vec2 a_text_min_time``"
msgstr "``vec2 a_text_min_time``"

#: ../../source/textshaders.rst:220
msgid ""
"The minimum time at which any vertex of the glyph should be shown. When "
"showing from left-to-right, this is the time the leftmost vertices should be "
"shown. When the text is meant to be shown instantly but "
"``u_text_slow_duration`` is not 0.0, this will be -3600.0."
msgstr ""
"文字の頂点を表示するべき最小時間。左から右に表示する場合、これは左端の頂点が"
"表示される時間です。 テキストの即時表示を意図しているが、 "
"``u_text_slow_duration`` が 0.0 でないとき、これは -3600.0 になります。"

#: ../../source/textshaders.rst:227
msgid "``vec2 a_text_max_time``"
msgstr "``vec2 a_text_max_time``"

#: ../../source/textshaders.rst:225
msgid ""
"The maximum time at which any vertex of the glyph should be shown. When "
"showing from left-to-right, this is the time the rightmost vertices should "
"be shown. When the text is meant to be shown instantly but "
"``u_text_slow_duration`` is not 0.0, this will be -3600.0."
msgstr ""
"文字の頂点を表示する最大時間。左から右に表示する場合、これは右端の頂点が表示"
"される時間です。 テキストの即時表示を意図しているが、 "
"``u_text_slow_duration`` が 0.0 でないとき、これは -3600.0 になります。"

#: ../../source/textshaders.rst:231
msgid "``float a_text_time``"
msgstr "``float a_text_time``"

#: ../../source/textshaders.rst:230
msgid ""
"The time at which this vertex should be shown. When the text is meant to be "
"shown instantly but ``u_text_slow_duration`` is not 0.0, this will be "
"-3600.0."
msgstr ""
"この頂点が表示されるべき時間。テキストの即時表示を意図しているが、 "
"``u_text_slow_duration`` が 0.0 でないとき、これは -3600.0 になります。"

#: ../../source/textshaders.rst:235
msgid "``vec4 a_text_pos_rect``"
msgstr "``vec4 a_text_pos_rect``"

#: ../../source/textshaders.rst:234
msgid ""
"The rectangle containing the glyph, in drawable pixels. This is a vec4 with "
"the x, y, width, and height of the rectangle, in drawable pixels. This can "
"be converted to texture coordinates by dividing it by ``res0``."
msgstr ""
"グリフを含む描画される矩形 (描画可能なピクセル単位)。これは、矩形の x、y、"
"幅、高さを描画可能なピクセル単位で表した vec4 です。これを ``res0`` で割ると"
"テクスチャ座標に変換できます。"

#: ../../source/textshaders.rst:238
msgid "Pseudo-Glyphs"
msgstr "Pseudo-Glyphs"

#: ../../source/textshaders.rst:240
msgid ""
"Ren'Py will creates pseudo-glyphs that cover the start and end of each line. "
"If a line is blank, one pseudo-glyph is created covering the whole line. "
"These pseudo-glyphs are necessary to cover areas where outlines may extend "
"into a line above or below the current line."
msgstr ""
"Ren'Py は各行の最初と最後をカバーする擬似グリフを作成します。行が空白であれ"
"ば、行全体をカバーする 1 つの擬似グリフが作成されます。これらの擬似グリフは、"
"アウトラインが現在の行の上または下にはみ出て及ぶ可能性のある領域をカバーする"
"必要があります。"

#: ../../source/textshaders.rst:245
msgid "Example"
msgstr "例"

#: ../../source/textshaders.rst:247
msgid "This is an example of a text shader that spins text when shown. ::"
msgstr "これは、表示時にテキストを回転させるテキストシェーダーの例です。 ::"

#: ../../source/textshaders.rst:291
msgid "It can be used witt the following script::"
msgstr "これは、次のスクリプトで使用できます。"

#~ msgid ""
#~ "The dissolve text shader handles text by dissolving it in slowly, with "
#~ "the start dissolving in first, and the end dissolving in last."
#~ msgstr ""
#~ "dissolve テキストシェーダは、先頭が最初にディゾルブし、末尾が最後にディゾ"
#~ "ルブするように、テキストをゆっくりとディゾルブして処理します。"

#~ msgid "`u__duration` = 10.0"
#~ msgstr "`u__duration` = 10.0"

#~ msgid ""
#~ "The number of characters that will be changing alpha at a time.  If set "
#~ "to 0, the wave will move across the text one pixel at a time."
#~ msgstr ""
#~ "一度にアルファを変更する文字の数。 0 に設定すると、ディゾルブの波はテキス"
#~ "ト上を 1 ピクセルずつ移動します。"

#~ msgid ""
#~ "Using this shader will prevent the default text shader from being used."
#~ msgstr ""
#~ "このシェーダを使用すると、デフォルトのテキスト シェーダが使用されなくなり"
#~ "ます。"

#~ msgid ""
#~ "The flip shader flips slow text by flipping the text horizontally, with "
#~ "the start flipping in first, and the end flipping in last."
#~ msgstr ""
#~ "flip シェーダは、テキストを水平方向に反転させて、先頭が最初に反転し、終端"
#~ "が最後に反転するように、スローテキストを反転します。"

#~ msgid ""
#~ "The number of characters that will be changing alpha at a time.  If set "
#~ "to 0, the characters will instantly flip."
#~ msgstr "一度に反転する文字の数。 0 に設定すると、文字は即座に反転します。"

#~ msgid ""
#~ "The jitter text shader moves the text to random positions relative to "
#~ "where it would be normally drawn. The position changes once per frame."
#~ msgstr ""
#~ "jisster テキストシェーダは、テキストを通常描画される場所を基準にしてランダ"
#~ "ムな位置に移動します。位置はフレームごとに 1 回変わります。"

#~ msgid "`u__jitter` = (3.0, 3.0)"
#~ msgstr "`u__jitter` = (3.0, 3.0)"

#~ msgid "The amount of jitter to apply to the text, in pixels."
#~ msgstr "テキストに適用するジッターの量 (ピクセル単位)。"

#~ msgid ""
#~ "Multiplies the text with a texture, one line at a time. The texture is "
#~ "aligned with the left side of the text. The vertical center of the "
#~ "texture is aligned with the baseline of the text - this means that most "
#~ "of the lower half of the texture will not be visible."
#~ msgstr ""
#~ "テキストにテクスチャを一度に 1 行ずつ乗算します。テクスチャはテキストの左"
#~ "側に揃えられます。テクスチャの垂直方向の中心はテキストのベースラインに揃え"
#~ "られています - つまりテクスチャの下半分のほとんどは見えなくなります"

#~ msgid "`u__texture` = ..."
#~ msgstr "`u__texture` = ..."

#~ msgid "The texture to multiply the text by."
#~ msgstr "テキストを乗算するテクスチャ。"

#~ msgid "`u__scale` = (1.0, 1.0)"
#~ msgstr "`u__scale` = (1.0, 1.0)"

#~ msgid ""
#~ "A factor to scale the texture by. For example (1.0, 0.5) will make the "
#~ "texture half as tall as it otherwise would be."
#~ msgstr ""
#~ "テクスチャをスケールする係数。たとえば、(1.0, 0.5) とすると、テクスチャの"
#~ "高さはそうでない場合の半分になります。"

#~ msgid "The offset text shader moves the text by a fixed amount."
#~ msgstr "offset テキスト シェーダは、テキストを一定の量だけ移動します。"

#~ msgid "`u__offset` = (0.0, 0.0)"
#~ msgstr "`u__offset` = (0.0, 0.0)"

#~ msgid "The amount to move the text by, in virtual pixels."
#~ msgstr "テキストを移動する量 (仮想ピクセル単位)。"

#~ msgid ""
#~ "The slowalpha shader is intended to be used with another slow text "
#~ "shader, like typewriter or dissolve. It causes the text that has yet to "
#~ "be revealed to be drawn with an alpha value of `u__alpha` = 0.2, rather "
#~ "than being invisible."
#~ msgstr ""
#~ "slowalpha シェーダーは、 typewriter や dissolve などの他の低速テキストシェ"
#~ "イダーとの併用を意図しています。これにより、まだ表示されていないテキストは"
#~ "非表示にならずに、アルファ値 `u__alpha` = 0.2 で描画されます。"

#~ msgid "`u__alpha` = 0.2"
#~ msgstr "`u__alpha` = 0.2"

#~ msgid "The alpha value of the text that has not been revealed yet."
#~ msgstr "まだ表示されていないテキストのアルファ値。"

#~ msgid ""
#~ "The texture text shader multiplies the text with the colors from a "
#~ "texture. This is not done to outlines or offset text. The texture is "
#~ "aligned with the top left of the text."
#~ msgstr ""
#~ "texture テキストシェーダは、テキストにそのテクスチャーの色を乗算します。こ"
#~ "れは、アウトライン文字やオフセット文字には適用されません。テクスチャはテキ"
#~ "ストの左上に揃えられます。"

#~ msgid ""
#~ "The typewriter text shader handles slow text by making the text appear "
#~ "one character at a time, as if it were being typed out by a typewriter."
#~ msgstr ""
#~ "typewriter テキストシェーダーは、テキストを一度に 1 文字ずつ表示し、タイプ"
#~ "ライターで入力しているかのように表示して、低速テキストを処理します。"

#~ msgid "The wave text shader makes the text bounce up and down in a wave."
#~ msgstr "wave テキスト シェーダは、テキストを波状に上下に跳ね返らせます。"

#~ msgid "`u__amplitude` = 5.0"
#~ msgstr "`u__amplitude` = 5.0"

#~ msgid "The number of pixels up and down the text will move."
#~ msgstr "テキストが移動する上下のピクセル数。"

#~ msgid "`u__frequency` = 2.0"
#~ msgstr "`u__frequency` = 2.0"

#~ msgid "The number of waves per second."
#~ msgstr "振動数。"

#~ msgid "`u__wavelength` = 20.0"
#~ msgstr "`u__wavelength` = 20.0"

#~ msgid "The number of characters between peaks in the wave."
#~ msgstr "波のピーク間の文字数。"

#~ msgid ""
#~ "The zoom text shader handles slow text to cause it to zoom in from an "
#~ "initial size of `u__zoom` = 0.0 to full size."
#~ msgstr ""
#~ "zoom テキストシェーダは、低速テキストを処理して、初期サイズの `u__zoom` = "
#~ "0.0 からフル サイズにズームインします。"

#~ msgid "`u__zoom` = 0.0"
#~ msgstr "`u__zoom` = 0.0"

#~ msgid ""
#~ "The initial amount of zoom to apply to a character when it first starts "
#~ "showing."
#~ msgstr "文字が最初に表示開始されたときに適用する初期ズーム量。"

#~ msgid "This creates a textshader and registers it with the name `name`."
#~ msgstr ""
#~ "これにより、テキストシェーダーが作成され、 `name` という名前で登録されま"
#~ "す。"

#~ msgid "This function takes the following arguments:"
#~ msgstr "この関数は、次の引数を取ります。"

#~ msgid "`name`"
#~ msgstr "`name`"

#~ msgid ""
#~ "This is the name of the textshader. It's also used to register a shader "
#~ "part named textshader.`name`."
#~ msgstr ""
#~ "これはテキストシェーダーの名前です。また、 textshader.`name` という名前の"
#~ "シェーダーパーツを登録するためにも使用されます。"

#~ msgid "`shaders`"
#~ msgstr "`shaders`"

#~ msgid ""
#~ "Shader parts to apply to the text. This can be a string, or a list or "
#~ "tuple of strings. This should be a shader part registered with :func:"
#~ "`renpy.register_shader`, or this function. If a shader part begins with "
#~ "'-', then it is removed from the list of shader parts. (For example, '-"
#~ "textshader.typewriter' will remove that part.)"
#~ msgstr ""
#~ "テキストに適用するシェーダーパーツ。これは、文字列、または文字列のリストま"
#~ "たはタプルです。これは、 :func:`renpy.register_shader` またはこの関数で登"
#~ "録されたシェーダーパーツである必要があります。シェーダーパーツが '-' で始"
#~ "まる場合、それはシェーダーパーツの一覧から削除されます(たとえば、'-"
#~ "textshader.typewriter' はその部分を削除します)。"

#~ msgid ""
#~ "Note that the shader parts registered with this function are prefixed "
#~ "with textshader., which needs to be supplied when used with this function."
#~ msgstr ""
#~ "なお、この関数で登録したシェーダーパーツには接頭辞 textshader. が付きます"
#~ "が、この関数で使用する場合は textshader. を指定する必要があります。"

#~ msgid "`extra_slow_time`"
#~ msgstr "`extra_slow_time`"

#~ msgid ""
#~ "Extra time to add to the slow time effect beyond what Ren'Py will compute "
#~ "from the current characters per second. This is useful for shaders that "
#~ "might take more time to transition a character than the default time. If "
#~ "True, the shader is always updated."
#~ msgstr ""
#~ "Ren'Py が算出する現在の秒間文字数超えた長時間の効果に追加する余分な時間で"
#~ "す。これは、文字の遷移に既定の時間よりも時間がかかる可能性があるシェーダー"
#~ "に役立ちます。 True の場合、シェーダーは常に更新されます。"

#~ msgid "`extra_slow_duration`"
#~ msgstr "`extra_slow_duration`"

#~ msgid ""
#~ "Added to `extra_slow_time`, but this is multiplied by the time per "
#~ "character to get the extra time to add to the slow time effect. (Time per "
#~ "character is 1 / characters per second.)"
#~ msgstr ""
#~ "`extra_slow_time` に追加されますが、こちらは1文字あたりの時間に乗算して効"
#~ "果時間に追加する時間を所得します{1文字あたりの時間は 1 / (1秒あたりの文字"
#~ "数)です}。"

#~ msgid "`redraw`"
#~ msgstr "`redraw`"

#~ msgid ""
#~ "The amount in time in seconds before the text is redrawn, after all slow "
#~ "text has been show and `extra_slow_time` has passed."
#~ msgstr ""
#~ "すべての低速テキストが表示されて `extra_slow_time` が経過した後、テキスト"
#~ "が再描画されるまでの時間(秒単位)です。"

#~ msgid "`redraw_when_slow`"
#~ msgstr "`redraw_when_slow`"

#~ msgid ""
#~ "The amount of time in seconds before the text is redrawn when showing "
#~ "slow text."
#~ msgstr ""
#~ "低速テキストを表示中のそのテキストが再描画されるまでの時間 (秒単位)。"

#~ msgid "`include_default`"
#~ msgstr "`include_default`"

#~ msgid ""
#~ "If True, when this textshader is used directly, it will be combined with :"
#~ "var:`config.default_textshader`."
#~ msgstr ""
#~ "True の場合、このテキストシェーダーを直接使用すると、 :var:`config."
#~ "default_textshader` と結合されます。"

#~ msgid "`adjust_function`"
#~ msgstr "`adjust_function`"

#~ msgid ""
#~ "A function that is called with an object and the uniforms being passed to "
#~ "the text shader as keyworkd arguments. This function can set the "
#~ "`extra_slow_time`, `extra_slow_duration`, `redraw`, and "
#~ "`redraw_when_slow` fields of the object"
#~ msgstr ""
#~ "キーワード引数としてテキストシェーダーに渡されたオブジェクトとユニフォーム"
#~ "を引数に呼び出される関数。この関数は、オブジェクトの `extra_slow_time`, "
#~ "`extra_slow_duration`, `redraw` および `redraw_when_slow` フィールドを設定"
#~ "できます。"

#~ msgid "`doc`"
#~ msgstr "`doc`"

#~ msgid ""
#~ "A string containing documetation information. This is mostly intended for "
#~ "Ren'Py's documentation system."
#~ msgstr ""
#~ "ドキュメント化情報を含む文字列。これは主に Ren'Py のドキュメントシステムを"
#~ "対象としています。"

#~ msgid ""
#~ "Keyword argument beginning with ``u_`` are passed as uniforms to the "
#~ "shader, with strings beginning with ``#`` being interpreted as colors. "
#~ "Most uniforms should begin with ``u__``, using :ref:`shader local "
#~ "variables <shader-local-variables>` to prevent conflicts with other "
#~ "shaders."
#~ msgstr ""
#~ "``u_`` で始まるキーワード引数はユニフォームとしてシェーダに渡され、 ``#`` "
#~ "で始まる文字列は色として解釈されます。ほとんどのユニフォームは ``u__`` で"
#~ "始まり、他のシェーダとの衝突を防ぐために :ref:`shader local variables "
#~ "<shader-local-variables>` を使用します。"

#~ msgid ""
#~ "A keyword argument named `variables` and all keyword arguments that begin "
#~ "with `fragment_` or `vertex_` are passed to :func:`renpy."
#~ "register_shader`, which registers the shader part."
#~ msgstr ""
#~ "`variables` という名前のキーワード引数と、 `fragment_` または `vertex_` で"
#~ "始まるすべてのキーワード引数が :func:`renpy.register_shader` に渡され、"
#~ "シェーダーパーツが登録されます。"

#~ msgid "The time at which this vertex should be shown."
#~ msgstr "この頂点を表示するべき時間。"

#, fuzzy
#~ msgid ""
#~ "The text shader documentation is in thee parts. First, it describes how "
#~ "to use text shaders. Second, it describes the text shaders that come with "
#~ "Ren'Py. Finally, it will describe how to create new text shaders."
#~ msgstr ""
#~ "テキストシェーダーのドキュメントは、各パートにあります。まず、テキスト"
#~ "シェーダーの使用方法について説明します。次に、Ren'Py に付属するテキスト"
#~ "シェーダーについて説明します。最後に、新しいテキストシェーダーを作成する方"
#~ "法について説明します。"
