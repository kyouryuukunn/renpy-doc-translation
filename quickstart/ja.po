# Japanese translation for renpy-doc
# Copyright (c) 2013 Rosetta Contributors and Canonical Ltd 2013
# This file is distributed under the same license as the renpy-doc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: renpy-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-09 14:26+0900\n"
"PO-Revision-Date: 2024-06-23 23:08+0900\n"
"Last-Translator: kyouryuukunn <akakyouryuu@gmail.com>\n"
"Language-Team: Japanese <ja@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2015-03-28 05:30+0000\n"
"X-Generator: Poedit 2.2.4\n"

#: ../../source/quickstart.rst:2
msgid "Quickstart"
msgstr "クイックスタート"

#: ../../source/quickstart.rst:4
msgid ""
"Welcome to the Ren'Py quickstart manual. The purpose of this manual is to "
"demonstrate how you can make a Ren'Py game from scratch in a few easy steps. "
"We'll do this by showing how to make a simple game, *The Question*."
msgstr ""
"Ren'Py クイックスタートマニュアルにようこそ。このマニュアルでは、Ren'Py の"
"ゲームを簡単な手順でゼロから作る方法を説明します。そのために簡単なゲーム "
"*The Question* の作り方をお見せします。"

#: ../../source/quickstart.rst:10
msgid "The Ren'Py Launcher"
msgstr "Ren'Py ランチャー"

#: ../../source/quickstart.rst:13
msgid ""
"Before you begin making a game, you should first take some time to learn how "
"the Ren'Py launcher works. The launcher lets you create, manage, edit, and "
"run Ren'Py projects."
msgstr ""
"ゲームの制作を始める前に、まず少し Ren'Py ランチャーの動作を見ていきましょ"
"う。ランチャーを使って Ren'Py のプロジェクトの作成、管理、編集、実行ができま"
"す。"

#: ../../source/quickstart.rst:17
msgid ""
"**Getting Started.** To get started you'll want to `download Ren'Py <https://"
"www.renpy.org/latest.html>`_."
msgstr ""
"**始めましょう。** まず、 `Ren'Py をダウンロード <http://www.renpy.org/"
"latest.html>`_ します。"

#: ../../source/quickstart.rst:20
msgid "Once you've downloaded Ren'Py, you'll want to extract and run it."
msgstr "Ren'Py をダウンロードしたら、展開して実行してみましょう。"

#: ../../source/quickstart.rst:22
msgid ""
"On Windows, double click on the executable file you download. It will "
"extract Ren'Py into a folder named :file:`renpy-{<version>}`. You can change "
"into that folder and run :file:`renpy.exe`. (It may be presented as :file:"
"`renpy` if extensions are hidden.)"
msgstr ""
"Windows ではダウンローダしたファイルをダブルクリックすると、 Ren'Py は :file:"
"`renpy-<version>` というフォルダーに解凍されます。そのフォルダーに入り、 :"
"file:`renpy.exe` を実行します (拡張子が隠されていると、 renpy.exe ファイル"
"は :file:`renpy` として表示されるかもしれません)。"

#: ../../source/quickstart.rst:27
msgid ""
"On Mac OS X, double-click on the downloaded drive image to mount it as a "
"drive. When the drive opens, copy the folder named :file:`renpy-{<version>}` "
"somewhere else. (Where does not matter, but it has to be moved out of the "
"read-only drive image. Do not move the renpy app out of the folder it's in – "
"it won't work elsewhere.) Then change into it, and run the :file:`renpy` "
"application."
msgstr ""
"Mac OS X ではダウンローダしたドライブイメージをダブルクリックしてドライブにマ"
"ウントします。ドライブが開かれると、 :file:`renpy-{<version>}` という名のフォ"
"ルダーをどこかにコピーしてください(どこでもよいですが、読み込み専用のドライブ"
"イメージ外に移動するべきです。フォルダ内の renpy app はフォルダから移動させな"
"いでください。他の場所で動作しません)。 そこに移動し、 :file:`renpy` アプリ"
"ケーションを実行します。"

#: ../../source/quickstart.rst:34
msgid ""
"On Linux, unpack the tarball, change into the :file:`renpy-{<version>}` "
"directory, and then run :file:`renpy.sh`."
msgstr ""
"Linux では、 tarball を解凍し、:file:`renpy-{<version>}` ディレクトリに入っ"
"て :file:`renpy.sh` を実行してください。"

#: ../../source/quickstart.rst:37
msgid "After running this, the Ren'Py launcher should run."
msgstr "実行すると、Ren'Py ランチャーが起動するはずです。"

#: ../../source/quickstart.rst:39
msgid ""
"The Ren'Py launcher has been translated to multiple languages. To change the "
"language, choose \"preferences\" at the bottom right, and then select the "
"language."
msgstr ""
"Ren'Py ランチャーは複数の言語に翻訳されています。言語を変更するには、"
"「preferences(設定)」選択後、希望の言語を選んで下さい。"

#: ../../source/quickstart.rst:43
msgid ""
"**Choosing and Launching a Project.** You should first see what the "
"completed *The Question* game looks like. To do this, start the Ren'Py "
"launcher, and choose \"The Question\" from the first screen. Choose \"Launch "
"Project\" to start *The Question*."
msgstr ""
"**プロジェクトの選択と起動** 先ず *The Question* のような完成されたゲームを見"
"てみましょう。これには Ren'Py ランチャーを起動し、最初の画面から *The "
"Question* を選択します。 *Launch Project (プロジェクトの起動)* を選んで *The "
"Question* を起動しましょう。"

#: ../../source/quickstart.rst:48
msgid ""
"You can get back to the Ren'Py demo by doing the same thing, but choosing "
"\"Tutorial\" instead of \"The Question\"."
msgstr ""
"「The Question」の代わりに 「Tutorial」 を選択しても、同様の手順で Ren'Py の"
"デモンストレーションが見れます。"

#: ../../source/quickstart.rst:57
msgid "The main screen of the Ren'Py launcher."
msgstr "Ren'Py ランチャーのメインスクリーン"

#: ../../source/quickstart.rst:62
msgid "Naming a new project."
msgstr "新しいプロジェクトを名付けます。"

#: ../../source/quickstart.rst:67
msgid "Selecting the project resolution."
msgstr "プロジェクトの設定を選択します。"

#: ../../source/quickstart.rst:72
msgid "Selecting the accent and background colors for the default theme."
msgstr "デフォルトのテーマに対して、アクセントと背景の色を選択します。"

#: ../../source/quickstart.rst:75
msgid ""
"**Creating a new Project.** Create a new project by choosing \"Create New "
"Project\" from the launcher."
msgstr ""
"**Creating a new Project.** ランチャーから \"Create New Project(新規プロジェ"
"クトの作成)\" を選択して新しいプロジェクトを作成します。"

#: ../../source/quickstart.rst:79
msgid ""
"If this is your first time creating a project, Ren'Py may ask you to select "
"the projects directory. This is a directory (also called a folder) where new "
"projects are created, and is scanned for existing projects. The directory "
"chooser might pop up below Ren'Py, so be sure to look for it there."
msgstr ""
"これが最初のプロジェクト作成なら、 Ren'Py はプロジェクトディレクトリを選択す"
"るよう求めます。これは新しいプロジェクトが作成されるディレクトリ(フォルダー)"
"で、既存のプロジェクトはスキャンされます。"

#: ../../source/quickstart.rst:85
msgid ""
"The launcher will then ask you for a project name. Since \"The Question\" is "
"already taken, you should enter something different, like \"My Question\", "
"and type enter."
msgstr ""
"ランチャーはプロジェクト名を求めます。  \"The Question\" は既にあるので、 "
"\"My Question\" のように違うなにかをタイプして入力してください。"

#: ../../source/quickstart.rst:89
msgid ""
"After that, the launcher will ask you to select the project resolution. "
"1280x720 is a good compromise between game size and image quality. For the "
"purpose of this tutorial, we will select 1280x720 to match \"The Question\" "
"game art, then click \"Continue\"."
msgstr ""
"その後、ランチャーはプロジェクトの解像度を選ぶよう求めます。 1280x720 は、"
"ゲームサイズと画像クオリティーでよくバランスがとれています。このチュートリア"
"ルでは \"The Question\" のゲーム画像に一致する 1280X720 を選択し、 \"Continue"
"\" をクリックします。"

#: ../../source/quickstart.rst:94
msgid ""
"The launcher will then ask you to choose a color scheme – an accent and "
"background color for the new GUI. It doesn't matter what you pick at this "
"point, so just pick something you find appealing, and then click \"Continue"
"\"."
msgstr ""
"ランチャーはカラースキーム(新しい GUI に対するアクセントとバックグラウンドの"
"色)を選択するよう求めます。ここでは何を選ぶかは問題ではありませんので、好きな"
"ものを選んで  \"Continue\" をクリックしてください。"

#: ../../source/quickstart.rst:99
msgid ""
"At this point, Ren'Py will process for a bit, and spit out a simple game "
"template. The template used placeholder art and text, but is runnable, and "
"supports expected features like rollback, loading, and saving. Choose "
"\"Launch Project\" to run it."
msgstr ""
"ここで Ren'Py は少しの処理をして、簡単なゲームのテンプレートを分離します。テ"
"ンプレートには placeholder の絵とテキストが使用さていますが、実行可能でロール"
"バックやロード、セーブのような期待される機能がサポートされています。 "
"\"Launch Project(プロジェクトの起動)\" を選択して起動してください。"

#: ../../source/quickstart.rst:106
msgid "A Simple Game"
msgstr "簡単なゲーム"

#: ../../source/quickstart.rst:122
msgid ""
"This is a very simple Ren'Py game. It doesn't include any pictures or music, "
"but it does show a conversation between two characters, and a line of "
"narration."
msgstr ""
"これは、Ren'Py のゲームの中で最も簡単なもののひとつでしょう。絵などは一切無"
"く、二人のキャラクターの会話とナレーションだけを表示します。"

#: ../../source/quickstart.rst:126
msgid ""
"To try this out, from the top screen of the launcher select \"My Question\" "
"project, and then choose \"script.rpy\" from under Edit File. If this is "
"your first time, Ren'Py will ask you to select an editor (we recommend "
"Editra for first time creators), and will download the editor you choose. "
"Then it will open the script file in the editor."
msgstr ""
"これを試すためにはランチャーを開いて「 My Question Project 」を選択し「 Edit "
"File(ファイルの編集)」から「 script.rpy 」を選択します。これが最初なら、 "
"Ren'Py はテキストエディター(最初の開発者には Editra を勧めます)を選択するよう"
"求め、選んだエディターをダウンロードします。それが完了すると script.rpy はそ"
"のエディターで開かれます。"

#: ../../source/quickstart.rst:132
msgid ""
"Once the editor opens, erase everything in :file:`script.rpy`. We're "
"starting from scratch, so you don't need what's there. Copy the example "
"above into :file:`script.rpy`, and save it."
msgstr ""
"エディターを開いたら、 :file:`script.rpy` のすべてを削除してください。スク"
"ラッチからスタートするので、何も必要ありません。上述の例を :file:`script."
"rpy` にコピーして保存してください。"

#: ../../source/quickstart.rst:136
msgid ""
"You're now ready to run this example. Go back to the launcher, and choose "
"\"Launch Project\". Ren'Py will start up. Notice how, without any extra "
"work, Ren'Py has given you menus that let you load and save the game, and "
"change various preferences. When ready, click \"Launch Project\", and play "
"through this example game."
msgstr ""
"さあ、このゲームを実行してみましょう。ランチャーに戻って、 「Launch "
"Project(プロジェクトの起動)」 を選択してください。その他のどんな作業をしなく"
"とも、 Ren'Py が起動し、ゲームのロード、セーブ、複数の設定の変更をするメ"
"ニューが表示されると気づくでしょう。準備が出来たら、「 Start Game 」をクリッ"
"クして、このゲームをひと通りプレイしてみてください。"

#: ../../source/quickstart.rst:142
msgid "This example shows some of the commonly-used Ren'Py statements."
msgstr ""
"この例では Ren'Py でよく使われるステートメントをいくつか使用しています。"

#: ../../source/quickstart.rst:144
msgid ""
"The first line is a :ref:`label statement <label-statement>`. The label "
"statement is used to give a name to a place in the program. In this case, we "
"create a label named ``start``. The start label is special, as it's where "
"Ren'Py scripts begin running when the user clicks \"Start Game\" on the main "
"menu."
msgstr ""
"1行目は label ステートメントです。 :ref:`label ステートメント <label-"
"statement>` は、プログラム内のある場所に名前を与えるのに使います。この例で"
"は、 ``start`` という名前のラベルを作ります。start ラベルは、ユーザーがメイン"
"メニューで「Start Game」をクリックしたときに Ren'Py のスクリプトが始まる場所"
"となる、特別なラベルです。"

#: ../../source/quickstart.rst:150
msgid ""
"The other lines are :ref:`say statements <say-statement>`. There are two "
"forms of the say statement. The first is a string (beginning with a double-"
"quote, containing characters, and ending with a double-quote) on a line by "
"itself, which is used for narration, and the thoughts of the main character. "
"The second form consists of two strings. It's used for dialogue, with the "
"first string being a character name and the second being what that character "
"is saying."
msgstr ""
"残りの行は :ref:`say statements <say-statement>` です。say ステートメントには"
"2つの形式があります。第1の形式はある行に文字列 (ダブルクオートで始まり、文字"
"を含み、ダブルクオートで終わるもの) だけがあるものです。これはナレーションや"
"メインキャラクターの思考に使われます。第2の形式は2つの文字列で構成され、前半"
"の文字列はキャラクターの名前で、後半の文字列はそのキャラクターの台詞です。こ"
"れは会話に使われます。"

#: ../../source/quickstart.rst:158
msgid ""
"Note that all the say statements are indented by four spaces. This is "
"because they are a block underneath the label statement. In Ren'Py, blocks "
"must be indented relative to the prior statement, and all of the statements "
"in a block must be indented by the same amount."
msgstr ""
"なお、ここの say ステートメントはすべて4つのスペースでインデントされていま"
"す。このステートメントは label ステートメントの下にあるブロックだからです。"
"Ren'Py では、ブロックは先行するステートメントに対してインデントされていなけれ"
"ばならず、ブロック内のすべてのステートメントは同じ量だけインデントされている"
"必要があります。"

#: ../../source/quickstart.rst:163
msgid ""
"When strings contain double-quote characters, those characters need to be "
"preceded by a backslash. For example"
msgstr ""
"文字列がダブルクォーテーションを含むときはそのダブルクォーテーションの前に"
"バックスラッシュを置かなければなりません。例 ::"

#: ../../source/quickstart.rst:171
msgid ""
"While this simple game isn't much to look at, it's an example of how easy it "
"is to get something working in Ren'Py. We'll add the pictures in a little "
"bit, but first, let's see how to define characters."
msgstr ""
"この簡単なゲームは見栄えはしませんが、Ren'Py で動くものを作ることがいかに簡単"
"か、という一例です。少ししたら画像を追加しますが、その前に、キャラクターを定"
"義する方法を見てみましょう。"

#: ../../source/quickstart.rst:176
msgid "Characters"
msgstr "キャラクター"

#: ../../source/quickstart.rst:178
msgid "*Main article:* :ref:`defining-character-objects`"
msgstr "*詳細:* :ref:`defining-character-objects`"

#: ../../source/quickstart.rst:180
msgid ""
"One problem with the first example is that it requires you to repeatedly "
"type the name of a character each time they speak. In a dialogue-heavy game, "
"this might be a lot of typing. Also, both character names are displayed in "
"the same way, in the accent color selected when starting the game. To fix "
"this, Ren'Py lets you define characters in advance. This lets you associate "
"a short name with a character, and to change the color of the character's "
"name."
msgstr ""
"最初の例ではキャラクターがしゃべる度にそのキャラクター名を繰り返し打ち込まな"
"ければならない問題があります。台詞の多いゲームだとタイプ量が多くなります。ま"
"た、どちらのキャラクターの名前も同じように表示され、ゲーム開始時に選択された"
"色になります。これを解決するために、Ren'Py ではキャラクターを先に定義しておけ"
"ます。これにより、短い名前をキャラクターに関連付け、さらにキャラクター名の色"
"を変えられます。"

#: ../../source/quickstart.rst:206
msgid ""
"The first and and second lines define characters. The first line defines a "
"character with the short name of \"s\", the long name \"Sylvie\", with a "
"name that is shown in a greenish color. (The colors are red-green-blue hex "
"triples, as used in web pages.)"
msgstr ""
"1行目と2行目はキャラクターを定義しています。1行目は短い名前が「s」、長い名前"
"が「Sylvie」で、名前が緑色で表示されるキャラクターを定義しています(色はウェブ"
"ページで使われているようなRGBの16進数です)。"

#: ../../source/quickstart.rst:211
msgid ""
"The second line creates a character with a short name \"m\", a long name \"Me"
"\", with the name shown in a reddish color. Other characters can be defined "
"by copying one of the character lines, and changing the short name, long "
"name, and color."
msgstr ""
"2行目は、短い名前が「m」、長い名前が「Me」で、名前が赤色で表示されるキャラク"
"ターを定義しています。Character の行をコピーし、短い名前、長い名前、色を変え"
"て、他のキャラクターも定義できます。"

#: ../../source/quickstart.rst:216
msgid ""
"We've also changed the say statements to use character objects instead of a "
"character name string. This tells Ren'Py to use the characters we defined."
msgstr ""
"また、say ステートメントでもキャラクター名の文字列の代わりに Character オブ"
"ジェクトを使うように変更しました。これにより、定義したキャラクターを使うよう"
"に Ren'Py に指示します。"

#: ../../source/quickstart.rst:221
msgid "Images"
msgstr "画像"

#: ../../source/quickstart.rst:223
msgid "*Main article:* :doc:`displaying_images`"
msgstr "*:doc:* :ref:`displaying-images`"

#: ../../source/quickstart.rst:225
msgid ""
"A visual novel isn't much of a visual novel without pictures. Here's another "
"scene from \"The Question\". This also includes statements that show images "
"to the player. This can fully replace the previous section of script, if you "
"want to try it out."
msgstr ""
"絵がなければビジュアルノベルとはいえません。ここに \"The Question\" からのも"
"う一つのシーンがあります。これにはプレイヤーに画像を表示するステートメントも"
"含まれます。試したければ、前回のスクリプト部分を置き換えだけでよいです。"

#: ../../source/quickstart.rst:261
msgid ""
"This segment of script introduces two new statements. The ``scene`` "
"statement on line 6 clears all images and displays a background image. The "
"``show`` statements on lines 16 and 26 display a sprite on top of the "
"background, and change the displaying sprite, respectively."
msgstr ""
"スクリプトのこの部分では二つの新しいステートメントを導入します。6行目の "
"``scene`` ステートメントはすべての画像を除去し、バックグラウンド画像を表示し"
"ます。16と26行目の ``show`` ステートメントはそれぞれ背景の上に立ち絵を表示"
"し、表示している立ち絵を変更します。"

#: ../../source/quickstart.rst:266
msgid ""
"In Ren'Py, each image has a name. The name consists of a tag, and optionally "
"one or more attributes. Both the tag and attributes should begin with a "
"letter, and contain letters, numbers, and underscores. For example:"
msgstr ""
"Ren'Py では各画像に名前があります。その名前はタグと任意の一つ以上の属性から成"
"ります。タグと属性は共にアルファベットで始まり、アルファベット、数字、アン"
"ダースコアで構成されます。例 :"

#: ../../source/quickstart.rst:270
msgid ""
"In the scene statement on line 6, the tag is \"bg\", and the attribute is "
"\"meadow.\"  By convention, background images should use the tag bg."
msgstr ""
"6行目の scene ステートメントで、タグは \"bg\", 属性は \"meadow\" です。慣例的"
"に、背景画像は bg タグを使用するべきです。"

#: ../../source/quickstart.rst:273
msgid ""
"In the first show statement on line 16, the tag is \"sylvie\", and the "
"attributes are \"green\" and \"smile\"."
msgstr ""
"16行目の最初の show ステートメントで、タグは \"sylve\", 属性は \"green\" と "
"\"smile\" です。"

#: ../../source/quickstart.rst:276
msgid ""
"In the second show statement on line 26, the tag is \"sylvie\", and the "
"attributes are \"green\" and \"surprised\"."
msgstr ""
"26行目の show ステートメントで、タグ \"sylvie\", 属性は \"green\" と "
"\"surprised\" です。"

#: ../../source/quickstart.rst:279
msgid ""
"Only one image with a given tag can be shown at the same time. When a second "
"image with the same tag is show, it replaces the first image, as happens on "
"line 26."
msgstr ""
"指定されたタグをもつ画像は同時に一つだけ表示できます。同じタグを持つ別の画像"
"が表示されると、最初のタグの画像が26行目のように置き換えられます。"

#: ../../source/quickstart.rst:284
msgid ""
"Ren'Py searches for image files in the images directory, which can be found "
"by selecting \"images\" in the \"Open Directory\" section of the launcher. "
"Ren'Py expects character art to be an PNG, WEBP, or AVIF file, while "
"background art should be a JPG, JPEG, PNG, WEBP, or AVIF file. SVG files are "
"also supported, but mostly used to customize the interface. The name of a "
"file is very important – the extension is removed, the file name is forced "
"to lowercase, and that's used as the image name."
msgstr ""
"ランチャーの \"Open Directory(ディレクトリーを開く)\" にある \"images\" を選"
"択すると表示される images ディレクトリ内で、Ren'Py は画像ファイルを検索しま"
"す。Ren'Py はキャラクター画像は PNG か WEBP, AVIF 背景画像を JPGかJPEG, PNG, "
"WEBP, AVIF ファイルであると期待します。 SVG ファイルもサポートされますが、"
"もっぱらインターフェースのカスタマイズに使用されています。ファイル名はとても"
"重要で、拡張子は除去され、小文字に変換されて、画像名として使用されます。"

#: ../../source/quickstart.rst:292
msgid ""
"For example, the following files, placed in the images directory, define the "
"following images."
msgstr ""
"例えば images ディレクトリに配置された以下のファイルは以下の画像を定義しま"
"す。"

#: ../../source/quickstart.rst:295
msgid "\"bg meadow.jpg\" -> ``bg meadow``"
msgstr "\"bg meadow.jpg\" -> ``bg meadow``"

#: ../../source/quickstart.rst:296
msgid "\"sylvie green smile.png\" -> ``sylvie green smile``"
msgstr "\"sylvie green smile.png\" -> ``sylvie green smile``"

#: ../../source/quickstart.rst:297
msgid "\"sylvie green surprised.png\" -> ``sylvie green surprised``"
msgstr "\"sylvie green surprised.png\" -> ``sylvie green surprised``"

#: ../../source/quickstart.rst:299
msgid "Since the filenames are lowercase, the following also holds."
msgstr "ファイル名は小文字になるので、以下も同じです。"

#: ../../source/quickstart.rst:301
msgid "\"Sylvie Green Surprised.png\" -> ``sylvie green surprised``"
msgstr "\"Sylvie Green Surprised.png\" -> ``sylvie green surprised``"

#: ../../source/quickstart.rst:303
msgid ""
"Images can be placed in subdirectories (subfolders) under the images "
"directory. The directory name is ignored and only the filename is used to "
"define the image name."
msgstr ""
"画像は images ディレクトリ下のサブディレクトリにも配置できます。そのディレク"
"トリ名は無視され、ファイル名は画像名を定義するのに使われます。"

#: ../../source/quickstart.rst:307
msgid ""
"**Hide Statement.** Ren'Py also supports a ``hide`` statement, which hides "
"the given image."
msgstr ""
"**hide ステートメント** Ren'Py は、与えられた画像を非表示にする ``hide`` ス"
"テートメントもサポートしています。"

#: ../../source/quickstart.rst:322
msgid ""
"It's actually pretty rare that you'll need to use hide. Show can be used "
"when a character is changing emotions, while scene is used when everyone "
"leaves. You only need to use hide when a character leaves and the scene "
"stays the same."
msgstr ""
"実際には hide はあまり使わないでしょう。キャラクターの表情が変わるときには "
"show が使えますし、全員がいなくなるときは scene が使われます。hide が必要なの"
"は、あるキャラクターがいなくなり、場面は変わらない時だけです。"

#: ../../source/quickstart.rst:327
msgid ""
"**Image Statement.** Sometimes, a creator might not want to let Ren'Py "
"define images automatically. This is what the ``image`` statement is for. It "
"should be at the top level of the file (unindented, and before label start), "
"and can be used to map an image name to an image file. For example::"
msgstr ""
"**Image ステートメント** 開発者は、 Ren'Py に自動定義をして欲しくないときがあ"
"ります。このため、 ``image`` ステートメントがあります。これは(インデントなし"
"で、 start ラベルの前の)ファイルの最初にあるべきで、画像名を画像ファイルに対"
"応付けるために使用されます。例 ::"

#: ../../source/quickstart.rst:336
msgid ""
"The image statement is run at init time, before label start and the rest of "
"the game script that interacts with the player."
msgstr ""
"image ステートメントは start ラベルやプレイヤーとのインタラクションがあるその"
"他のゲームスクリプトの前、初期化時に実行されます。"

#: ../../source/quickstart.rst:339
msgid ""
"The image statement can also be used for more complex tasks, but that's "
"discussed :doc:`elsewhere <displaying_images>`."
msgstr ""
"image ステートメントはさらに複雑な処理にも使用できますが、それは :doc:`他の場"
"所 <displaying_images>` で語られます。"

#: ../../source/quickstart.rst:344
msgid "Transitions"
msgstr "トランジション"

#: ../../source/quickstart.rst:346
msgid "*Main article:* :doc:`transitions`"
msgstr "*詳細:* :doc:`transitions`"

#: ../../source/quickstart.rst:348
msgid ""
"In the script above, pictures pop in and out instantaneously. Since changing "
"location or having a character enter or leave a scene is important, Ren'Py "
"supports transitions that allow effects to be applied when what is being "
"shown changes."
msgstr ""
"上述のスクリプトでは、画像は即座に表示、非表示されます。場所の変更や、キャラ"
"クターの入退場は重要なため、表示の変更時にエフェクトを適用するトランジション"
"を Ren'Py はサポートします。"

#: ../../source/quickstart.rst:353
msgid ""
"Transitions change what is displayed from what it was at the end of the last "
"interaction (dialogue, menu, or transition – among other statements) to what "
"it looks like after scene, show, and hide statements have run."
msgstr ""
"トランジションは前のインタラクション(台詞やメニュー、トランジション) が終わっ"
"た時点の表示から、scene、show、hide ステートメントが実行された後の表示に画面"
"を変えます。"

#: ../../source/quickstart.rst:384
msgid ""
"The with statement takes the name of a transition to use. The most common "
"one is ``dissolve`` which dissolves from one screen to the next. Another "
"useful transition is ``fade`` which fades the screen to black, and then "
"fades in the new screen."
msgstr ""
"with ステートメントは、使用するトランジションの名前を受け取ります。よく使うも"
"のの一つは ``dissolve`` で、ある画面から次の画面に徐々に移行します。便利なト"
"ランジションには他に ``fade`` があり、真っ黒な画面にフェードアウトし、それか"
"ら新しい画面にフェードインします。"

#: ../../source/quickstart.rst:389
msgid ""
"When a transition is placed after multiple scene, show, or hide statements, "
"it applies to them all at once. If you were to write::"
msgstr ""
"トランジションが複数の scene、show、hide ステートメントの後に置かれたとき、ト"
"ランジションはそれらすべてに同時に適用されます。次のように書くとします::"

#: ../../source/quickstart.rst:397
msgid ""
"Both the \"bg meadow\" and \"sylvie green smile\" images would be dissolved "
"in at the same time. To dissolve them in one at a time, you need to write "
"two with statements::"
msgstr ""
"「bg meadow」と「sylvie smiles」の両方が同時にディゾルブします。一人ずつディ"
"ゾルブさせたいときは、2つの with ステートメントを書く必要があります ::"

#: ../../source/quickstart.rst:407
msgid ""
"This first dissolves in the meadow, and then dissolves in sylvie. If you "
"wanted to instantly show the meadow, and then show sylvie, you could write::"
msgstr ""
"これは、まず meadow をディゾルブし、それから sylvie をディゾルブします。"
"meadow を即座に表示し、それから sylvie をディゾルブさせたい場合は、次のように"
"書けます::"

#: ../../source/quickstart.rst:417
msgid ""
"Here, None is used to indicate a special transition that updates Ren'Py's "
"idea of what the prior screen was, without actually showing anything to the "
"player."
msgstr ""
"ここで、特殊なトランジションを指定する None が使われていますが、これは実際に"
"はユーザーに何も表示せずに Ren'Pyの 先頭スクリーンの内部状態を更新します。"

#: ../../source/quickstart.rst:422
msgid "Positions"
msgstr "位置"

#: ../../source/quickstart.rst:424
msgid "*Main article:* :doc:`transforms`"
msgstr "*詳細:* :doc:`transforms`"

#: ../../source/quickstart.rst:426
msgid ""
"By default, images are shown centered horizontally, and with their bottom "
"edge touching the bottom of the screen. This is usually okay for backgrounds "
"and single characters, but when showing more than one character on the "
"screen it probably makes sense to do it at another position. It also might "
"make sense to reposition a character for story purposes."
msgstr ""
"デフォルトでは、画像は水平方向には中央に、そして画像の下端が画面の下端に重な"
"るように表示されます。これは背景と1人のキャラクターでは十分ですが、画面に2人"
"以上のキャラクターがいるときは別の位置にするべきです。また、ストーリーによっ"
"てはキャラクターを移動させたい時もあります。"

#: ../../source/quickstart.rst:438
msgid ""
"To do this repositioning, add an ``at`` clause to a show statement. The at "
"clause takes a position, and shows the image at that position. Ren'Py "
"includes several predefined positions: ``left`` for the left side of the "
"screen, ``right`` for the right side, ``center`` for centered horizontally "
"(the default), and ``truecenter`` for centered horizontally and vertically."
msgstr ""
"この移動を行うには、show ステートメントに at 節を加えます。at 節は表示位置を"
"受け取り、画像をその位置に表示します。Ren'Py では表示位置を前もっていくつか定"
"義しており、 ``left`` はスクリーンの左側に、 ``right`` は右側に、 ``center`` "
"は水平方向の中央 (デフォルト) に、そして ``truecenter`` は水平方向にも垂直方"
"向にも中央に、それぞれ表示します。"

#: ../../source/quickstart.rst:445
msgid ""
"Creators can define their own positions, and event complicated moves, but "
"that's outside of the scope of this quickstart."
msgstr ""
"ユーザーは独自の表示位置や複雑な動きを定義できますが、それはクイックスタート"
"の範囲外になります。"

#: ../../source/quickstart.rst:449
msgid "Music and Sound"
msgstr "音楽と効果音"

#: ../../source/quickstart.rst:451
msgid "*Main article:* :doc:`audio`"
msgstr "*詳細:* :doc:`audio`"

#: ../../source/quickstart.rst:453
msgid ""
"Most Ren'Py games play music in the background. Music is played with the "
"``play music`` statement. The play music statement takes a filename that is "
"interpreted as an audio file to play.  Audio filenames are interpreted "
"relative to the game directory. Audio files should be in opus, ogg vorbis, "
"or mp3 format."
msgstr ""
"ほとんどのゲームではバックグラウンドで曲を再生します。曲は ``play music`` ス"
"テートメントで再生されます。これは再生するオーディオファイルとして解釈される"
"ファイル名を受け取ります。オーディオファイル名はゲームディレクトリに対する相"
"対パスと解釈されます。オーディオファイルは opus または ogg vorbis, mp3 フォー"
"マットであるべきです。"

#: ../../source/quickstart.rst:459
msgid "For example::"
msgstr "例 :"

#: ../../source/quickstart.rst:464
msgid ""
"When changing music, one can supply a ``fadeout`` and a ``fadein`` clause, "
"which are used to fade out the old music and fade in the new music. ::"
msgstr ""
"曲を変更するときは ``fadeout``, ``fadein`` 節が使用可能で、それらを使用して以"
"前の曲をフェードアウトし、新しい曲をフェードインします。 ::"

#: ../../source/quickstart.rst:470
msgid ""
"The ``queue music`` statement plays an audio file after the current file "
"finishes playing. ::"
msgstr ""
"``queue music`` ステートメントは現在のファイルの再生終了後にファイルを再生し"
"ます。 ::"

#: ../../source/quickstart.rst:476
msgid ""
"Music can be stopped with the ``stop music`` statement, which can also "
"optionally take a fadeout clause. ::"
msgstr ""
"音楽は ``stop music`` ステートメントで停止できます。これもオプションで "
"fadeout 節を受け取れます::"

#: ../../source/quickstart.rst:482
msgid ""
"Sound effects can be played with the ``play sound`` statement. Unlike music, "
"sound effects do not loop. ::"
msgstr ""
"効果音は ``play sound`` ステートメントで再生され、music とは違いループしませ"
"ん。 ::"

#: ../../source/quickstart.rst:489
msgid ""
"When a filename is in the :file:`game/audio` directory, and the name without "
"the file extension can be used as a Python variable (that is, it begins with "
"a letter, and contains only letters, numbers, and underscores), it is "
"possible to play that file without using quotes."
msgstr ""
"ファイル名が :file:`game/audio` ディレクトリにあり、拡張子を除く名前が "
"Python 変数として利用可能(文字で始まり、文字、数値、アンダースコアのみを含む)"
"であればそのファイルを引用府で囲わないでも再生できます。"

#: ../../source/quickstart.rst:494
msgid "For example, if :file:`game/audio/illurock.ogg` exists, we can write::"
msgstr ""
"例えば :file:`game/audio/illurock.ogg` が存在すれば、次のように書けます。 ::"

#: ../../source/quickstart.rst:499
msgid "See :ref:`the audio namespace <audio-namespace>` for more details."
msgstr ""
"詳細は :ref:`the audio namespace <audio-namespace>` を参照してください。"

#: ../../source/quickstart.rst:505
msgid "Pause Statement"
msgstr "Pause ステートメント"

#: ../../source/quickstart.rst:507
msgid ""
"The ``pause`` statement causes Ren'Py to pause until the mouse is clicked. ::"
msgstr ""
"``pause`` ステートメントは Ren'Py をマウスがクリックされるまで停止します。 ::"

#: ../../source/quickstart.rst:512
msgid ""
"If a number is given, the pause will end when that number of seconds have "
"elapsed. ::"
msgstr "数字が指定されると、その秒数が経過後ポーズが終わります。 ::"

#: ../../source/quickstart.rst:520
msgid "Ending the Game"
msgstr "ゲームの終了"

#: ../../source/quickstart.rst:522
msgid ""
"You can end the game by running the ``return`` statement, without having "
"called anything. Before doing this, it's best to put something in the game "
"that indicates that the game is ending, and perhaps giving the user an "
"ending number or ending name. ::"
msgstr ""
"何も呼び出していない状態で ``return`` ステートメントを実行するとゲームを終了"
"できます。その前に、ゲームの終了を表す何か、例えばエンディング番号やエンディ"
"ング名を伝えるのがよいでしょう::"

#: ../../source/quickstart.rst:532
msgid ""
"That's all you need to make a kinetic novel, a game without any choices in "
"it. Now, we'll look at what it takes to make a game that presents menus to "
"the user."
msgstr ""
"選択肢のないゲーム、キネティックノベルを作るのに必要なことは以上です。それで"
"は、ユーザーに選択肢を提示するために必要なことを見てみましょう。"

#: ../../source/quickstart.rst:537
msgid "Menus, Labels, and Jumps"
msgstr "選択肢、ラベル、ジャンプ"

#: ../../source/quickstart.rst:539
msgid "*Main articles:* :doc:`menus` *and* :doc:`label`"
msgstr "*詳細:* :doc:`menus` *と* :doc:`label`"

#: ../../source/quickstart.rst:541
msgid "The ``menu`` statement lets presents a choice to the player::"
msgstr "``menu`` ステートメントを使うと、ユーザーに選択肢を提示できます ::"

#: ../../source/quickstart.rst:570
msgid ""
"This example shows how a menu can be used with Ren'Py. The menu statement "
"introduces an in-game choice. It takes an indented block of lines, each "
"consisting of a string followed by a colon. These are the menu choices that "
"are presented to the player. Each menu choice takes its own indented block "
"of lines, which is run when that menu choices is chosen."
msgstr ""
"この例は、Ren'Py で選択肢がどのように使われているかを表しています。menu ス"
"テートメントは選択肢を導入します。menu ステートメントは文字列の後にコロンを付"
"けた行からなるブロックを受け取ります。この文字列はユーザーに提示されるそれぞ"
"れの選択肢になります。それぞれの選択肢に続けて 1 行以上の Ren'Py ステートメン"
"トのブロックを書かなければなりません。ある選択肢が選ばれると、それに続くス"
"テートメントが実行されます。"

#: ../../source/quickstart.rst:576
msgid ""
"In this example, each of the two menu choices runs a single ``jump`` "
"statement. The jump statement transfers control to the a label defined using "
"the label statement. After a jump, script statements following the label are "
"run."
msgstr ""
"上の例ではそれぞれの選択肢で ``jump`` ステートメントを実行します。jump ステー"
"トメントは、label ステートメントで定義されたラベルに制御を移し、ジャンプ後は"
"そのラベルに続くコードが実行されます。"

#: ../../source/quickstart.rst:580
msgid ""
"In the example above, after Sylvie asks her question, the player is "
"presented with a menu containing two choices. If the player picked \"It's a "
"videogame.\", the first jump statement is run, and Ren'Py will jump to the "
"``game`` label. This will cause the POV character to say \"It's a story with "
"pictures and music.\", after which Ren'Py will jump to the ``marry`` label."
msgstr ""
"上の例では、Sylvie が質問した後、ユーザーに2択の選択肢を提示します。ユーザー"
"が「It's a videogame.」を選ぶと最初の  jump ステートメントが実行され、"
"``game`` ラベルに制御が移ります。これにより、POV キャラクターは「It's a "
"story with pictures and music.」と言い、それから制御が ``marry`` ラベルに移り"
"ます。"

#: ../../source/quickstart.rst:586
msgid ""
"If there is no jump statement at the end of the block associated with the "
"label, Ren'Py will continue on to the next statement. The last jump "
"statement here is technically unnecessary, but is included since it makes "
"the flow of the game clearer."
msgstr ""
"ラベルに対応するブロックの終端に jump ステートメントがないと、 Ren'Py は次の"
"ステートメントに進みます。ここにある最後の jump ステートメントは技術的には不"
"要ですが、ゲームの流れを明確にします。"

#: ../../source/quickstart.rst:591
msgid ""
"Labels may be defined in any file that is in the game directory, and ends "
"with .rpy. The filename doesn't matter to Ren'Py, only the labels contained "
"inside it. You can think of all the .rpy files as being equivalent to a "
"single big .rpy file, with jumps used to transfer control. This gives you "
"flexibility in how you organize the script of a larger game."
msgstr ""
"ラベルは、ゲームディレクトリーの .rpy で終わるどのファイルにも定義できます。"
"Ren'Py にとって重要なのはファイル名ではなく、その中に含まれているラベルだけで"
"す。すべての .rpy ファイルは、制御を移すジャンプによって一つの大きな .rpy "
"ファイルとして考えられます。これにより、巨大なゲームのスクリプトを柔軟に整理"
"できます。"

#: ../../source/quickstart.rst:598
msgid "Supporting Flags using the Default, Python and If Statements"
msgstr "default, Python, if ステートメントによるフラグサポート"

#: ../../source/quickstart.rst:600
msgid "*Main articles:* :doc:`python` *and* :doc:`conditional`"
msgstr "*詳細:* :doc:`python` *と* :doc:`conditional`"

#: ../../source/quickstart.rst:602
msgid ""
"While some games can be made by only using the statements given above, other "
"games require data to be stored and recalled later. For example, it might "
"make sense for a game to remember a choice a player has made, return to a "
"common section of the script, and act on the choice later. This is one of "
"the reasons why Ren'Py has embedded Python support."
msgstr ""
"上記のステートメントだけで作れるゲームもありますが、他のゲームはデータを保存"
"し、後で呼び出す必要があります。例えば、ゲームがプレイヤーの選択を覚えておい"
"て、後で反応するというのができるでしょう。これが Ren'Py が Python をサポート"
"する理由の一つです。"

#: ../../source/quickstart.rst:608
msgid ""
"Here, we'll show how to store a flag containing information about a choice "
"the player has made. To initialize the flag, use the default statement, "
"before label start. ::"
msgstr ""
"ここで、プレイヤーの選択の情報を含むフラグを保持する方法を示します。フラグを"
"初期化するために、start ラベルの前に default ステートメントを使用します。 ::"

#: ../../source/quickstart.rst:619
msgid ""
"The book flag starts off initialized to the special value ``False`` (as with "
"the rest of Ren'Py, capitalization matters), meaning that it is not set. If "
"the book path is chosen, we can set it to True using a Python assignment "
"statement. ::"
msgstr ""
"設定されていなければ、 book フラグは ``False`` で初期化されます。ラベル book "
"への道が選択されると、Python 代入式で以下のように True にできます。 ::"

#: ../../source/quickstart.rst:633
msgid ""
"Lines beginning with a dollar-sign are interpreted as Python statements. The "
"assignment statement here assigns a value to a variable. Ren'Py has support "
"for other ways of including Python, such as a multi-line Python statement, "
"that are discussed in other sections of this manual. Ren'Py supports Python "
"2.7, though we strongly recommend you write Python that runs in Python 2 and "
"Python 3."
msgstr ""
"ドルマークで始まる行は Python ステートメントとして解釈されます。ここの代入ス"
"テートメントは変数に値を代入します。Ren'Py は複数行の Python ステートメントの"
"ような、 Python を含む他の方法もサポートしていますが、それは他のセクションで"
"語られます。Ren'Py は Python2.7 をサポートしていますが、 python 2 と 3 両方で"
"動くように書くことを強く勧めます。"

#: ../../source/quickstart.rst:639
msgid "To check the flag, use the ``if`` statement::"
msgstr "フラグをチェックするため、 ``if`` ステートメントが使用されます。 ::"

#: ../../source/quickstart.rst:645
msgid ""
"If the condition is true, the block of script is run. If not, it is skipped. "
"The ``if`` statement can also take an ``else`` clause, that introduced a "
"block of script that is run if the condition is false. ::"
msgstr ""
"条件が True なら、スクリプトのブロックが実行され,そうでなければスキップされま"
"す。 ``if`` ステートメントは条件が False なら実行されるスクリプトのブロックを"
"導入する ``else`` 節も受け取れます。 ::"

#: ../../source/quickstart.rst:657
msgid ""
"Python variables need not be simple True/False values. Variables can be used "
"to store the player's name, a points score, or for any other purpose. Since "
"Ren'Py includes the ability to use the full Python programming language, "
"many things are possible."
msgstr ""
"もちろん Python の変数は単なる True/False に限定されず、任意の Python の値に"
"できます。変数はプレイヤー名の保存、得点の保存、その他のあらゆる目的に使えま"
"す。Ren'Py では Python プログラミング言語を完全に自由に使えるので、いろいろな"
"ことができます。"

#: ../../source/quickstart.rst:663
msgid "Releasing Your Game"
msgstr "ゲームの公開"

#: ../../source/quickstart.rst:665
msgid ""
"Once you've made a game, there are a number of things you should do before "
"releasing it:"
msgstr "ゲームを作ったら、公開する前にいくつかやるべきことがあります:"

#: ../../source/quickstart.rst:676
msgid "**Check for a new version of Ren'Py.**"
msgstr "**Ren'Py の新しいバージョンをチェックする**"

#: ../../source/quickstart.rst:669
msgid ""
"New versions of Ren'Py are released on a regular basis to fix bugs and add "
"new features. Before releasing, you'll want to click update in the launcher "
"to update Ren'Py to the latest version. You can also download new versions "
"and view a list of changes at `https://www.renpy.org/latest.html <https://"
"www.renpy.org/latest.html>`_."
msgstr ""
"Ren'Py の新しいバージョンでは基本的にバグの修正と新機能の追加が行われます。リ"
"リース前にランチャーのアップデートボタンを押して Ren'Py を最新バージョンに更"
"新してください。 `http://www.renpy.org/latest.html <http://www.renpy.org/"
"latest.html>`_ でも新バージョンのダウンロードと更新履歴の確認が出来ます。"

#: ../../source/quickstart.rst:674
msgid ""
"Rarely, changes to Ren'Py will require you to make a change to your game's "
"script. :doc:`incompatible` has a list of these changes."
msgstr ""
"Ren'Py の変更がゲームスクリプトの変更を要求するのことは滅多にありませんが、 :"
"doc:`incompatible` では非互換な変更がリストされています。"

#: ../../source/quickstart.rst:683
msgid "**Check the Script.**"
msgstr "**スクリプトのチェック**"

#: ../../source/quickstart.rst:679
msgid ""
"From the front page of the launcher, choose \"Check Script (Lint)\". This "
"will check your games for potential errors. Since some of these errors will "
"only affect users on other platforms, it's important to understand and "
"usually fix all errors, even if you don't see the problem on your computer."
msgstr ""
"ランチャーの先頭ページから、 「Check Script (Lint) 」を選びましょう。これは"
"様々なユーザーに影響する潜在的エラーがないかをチェックします。これらのエラー"
"のいくつかは他のプラットフォームのユーザーにのみ影響する可能性があるので、あ"
"なたのコンピューターで問題が起こらなくてもそれらすべてを修正することは重要で"
"す。"

#: ../../source/quickstart.rst:688
msgid "**Build Distributions.**"
msgstr "**配布物の生成**"

#: ../../source/quickstart.rst:686
msgid ""
"From the front page of the launcher, choose \"Build Distributions\". Based "
"on the information contained in options.rpy, the launcher will build one or "
"more archive files containing your game."
msgstr ""
"ランチャーの先頭ページから、「 Build Distributions 」を選びましょう。options."
"rpy に含まれる情報に基づき、ランチャーはひとつ以上のあなたのゲームのアーカイ"
"ブを作ります。"

#: ../../source/quickstart.rst:694
msgid "**Test.**"
msgstr "**テスト**"

#: ../../source/quickstart.rst:691
msgid ""
"Lint is not a substitute for thorough testing. It's your responsibility to "
"check your game before it is released. Consider asking friends to help beta-"
"test your game, as often a tester can find problems you can't."
msgstr ""
"Lint はテストの代わりにはなりません。ゲームを配布する前にテストするのはあなた"
"の責任です。自分では見つけられなかった問題を発見することが多いので、友人に"
"ベータテストの手伝いを頼むとよいでしょう。"

#: ../../source/quickstart.rst:708
msgid "**Release.**"
msgstr "**配布**"

#: ../../source/quickstart.rst:697
msgid ""
"Once the game has been finished and tested, you should post the generated "
"archive files on the web somewhere people can see them. (If you don't have "
"your own website, `https://itch.io <https://itch.io>`_ hosts a lot of visual "
"novels.) Congratulations, you've released your first visual novel!"
msgstr ""
"開発とテストが終了したら、生成されたアーカイブファイルを人が見れるweb上にアッ"
"プするべきです (あなた自身のウェブサイトがないならば、  `https://itch.io "
"<https://itch.io>`_ は多くのビジュアルノベルをホストします)。 おめでとう、あ"
"なたは最初のビジュアルノベルをリリースしました。"

#: ../../source/quickstart.rst:702
msgid "There are a few places where a game can be announced:"
msgstr "ゲームをアナウンスできる場所はいくつかあります。 :"

#: ../../source/quickstart.rst:704
msgid ""
"The `Ren'Py Games List <https://games.renpy.org>`_ helps us keep track of "
"Ren'Py games being made."
msgstr ""
"`Ren'Py Games List <https://games.renpy.org>`_ は開発された Ren'Py ゲームの記"
"録を保持する役に立ちます。"

#: ../../source/quickstart.rst:707
msgid ""
"The `Completed Games section of the Lemma Soft Forums <https://lemmasoft."
"renai.us/forums/viewforum.php?f=11>`_ is a good place to tell fellow "
"creators about your game."
msgstr ""
"`Completed Games section of the Lemma Soft Forums <https://lemmasoft.renai."
"us/forums/viewforum.php?f=11>`_ はゲームを開発者同士で報せ合えるよい場所で"
"す。"

#: ../../source/quickstart.rst:710
msgid ""
"More advanced vays of customizing the building of the distribution of your "
"game can be found in the :doc:`build` section."
msgstr ""
"あなたのゲームの配布物のビルドをカスタマイズするより高度な方法は :doc:"
"`build` のページにあります。"

#: ../../source/quickstart.rst:714
msgid "Script of The Question"
msgstr "The Question のスクリプト"

#: ../../source/quickstart.rst:716
msgid ""
"You can view the full script of ''The Question'' :ref:`here <thequestion>`."
msgstr ""
":ref:`ここで <thequestion>` 「 The Question 」のすべてのスクリプトを見ること"
"が出来ます。"

#: ../../source/quickstart.rst:719
msgid "Where do we go from here?"
msgstr "これから何をする？"

#: ../../source/quickstart.rst:721
msgid ""
"This Quickstart barely scratches the surface of what Ren'Py is capable of. "
"For brevity's sake, we've omitted many features Ren'Py supports and "
"simplified others – focusing on the minimum set of features used to make a "
"visual novel."
msgstr ""
"このクイックスタートは、Ren'Py でできることのほんの一部にしか触れていません。"
"簡単のため、ビジュアルノベルを作成する最小機能にフォーカスし、Ren'Py の多くの"
"機能を省略、単純化しました。"

#: ../../source/quickstart.rst:726
msgid ""
"To get a feel for what Ren'Py is capable of, please play through the "
"Tutorial, and perhaps some of the games featured on the `Ren'Py website "
"<https://www.renpy.org>`_. You may also want to read the rest of this "
"manual, starting with the :ref:`GUI Customization Guide <gui>`."
msgstr ""
"Ren'Pyにできることを知るには、 Tutorial や `Ren'Py website <https://www."
"renpy.org>`_ で特集されている他のゲームをプレイしてください。恐らくこのマニュ"
"アルの残りの部分も読みたいでしょう。まずは :ref:`GUI カスタマイズガイド "
"<gui>` を参照してください。"

#: ../../source/quickstart.rst:731
msgid ""
"Beyond that, we recommend checking out the Ren'Py section of the `Lemma Soft "
"Forums <https://lemmasoft.renai.us/forums>`_, which has a section for asking "
"questions, and a cookbook section with libraries and examples meant for "
"reuse. The Lemma Soft Forums are the central hub of the Ren'Py community, "
"where we welcome new creators and the questions they bring."
msgstr ""
"上記の他に、  `Lemma Soft Forums <https://lemmasoft.renai.us/forums>`_ の "
"Ren'Py もチェックするとよいでしょう。そこには再使用できるライブラリーやサンプ"
"ルのクックブックや質問のセクションがあります。 Lemma Soft Forum は Ren'Py コ"
"ミュニティーの中心で、新しい開発者とその疑問を歓迎します。"

#: ../../source/quickstart.rst:735
msgid ""
"Thank you for choosing the Ren'Py visual novel engine. We look forward to "
"seeing what you create with it!"
msgstr ""
"Ren'Py ビジュアルノベルエンジンを選んでいただき、ありがとうございます。どんな"
"ゲームができるか、楽しみにしています！"

#~ msgid "###"
#~ msgstr "###"

#~ msgid ""
#~ "\"Sylvie\" \"Did you ever hear Lincon's famous saying, \\\"The problem "
#~ "with Internet quotations is that many of them are not genuine.\\\"\""
#~ msgstr ""
#~ "\"Sylvie\" \"Did you ever hear Lincon's famous saying, \\\"The problem "
#~ "with Internet quotations is that many of them are not genuine.\\\"\""

#~ msgid ""
#~ "Once you've downloaded Ren'Py, you'll want to extract it. This can "
#~ "generally be done by right-clicking on the package file, and picking "
#~ "\"Extract\" if that's an option, or \"Open\" if it's not. Follow the "
#~ "prompts, and you'll have a working copy of Ren'Py."
#~ msgstr ""
#~ "Ren'Py をダウンロードしたら、それを解凍します。パッケージファイルを右ク"
#~ "リックし、「展開」のオプションがあればそれを、なければ「開く」を選びます。"
#~ "プロンプトに従えば Ren'Py の作業用コピーを得られます。"

#~ msgid ""
#~ "Please be sure you've extracted Ren'Py to its own directory or folder on "
#~ "disk. If you try to run it from inside a ZIP file, it won't work properly."
#~ msgstr ""
#~ "Ren'Py は、必ずディスクのディレクトリーやフォルダーに展開してください。"
#~ "ZIP ファイルの中から実行しようとすると、適切に動作しません。"

#~ msgid "On Windows, run the ``renpy`` or ``renpy.exe`` program."
#~ msgstr ""
#~ "Windows では、 ``renpy`` または ``renpy.exe`` プログラムを実行してくださ"
#~ "い。"

#~ msgid "On Mac OS X, run the ``renpy`` application."
#~ msgstr "Mac OS X では、 ``renpy`` アプリケーションを実行してください。"

#~ msgid "On Linux, run the ``renpy.sh`` script."
#~ msgstr "Linux では、 ``renpy.sh`` スクリプトを実行してください。"

#~ msgid ""
#~ "**Creating a new Project.** Create a new project by choosing \"Create New "
#~ "Project\" from the launcher. The launcher will then ask you for a project "
#~ "name. Since \"The Question\" is already taken, you should enter something "
#~ "different, like \"My Question\". The launcher will then ask you to choose "
#~ "a color theme for the project. It doesn't matter what you pick at this "
#~ "point, just choose something that appeals to you. You'll be returned to "
#~ "the top menu of the launcher with your new game chosen."
#~ msgstr ""
#~ "**新しいプロジェクトの作成** ランチャーから「 Create New Project 」を選択"
#~ "して新しいプロジェクトの作成をしてください。ランチャーはプロジェクトの名前"
#~ "を尋ねます。「the_question」 はすでに使われているので 「My Question」 のよ"
#~ "うな違った名前を入力するべきです。ランチャーは次にプロジェクトのカラーテー"
#~ "マを尋ねます。ここで入念に選ぶ必要はありません、単にあなたにとって魅力的な"
#~ "ものを選びましょう。これであなたの新しいゲームが選択された状態でランチャー"
#~ "のトップメニューに戻っているでしょう。"

#~ msgid "Init"
#~ msgstr "初期化"

#~ msgid ""
#~ "The init statement is used to execute blocks of Ren'Py statements before "
#~ "the script executes. Init blocks are used to define images and "
#~ "characters, to set up unchanging game data structures, and to customize "
#~ "Ren'Py. Code inside init blocks should not interact with the user or "
#~ "change any of the layers, and so should not contain say, menu, scene, "
#~ "show, or hide statements, as well as calls to any function that can do "
#~ "these things."
#~ msgstr ""
#~ "init ステートメントは、スクリプトを実行する前に Ren'Py ステートメントのブ"
#~ "ロックを実行するために使用されます。init ブロックは画像やキャラクターの定"
#~ "義、変更されないゲームのデータ構造の設定、 Ren'Py のカスタマイズを行うため"
#~ "に使用されます。init ブロック内のコードでは、ユーザーとのインタラクション"
#~ "やレイヤーの変更、say, menu, scene, show/hide ステートメント、またはそれら"
#~ "を行える関数を呼び出すことはできません。"

#~ msgid ""
#~ "An init statement is introduced with the keyword init, followed by an "
#~ "optional priority number, and a mandatory colon. If the priority is not "
#~ "given, it defaults to 0. Priority numbers should be in the range -999 to "
#~ "999. Numbers outside of this range are reserved for Ren'Py code."
#~ msgstr ""
#~ "init ステートメントは予約語 init から始まり、必要に応じて優先度を表す数値"
#~ "が続き、必須のコロンで終わります。優先度が与えられない場合は、既定値の 0 "
#~ "となります。優先度の数値は -999 から 999 までです。この範囲外の数値は "
#~ "Ren'Py のコードのために予約されています。"

#~ msgid ""
#~ "The priority number is used to determine when the code inside the init "
#~ "block executes. Init blocks are executed in priority order from low to "
#~ "high. Within a file, init blocks with the same priority are run in order "
#~ "from the top of the file to the bottom. The order of evaluation of "
#~ "priority blocks with the same priority between files is undefined."
#~ msgstr ""
#~ "優先度を使用して init ブロックのコードがいつ実行されるかを決定します。 "
#~ "init ブロックは優先度が低い順に実行されます。あるファイル内の優先度が同じ "
#~ "init ブロックはファイル最初から順に実行されます。ファイル間で優先度が同じ"
#~ "ブロックの順番は未定義です。"

#~ msgid ""
#~ "The init blocks are all run once, during a special init phase. When "
#~ "control reaches the end of an init block during normal execution, "
#~ "execution of that block ends. If an init statement is encountered during "
#~ "normal execution, the init block is not run. Instead, control passes to "
#~ "the next statement."
#~ msgstr ""
#~ "init ブロックは初期化段階ですべて一度実行されます。通常の実行中は制御が "
#~ "init ブロックの終端に達すると、そのブロックの実行は終了し、 init ステート"
#~ "メントに達すると、その init ブロックは実行されず、代わりに制御は次のステー"
#~ "トメントに移ります。"

#~ msgid ""
#~ "A visual novel isn't much of a visual novel without pictures. Let's add "
#~ "some pictures to our game."
#~ msgstr ""
#~ "ビジュアルノベルは、画像がなければビジュアルノベルになりません。ゲームに画"
#~ "像を追加してみましょう。"

#~ msgid ""
#~ "The first new thing we needed to do was to declare the images, using "
#~ "image statements on lines 2, 3, 5, and 6, inside the init block. These "
#~ "image statements give an image name, and the filename the image is found "
#~ "in."
#~ msgstr ""
#~ "まずは、init ブロックの内部の 2、3、5、6 行目にある image ステートメントを"
#~ "使って画像を宣言します。これらの image ステートメントには画像の名前とその"
#~ "画像があるファイルの名前を与えます。"

#~ msgid ""
#~ "For example, line 5 declares an image named \"sylvie smile\", found in "
#~ "the filename \"sylvie_smile.png\", with the tag \"sylvie\"."
#~ msgstr ""
#~ "例えば5行目では、ファイル名「sylvie_smile.png」で見つかる「sylvie smile」"
#~ "という名前の画像を、「sylvie」というタグで定義しています。"

#~ msgid ""
#~ "We have a scene statement on line 12. This statement clears out the "
#~ "screen, and shows the \"bg meadow\" image. The next line is a show "
#~ "statement, which shows the \"sylvie smile\" image on the screen."
#~ msgstr ""
#~ "12行目にあるのは scene ステートメントです。このステートメントは画面をクリ"
#~ "アして「bg meadow」という画像を表示します。次の行は show ステートメント"
#~ "で、「sylvie smile」という画像を画面に表示します。"

#~ msgid ""
#~ "The first part of an image name is the image tag. If an image is being "
#~ "shown, and another image with the same tag is on the screen, then the "
#~ "image that's on the screen is replaced with the one being shown. This "
#~ "happens on line 19, the second show statement. Before line 19 is run, the "
#~ "image \"sylvie smile\" is on the screen. When line 19 is run, that image "
#~ "is replaces with \"sylvie surprised\", since they share the \"sylvie\" "
#~ "tag."
#~ msgstr ""
#~ "画像名の最初の部分は画像タグです。ある画像が表示されていて、同じタグを持つ"
#~ "別の画像が画面に現れると、画面の画像は新しい画像で置き換えられます。これは"
#~ "19行目の2つ目の show ステートメントで起きています。19 行目が実行される前は"
#~ "「sylvie smile」が画面上にあり、19行目が実行されるときに「sylvie」タグが同"
#~ "じなので、その画像が「sylvie surprised」で置き換えられます。"

#~ msgid ""
#~ "For Ren'Py to find the image files, they need to be placed in the game "
#~ "directory of the current project. The game directory can be found at "
#~ "\"`Project-Name`/game/\", or by clicking the \"Game Directory\" button in "
#~ "the launcher. You'll probably want to copy the image files from the "
#~ "\"the_question/game/\" directory into the \"my_question/game/\" "
#~ "directory, so you can run this example."
#~ msgstr ""
#~ "Ren'Py が画像ファイルを見つけるためには、画像は対象となるプロジェクトの"
#~ "ゲームディレクトリーに置かなければなりません。ゲーム ディレクトリーは「`プ"
#~ "ロジェクト名`/game/」にあり、ランチャーの「Game Directory」ボタンをクリッ"
#~ "クすれば表示できます。 the_question/game/ ディレクトリーから my_question/"
#~ "game/ ディレクトリーに画像をコピーして、この例を実行できるようにしましょ"
#~ "う。"

#~ msgid ""
#~ "Ren'Py does not make any distinction between character and background "
#~ "art, as they're both treated as images. In general, character art needs "
#~ "to be transparent, which means it should be a PNG or WEBP file. "
#~ "Background art can be JPEG, PNG, or WEBP files. By convention, background "
#~ "images start with the \"bg\" tag."
#~ msgstr ""
#~ "Ren'Py はキャラクターと背景を全く区別せず、どちらも画像として同じように扱"
#~ "います。一般に、キャラクターは透過が必要なので PNG またはWEBP ファイルであ"
#~ "るべきです。背景は JPEG や PNG, WEBP ファイルにできます。慣例で、背景画像"
#~ "は「bg」タグで始めることになっています。"

#~ msgid ""
#~ "And if you supply a loop clause, it loops. if you supply a noloop clause, "
#~ "it doesn't loop. In Ren'Py, music files automatically loop until they are "
#~ "stopped by the user. ::"
#~ msgstr ""
#~ "loop 節が与えられるとループし、 noloop 節が与えられるとループしません。 "
#~ "Ren'Py ではオーディオファイルはユーザーが停止するまで自動的にループしま"
#~ "す。 ::"

#~ msgid ""
#~ "The play sound statement can have same clauses with the play music "
#~ "statement."
#~ msgstr ""
#~ "play sound ステートメントは play music ステートメントと同じ節を持てます。"

#~ msgid ""
#~ "Ren'Py support many formats for sound and music, but OGG Vorbis is "
#~ "preferred. Like image files, sound and music files must be placed in the "
#~ "game directory."
#~ msgstr ""
#~ "Ren'Py は多くのフォーマットのボイスや音楽をサポートしていますが、OGG "
#~ "Vorbis がおすすめです。画像ファイルのように、ボイスや音楽ファイルはゲーム"
#~ "ディレクトリーに置かなければなりません。"

#~ msgid ""
#~ "The pause statement causes Ren'Py to pause until the mouse is clicked. If "
#~ "the optional expression is given, it will be evaluated to a number, and "
#~ "the pause will automatically terminate once that number of seconds has "
#~ "elapsed."
#~ msgstr ""
#~ "pause ステートメントは Ren'Py にクリック待ちをさせます。任意で式が指定可能"
#~ "で、評価されて数字になるとその秒数経過後ポーズは自動的に終了します。"

#~ msgid "Python and If Statements"
#~ msgstr "Python と If ステートメント"

#~ msgid ""
#~ "While simple (and even fairly complex) games can be made using only using "
#~ "menus and jump statements, after a point it becomes necessary to store "
#~ "the user's choices in variables, and access them again later. This is "
#~ "what Ren'Py's python support is for."
#~ msgstr ""
#~ "簡単なゲームは (それどころかかなり複雑なゲームでさえ) menu と jump ステー"
#~ "トメントだけで作れますが、それを超えるとユーザーの選択を変数に保存して後で"
#~ "取り出すというようなことが必要になります。このために、Ren'Py は Python を"
#~ "サポートしています。"

#~ msgid ""
#~ "Python support can be accessed in two ways. A line beginning with a "
#~ "dollar-sign is a single-line python statement, while the keyword \"python:"
#~ "\" is used to introduce a block of python statements."
#~ msgstr ""
#~ "Python サポートは2種類の方法で利用できます。ドル記号で始まる行は単行の "
#~ "Python ステートメントで、キーワード「python:」は Python ステートメントのブ"
#~ "ロックを導入するために使います。"

#~ msgid ""
#~ "Python makes it easy to store flags in response to user input. Just "
#~ "initialize the flag at the start of the game::"
#~ msgstr ""
#~ "Python によって、ユーザーの入力に対応したフラグを保存することが簡単になり"
#~ "ます。ゲームの最初にフラグの初期化だけはしておいてください::"

#~ msgid "You can then change the flag in code that is chosen by menus::"
#~ msgstr "そうすれば、選択肢で選択されたフラグをコード内で変更できます::"

#~ msgid "And check it later::"
#~ msgstr "そして、後でこれを判定します::"

#~ msgid ""
#~ "You should post the generated files (for Windows, Mac, and Linux) up on "
#~ "the web somewhere, and tell people where to download them from. "
#~ "Congratulations, you've released a game!"
#~ msgstr ""
#~ "(Windows, Mac, Linux 用に) 生成されたファイルをウェブのどこかにアップロー"
#~ "ドし、ダウンロード出来る場所を知らせましょう。おめでとう、ゲームがリリース"
#~ "されました！"

#~ msgid ""
#~ "You may also want to read the rest of this (complex) manual, as it's the "
#~ "definitive guide to Ren'Py."
#~ msgstr ""
#~ "Ren'Py の決定的なガイドとして、残りの(高度な)マニュアルに進むのもいいで"
#~ "しょう。"

#~ msgid ""
#~ "On the Ren'Py website, there's the a `FAQ <http://www.renpy.org/wiki/"
#~ "renpy/doc/FAQ>`_ giving answers to common questions, and a `Cookbook "
#~ "<http://www.renpy.org/wiki/renpy/doc/cookbook/Cookbook>`_ giving useful "
#~ "code snippets. If you have questions, we suggest asking them at the "
#~ "`Lemma Soft Forums <http://lemmasoft.renai.us/forums/>`_, the official "
#~ "forum of Ren'Py. This is the central hub of the Ren'Py community, where "
#~ "we welcome new users and the questions they bring."
#~ msgstr ""
#~ "Ren'Py のウェブサイトには、よくある質問に答える `FAQ <http://www.renpy."
#~ "org/wiki/renpy/doc/FAQ>`_ や、便利なコード例を載せている `Cookbook "
#~ "<http://www.renpy.org/wiki/renpy/doc/cookbook/Cookbook>`_ などがあります。"
#~ "質問があれば、Ren'Py の公式フォーラムである `Lemma Soft Forums <http://"
#~ "lemmasoft.renai.us/forums/>`_ で質問することをお勧めします。ここは Ren'Py "
#~ "コミュニティーの中心になっており、初心者やその質問を歓迎しています。"

#~ msgid "**Edit options.rpy.**"
#~ msgstr "**options.rpy を編集しましょう。**"

#~ msgid ""
#~ "The options.rpy file, created when you create a new game, contains a "
#~ "number of settings that you may want to customize. Some of them, like the "
#~ "screen height and screen width, should probably be set before making the "
#~ "game. Others, like the window title, can be set any time."
#~ msgstr ""
#~ "新しくゲームを作ったときに作成したこの options.rpy ファイルの中には、カス"
#~ "タマイズしたくなるような設定がたくさんあります。それらの設定の内のいくつか"
#~ "は、スクリーンの高さや幅のように、ゲームを作成する前に設定しておかなければ"
#~ "なりません。それ以外の設定、たとえばウィンドウのタイトルといったものはいつ"
#~ "でも設定できます。"

#~ msgid "**Add a plug for Ren'Py.**"
#~ msgstr "**Ren'Py の広告の挿入**"

#~ msgid ""
#~ "This step is completely optional, but we do ask that if you have credits "
#~ "in your game, you mention Ren'Py in them. We suggest using something like "
#~ "\"Made with the Ren'Py visual novel engine.\", but that's just a "
#~ "suggestion, and what you write is up to you."
#~ msgstr ""
#~ "これは任意ですが、ゲームにクレジットを入れるのであれば、そこに Ren'Py を表"
#~ "示してほしいです。例えば「Ren'Py ビジュアルノベルエンジンを使って作成しま"
#~ "した」のようなものを提案しますが、これはただの例であり、何を書くかはあなた"
#~ "の自由です。"

#~ msgid ""
#~ "We think that the games people make are the best advertising for Ren'Py, "
#~ "and we hope that by including this, you'll help more people learn how to "
#~ "make visual novels in Ren'Py."
#~ msgstr ""
#~ "私たちは制作されたゲームが Ren'Py の最大の宣伝であると考えており、またこれ"
#~ "を含めることで、あなたがより多くの人々に対して Ren'Py によるビジュアルノベ"
#~ "ルの制作を学ぶ手助けをすることを期待します。"
