# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2019, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 7.3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-10-21 22:56+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/conditional.rst:5
msgid "Conditional Statements"
msgstr ""

#: ../../source/conditional.rst:7
msgid "Ren'Py includes several statements that can alter control flow based on expression values. This is in addition to the :ref:`jump <jump-statement>`, :ref:`call <call-statement>` and :ref:`return <return-statement>` statements, which transfer control unconditionally."
msgstr ""

#: ../../source/conditional.rst:12
msgid "Note that is pages discusses statements that can be used inside Ren'Py script. Python embedded in a Ren'Py game uses the Python while, if, and for statements, but can't embed Ren'Py script statements."
msgstr ""

#: ../../source/conditional.rst:19
msgid "If Statement"
msgstr ""

#: ../../source/conditional.rst:21
msgid "The ``if`` statement conditionally executes a block of statements if a Python expression is true. It consists of an ``if`` clause, zero or more ``elif`` clauses, and an optional ``else`` clause."
msgstr ""

#: ../../source/conditional.rst:25
msgid "Each clause should be on its own logical line, followed by a block of statements. The if and elif clauses are followed by an expression, while all clauses end with a colon ``:``."
msgstr ""

#: ../../source/conditional.rst:29
msgid "Examples are::"
msgstr ""

#: ../../source/conditional.rst:45
msgid "The expressions in the if statement are evaluated in order, from first to last. When an expression evaluates to true, the block corresponding to that statement is executed. When control reaches the end of the block, it proceeds to the statement following the if statement."
msgstr ""

#: ../../source/conditional.rst:51
msgid "If all expressions evaluate to false, the block associated with the ``else`` clause is executed, if the ``else`` clause is present."
msgstr ""

#: ../../source/conditional.rst:58
msgid "While Statement"
msgstr ""

#: ../../source/conditional.rst:60
msgid "The ``while`` statement executes a block of statements while an expression evaluates True. For example::"
msgstr ""

#: ../../source/conditional.rst:80
msgid "The expression is evaluated when while statement is first reached, and then each time control reaches the end of the block. When the expression returns a false value, the statement after the while statement is executed."
msgstr ""

#: ../../source/conditional.rst:84
msgid "Ren'Py does not have continue, break, or for statements. Continue and break statements can be replaced by jumps to labels placed before or after the while loop, respectively. The first example of a while loop, above, shows how a while loop can replace a for statement."
msgstr ""

#: ../../source/conditional.rst:93
msgid "Pass Statement"
msgstr ""

#: ../../source/conditional.rst:95
msgid "The ``pass`` statement can be used when a block is required, but no statement is suitable. It does nothing."
msgstr ""

#: ../../source/conditional.rst:98
msgid "For example::"
msgstr ""

