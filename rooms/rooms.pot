# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2020, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 7.4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-30 21:47+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/rooms.rst:6
msgid "Image Gallery, Music Room, and Replay Actions"
msgstr ""

#: ../../source/rooms.rst:11
msgid "Image Gallery"
msgstr ""

#: ../../source/rooms.rst:13
msgid "A image gallery is a screen that allows the player to unlock images, and then view those images. The screen has one or more buttons associated with it, and each button has one or more associated images. Buttons and images also have conditions that determine if they have unlocked."
msgstr ""

#: ../../source/rooms.rst:18
msgid "Image galleries are managed by instances of the Gallery class. A single instance of the gallery class may be shared between multiple image gallery screens."
msgstr ""

#: ../../source/rooms.rst:22
msgid "A gallery has one or more buttons associated with it, a button has one or more images associated with it, and each image has one or more displayables associated with it. Conditions can be assigned to buttons and images. A button is unlocked when all of the conditions associated with it are satisfied and at least one image associated with that button is unlocked. An image is unlocked when all associated conditions are satisfied."
msgstr ""

#: ../../source/rooms.rst:29
msgid "Creating an image gallery consists of the following four steps."
msgstr ""

#: ../../source/rooms.rst:31
msgid "Create an instance of Gallery."
msgstr ""

#: ../../source/rooms.rst:33
msgid "Add buttons and images to that gallery, along with conditions that determine if the buttons and images they belong to are unlocked. This is also a multi-step process."
msgstr ""

#: ../../source/rooms.rst:37
msgid "Declare a new button by calling :meth:`Gallery.button`."
msgstr ""

#: ../../source/rooms.rst:39
msgid "Optionally, add one or more unlock conditions to the button by calling :meth:`Gallery.unlock` or :meth:`Gallery.condition`."
msgstr ""

#: ../../source/rooms.rst:42
msgid "Declare an image by calling :meth:`Gallery.image` with one or more displayables as arguments. Or call the convenience method :meth:`Gallery.unlock_image` instead."
msgstr ""

#: ../../source/rooms.rst:46
msgid "Optionally, call :meth:`Gallery.transform` to associate transforms with the displayables."
msgstr ""

#: ../../source/rooms.rst:49
msgid "Optionally, add one or more unlock conditions to the image by calling :meth:`Gallery.unlock`, :meth:`Gallery.condition`, or :meth:`Gallery.allprior`."
msgstr ""

#: ../../source/rooms.rst:53
msgid "Additional images can be added to a button by repeating steps 3-5, while additional buttons can be added to the gallery by repeating all five steps."
msgstr ""

#: ../../source/rooms.rst:57
msgid "Create an image gallery screen. The screen should display a background, and should contain navigation that allows the user to show other image galleries, or to return to the main or extras menu."
msgstr ""

#: ../../source/rooms.rst:61
msgid "Add a way to display the image gallery screen to the main or extras menu."
msgstr ""

#: ../../source/rooms.rst:63
#: ../../source/rooms.rst:216
msgid "Here's an example::"
msgstr ""

#: ../../source/rooms.rst:175
#: ../../source/rooms.rst:259
msgid "Step 4 will vary based on how your game is structured, but one way of accomplishing it is to add the following line::"
msgstr ""

#: ../../source/rooms.rst:180
#: ../../source/rooms.rst:264
msgid "to the main menu screen."
msgstr ""

#: ../../source/rooms.rst:188
msgid "Music Room"
msgstr ""

#: ../../source/rooms.rst:190
msgid "A music room is a screen that allows the user to select and play music tracks from the game. These tracks may start off locked when the user first begins playing a particular game, and will be unlocked as the user listens to the music while playing the game."
msgstr ""

#: ../../source/rooms.rst:195
msgid "A music room is managed by an instance of the MusicRoom class. There can be more than one MusicRoom instance in a game, allowing a game to have multiple music rooms. Creating a music room consists of the following four steps:"
msgstr ""

#: ../../source/rooms.rst:200
msgid "Create an instance of MusicRoom. The MusicRoom constructor takes parameters to control the channel on which music is played back, and how long it takes to fade music out and back in."
msgstr ""

#: ../../source/rooms.rst:204
msgid "Add music files to the instance."
msgstr ""

#: ../../source/rooms.rst:206
msgid "Create a screen that uses the MusicRoom instance to create actions for buttons, imagebuttons, or hotspots. These actions can pick a track, the next or previous track, or stop and start the music."
msgstr ""

#: ../../source/rooms.rst:210
msgid "Note that the actions used are members of a MusicRoom instance, so if the MusicRoom instance is named ``mr``, then ``mr.Play(\"track1.ogg\")`` is how you'd use the play action."
msgstr ""

#: ../../source/rooms.rst:214
msgid "Add the music room screen to the main menu, or an extras menu."
msgstr ""

#: ../../source/rooms.rst:266
msgid "Using the :func:`Preferences` function, especially ``Preferences(\"music volume\")``, it's possible to include a volume slider on the music screen."
msgstr ""

#: ../../source/rooms.rst:276
msgid "Replay"
msgstr ""

#: ../../source/rooms.rst:278
msgid "Ren'Py also includes the ability to replay a scene from inside a the main or game menu. This can be used to create a \"scene gallery\", or memory gallery that allows the player to repeat important scenes. After the scene finishes, Ren'Py returns to the menu screen that launched the replay."
msgstr ""

#: ../../source/rooms.rst:284
msgid "Scene replay is also possible using the :func:`Start` action. The difference between the two modes are:"
msgstr ""

#: ../../source/rooms.rst:287
msgid "A replay can be launched from any screen while Start can only be used in the main menu or screens shown by the main menu."
msgstr ""

#: ../../source/rooms.rst:290
msgid "When a replay finishes, control returns to the point where the replay was invoked. That point can be inside the main menu, game menu. If a game is in progress when replay is called, game state is preserved."
msgstr ""

#: ../../source/rooms.rst:295
msgid "Saving is disabled while in replay mode."
msgstr ""

#: ../../source/rooms.rst:297
msgid "While in replay mode, a call to :func:`renpy.end_replay` will end the replay. In normal mode, end_replay does nothing."
msgstr ""

#: ../../source/rooms.rst:300
msgid "To take advantage of the replay mode, a scene should begin with a label, and end with a call to :func:`renpy.end_replay`. The scene should make no assumption as to the state of the layers or variables, which can be very different in normal and replay mode. (When a replay begins, the label is invoked with a black screen.)"
msgstr ""

#: ../../source/rooms.rst:306
msgid "For example::"
msgstr ""

#: ../../source/rooms.rst:330
msgid "With the scene define like that, the replay can be invoked with the Replay action::"
msgstr ""

#: ../../source/rooms.rst:335
msgid "There is one store variable used by replay mode:"
msgstr ""

#: ../../source/rooms.rst:339
msgid "When in replay mode, this is sent to the label at which replay mode was started. Outside of replay mode, this is None."
msgstr ""

#: ../../source/rooms.rst:342
msgid "In addition, :var:`config.enter_replay_transition` and :var:`config.exit_replay_transition` are used when entering and exiting replay mode, respectively. :var:`config.replay_scope` adds variables to the cleaned store when entering a replay, and by default sets :var:`_game_menu_screen` to cause right-clicking in a replay to default to showing the preferences screen."
msgstr ""

#: ../../source/rooms.rst:349
msgid "The following variables and actions are used in replay mode:"
msgstr ""

