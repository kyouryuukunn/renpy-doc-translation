# Japanese translation for renpy-doc
# Copyright (c) 2013 Rosetta Contributors and Canonical Ltd 2013
# This file is distributed under the same license as the renpy-doc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: renpy-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-01 10:50+0900\n"
"PO-Revision-Date: 2020-11-01 13:14+0900\n"
"Last-Translator: kyouryuukunn <akakyouryuu@gmail.com>\n"
"Language-Team: Japanese <ja@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2015-03-29 05:43+0000\n"
"X-Generator: Poedit 2.2.4\n"

#: ../../source/transforms.rst:8
msgid "Transforms"
msgstr "変換 (Transform)"

#: ../../source/transforms.rst:10
msgid ""
"A transform can be applied to a displayable to yield another displayable. "
"The built-in transforms are used to control where an object is placed on the "
"screen, while user-defined transforms can cause more complex effects, like "
"motion, zoom, and rotation."
msgstr ""
"変換を displayable に適用すると別の displayable が得られます。組み込みの変換"
"を使うと画面上のオブジェクトの位置座標を変換出来ます。ユーザー定義の変換では"
"移動、ズーム、回転などより複雑な効果を与えられます。"

#: ../../source/transforms.rst:15
msgid ""
"Transforms can be applied by giving the at clause to the scene and show "
"statements. The following applies the \"right\" transform to the eileen "
"happy displayable.::"
msgstr ""
"scene ステートメントや show ステートメントに at 節を与えることで変換を適用で"
"きます。以下のコードは、eileen happy displayable に 「 right 」変換を適用しま"
"す。::"

#: ../../source/transforms.rst:21
msgid ""
"Multiple transforms can be applied by separating them with commas. These "
"transforms are applied from left-to-right, with the rightmost transform "
"taking precedence in the case of conflicts. ::"
msgstr ""
"複数の変換をカンマで区切って適用できます。その変換は左から右へ順に適用され、"
"競合したら最も右のものが優先されます。::"

#: ../../source/transforms.rst:27
msgid ""
"A displayable always has a transform associated with it. If no transform is "
"given, the prior transform is used. When the transform is changed, undefined "
"values are taken from the prior transform, or from ``default`` if there is "
"no prior transform."
msgstr ""
"displayable には、必ず変換が関わります。変換が与えられないと、それまで使って"
"いた変換を引き継ぎます。変換が変えられると、定義されていない値は使っていた変"
"換を引き継ぎ、使っていた変換がなければ ``default`` から取られます。"

#: ../../source/transforms.rst:33
msgid "Default Transforms"
msgstr "デフォルトの変換"

#: ../../source/transforms.rst:35
msgid ""
"Ren'Py ships with a number of transforms defined by default. These "
"transforms position things on the screen. Here's a depiction of where each "
"default transform will position an image. ::"
msgstr ""
"Ren'Py では、組み込みの変換をいくつか定義しています。これらの変換は、画像を画"
"面上に配置します。組み込みの各変換がどこに画像を配置するかをここに示しま"
"す。::"

#: ../../source/transforms.rst:53
msgid ""
"The offscreenleft and offscreenright transforms position images off the "
"screen. These transforms can be used to move things off the screen (remember "
"to hide them afterwards, to ensure that they do not consume resources)."
msgstr ""
"offscreenleft および offscreenright 変換は、画面外に画像を配置します。この変"
"換は、画面外に画像を動かすのに使えます (リソースを浪費しないために、後で必ず "
"hide してください)。"

#: ../../source/transforms.rst:58
msgid "The transforms are:"
msgstr "変換は次のとおりです:"

#: ../../source/transforms.rst:62
msgid "Centers horizontally, and aligns to the bottom of the screen."
msgstr "画面の中央下に配置します。"

#: ../../source/transforms.rst:66
msgid ""
"Centers horizontally, and aligns to the bottom of the screen. This can be "
"redefined via :var:`config.default_transform` to change the default "
"placement of images shown with the show or scene statements."
msgstr ""
"画面の中央下に配置します。 :var:`config.default_transform` を再定義して show "
"ステートメントや scene ステートメントによって表示される画像の位置のデフォルト"
"を変更できます。"

#: ../../source/transforms.rst:72
msgid "Aligns to the bottom-left corner of the screen."
msgstr "画面の左下に配置します。"

#: ../../source/transforms.rst:76 ../../source/transforms.rst:81
msgid ""
"Places the displayable off the left side of the screen, aligned to the "
"bottom of the screen."
msgstr "画面よりも左に配置し、画面下部に合わせます。"

#: ../../source/transforms.rst:86
msgid ""
"Resets the transform. Places the displayable in the top-left corner of the "
"screen, and also eliminates any zoom, rotation, or other effects."
msgstr ""
"変換をリセットします。displayable を画面の左上に配置し、ズーム、回転その他の"
"効果を消去します。"

#: ../../source/transforms.rst:92
msgid "Aligns to the bottom-right corner of the screen."
msgstr "画面の右下に配置します。"

#: ../../source/transforms.rst:96
msgid "Centers horizontally, and aligns to the top of the screen."
msgstr "画面の中央上に配置します。"

#: ../../source/transforms.rst:100
msgid "Aligns to the top-left corner of the screen."
msgstr "画面の左上に配置します。"

#: ../../source/transforms.rst:104
msgid "Aligns to the top-right corner of the screen."
msgstr "画面の右上に配置します。"

#: ../../source/transforms.rst:108
msgid "Centers both horizontally and vertically."
msgstr "水平にも垂直にも中央に配置します。"

#: ../../source/transforms.rst:111
msgid "Creator-Defined Transforms"
msgstr "ユーザー定義の変換"

#: ../../source/transforms.rst:113
msgid ""
"A creator can define a transform using the :ref:`animation and "
"transformation language <atl>`, or the :class:`Transform` function."
msgstr ""
"開発者は、 :ref:`ATL <atl>` , や :class:`Transform`  関数を使って変換を定義で"
"きます。"

#~ msgid ""
#~ "Multiple transforms can be applied by separating them with commas. These "
#~ "transforms are applied from left-to-right, with the rightmost transform "
#~ "taking precendece in the case of conflicts. ::"
#~ msgstr ""
#~ "複数の変換をカンマで区切って適用できます。その変換は左から右へ順に適用さ"
#~ "れ、競合したら最も右のものが優先されます。::"

#~ msgid ""
#~ "Resets the transform. Places the displayable in the top-left corner of "
#~ "the scren, and also eliminates any zoom, rotation, or other effects."
#~ msgstr ""
#~ "変換をリセットします。displayable をスクリーンの左上に配置し、ズーム、回転"
#~ "その他の効果を消去します。"
