# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2020, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 7.4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-04 14:54+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/input.rst:6
msgid "Text Input"
msgstr ""

#: ../../source/input.rst:8
msgid "With some limitations, Ren'Py can prompt the user to input a small amount of text. This prompting is done by the :func:`renpy.input` function, which returns the entered text, allowing it to be saved in a variable or otherwise processed."
msgstr ""

#: ../../source/input.rst:13
msgid "On Linux, text input is limited to languages that do not require input method (IME) support. Most Western languages should work, but Chinese, Japanese, and Korean probably won't."
msgstr ""

#: ../../source/input.rst:17
msgid "The renpy.input function is defined as:"
msgstr ""

#: ../../source/inc/input:5
msgid "Calling this function pops up a window asking the player to enter some text. It returns the entered text."
msgstr ""

#: ../../source/inc/input:9
msgid "`prompt`"
msgstr ""

#: ../../source/inc/input:9
msgid "A string giving a prompt to display to the player."
msgstr ""

#: ../../source/inc/input:12
msgid "`default`"
msgstr ""

#: ../../source/inc/input:12
msgid "A string giving the initial text that will be edited by the player."
msgstr ""

#: ../../source/inc/input:16
msgid "`allow`"
msgstr ""

#: ../../source/inc/input:15
msgid "If not None, a string giving a list of characters that will be allowed in the text."
msgstr ""

#: ../../source/inc/input:20
msgid "`exclude`"
msgstr ""

#: ../../source/inc/input:19
msgid "If not None, if a character is present in this string, it is not allowed in the text."
msgstr ""

#: ../../source/inc/input:24
msgid "`length`"
msgstr ""

#: ../../source/inc/input:23
msgid "If not None, this must be an integer giving the maximum length of the input string."
msgstr ""

#: ../../source/inc/input:28
msgid "`pixel_width`"
msgstr ""

#: ../../source/inc/input:27
msgid "If not None, the input is limited to being this many pixels wide, in the font used by the input to display text."
msgstr ""

#: ../../source/inc/input:32
msgid "`screen`"
msgstr ""

#: ../../source/inc/input:31
msgid "The name of the screen that takes input. If not given, the ``input`` screen is used."
msgstr ""

#: ../../source/inc/input:34
msgid "If :var:`config.disable_input` is True, this function only returns `default`."
msgstr ""

#: ../../source/input.rst:21
msgid "Games that use renpy.input will often want to process the result further, using standard Python string manipulation functions. For example, the following will ask the player for his or her name and remove leading or trailing whitespace. If the name is empty, it will be replaced by a default name. Finally, it is displayed to the user. ::"
msgstr ""

