# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2020, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 7.4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-20 23:16+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/side_image.rst:7
msgid "Side Images"
msgstr ""

#: ../../source/side_image.rst:9
msgid "Many visual novels include a picture of the character that is speaking as part of their interface. Ren'Py calls this image a side image, and has support for automatically selecting and displaying a side image as part of the dialogue."
msgstr ""

#: ../../source/side_image.rst:14
msgid "The side image support assumes that a :func:`Character` is declared with a linked image tag::"
msgstr ""

#: ../../source/side_image.rst:19
msgid "When a character with a linked image tag speaks, Ren'Py creates a pool of image attributes. The linked image tag is added to this pool, as are the current image attributes that are associated with that tag."
msgstr ""

#: ../../source/side_image.rst:23
msgid "To determine the side image associated with a tag, Ren'Py tries to find an image with the tag \"side\", and the largest number of attributes from the pool. If no image can be found, or more than one image has the same number of attributes, a :class:`Null` is shown instead."
msgstr ""

#: ../../source/side_image.rst:28
msgid "For example, say we have the following script::"
msgstr ""

#: ../../source/side_image.rst:46
msgid "At point A, the character ``e`` is speaking, which is linked to the image tag \"eileen\". The \"eileen happy\" image is showing, so the pool of attributes is \"eileen\" and \"happy\". We look for an image with the \"side\" tag, and as many of those attributes as possible – and we match \"side eileen happy\", which is the side image Ren'Py will display."
msgstr ""

#: ../../source/side_image.rst:52
msgid "At point B, the \"eileen concerned\" image is showing. The pool of attributes is now \"eileen\" and \"concerned\". The only matching image is \"side eileen\", so that's what Ren'Py selects. If there was a \"side concerned\" image, there would be ambiguity, and Ren'Py wouldn't display an image."
msgstr ""

#: ../../source/side_image.rst:59
msgid "Invisible Characters"
msgstr ""

#: ../../source/side_image.rst:61
msgid "Another use of the side image is to show an image of the player character, when that character has dialogue. The way to do this is to link an image to the character, and then use the say with attributes construct to select the side image to show."
msgstr ""

#: ../../source/side_image.rst:66
msgid "For example::"
msgstr ""

#: ../../source/side_image.rst:82
msgid "Variations"
msgstr ""

#: ../../source/side_image.rst:84
msgid "There are a number of attributes of side images that can be controlled using config variables."
msgstr ""

#: ../../source/side_image.rst:89
msgid "If this is given, then the side image will track the given image tag, rather than the image associated with currently speaking character. For example,"
msgstr ""

#: ../../source/side_image.rst:99
msgid "Will make the side image track the \"eileen\" image tag, which is associated with the ``e`` character."
msgstr ""

#: ../../source/side_image.rst:104
msgid "When set to true, the side image will only show if an image with that tag is not already being shown on the screen."
msgstr ""

#: ../../source/side_image.rst:109
msgid "The prefix that is used when searching for a side image."
msgstr ""

#: ../../source/side_image.rst:113
msgid "The Null displayable to use when not displaying a side image. This be changed, but only to other Null objects. One reason for doing so would be to set the side of the Null (eg. ``Null(width=200, height=150)``) to prevent dissolves from being cut off."
msgstr ""

#: ../../source/side_image.rst:120
msgid "If not None, a transform that is used when the new side image shares the same image tag as the previous side image."
msgstr ""

#: ../../source/side_image.rst:125
msgid "If not None, a transform that is used when the new side image does not share the name image tag (or one of the new or old side images does not exist)."
msgstr ""

#: ../../source/side_image.rst:131
msgid "Transforms and Transitions"
msgstr ""

#: ../../source/side_image.rst:133
msgid "The :var:`config.side_image_same_transform` and :var:`config.side_image_change_transform` transforms are called with two arguments – old and new side image displayables – each time the side image is displayed. These can be used to move around side images, or use a transition to go between side images."
msgstr ""

#: ../../source/side_image.rst:139
msgid "This causes the side image to slide in and out when the character associated with that image changes::"
msgstr ""

#: ../../source/side_image.rst:156
msgid "This is used to dissolve between old and new side images when the character remains the same. (For example, when the character changes emotion.) For the :class:`Dissolve` to work correctly, both side images must be the same size. ::"
msgstr ""

#: ../../source/side_image.rst:169
msgid "Leaving Room / Customization"
msgstr ""

#: ../../source/side_image.rst:171
msgid "By default, the entire width of the screen is taken up by the text. If one tries to display a side image, it will be displayed on top of the text. To fix this, one should include margin or padding on the appropriate side of the text window::"
msgstr ""

#: ../../source/side_image.rst:179
msgid "The position of the side image can be changed by customizing the ``say`` or ``nvl`` screens. Both include the line::"
msgstr ""

#: ../../source/side_image.rst:184
msgid "By changing the :propref:`xalign` and :propref:`yalign` properties, you can control the positioning of the side image on the screen."
msgstr ""

#: ../../source/side_image.rst:187
msgid "Finally, the :func:`SideImage` function returns, as a displayable, the current side image. This can be used as part of more advanced screen customization."
msgstr ""

