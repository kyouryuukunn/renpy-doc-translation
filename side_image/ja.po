# Japanese translation for renpy-doc
# Copyright (c) 2013 Rosetta Contributors and Canonical Ltd 2013
# This file is distributed under the same license as the renpy-doc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: renpy-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-15 15:18+0900\n"
"PO-Revision-Date: 2022-05-02 08:10+0900\n"
"Last-Translator: akakyouryuu <akakyouryuu@gmail.com>\n"
"Language-Team: Japanese <ja@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2014-06-21 06:27+0000\n"
"X-Generator: Poedit 3.0.1\n"

#: ../../source/side_image.rst:7
msgid "Side Images"
msgstr "サイドイメージ"

#: ../../source/side_image.rst:9
msgid ""
"Many visual novels include a picture of the character that is speaking as "
"part of their interface. Ren'Py calls this image a side image, and has "
"support for automatically selecting and displaying a side image as part of "
"the dialogue."
msgstr ""
"多くのヴィジュアルノベルはインターフェースの一部に会話しているキャラクターの"
"画像を含みます。 Ren'Py はこの画像をサイドイメージと呼び、台詞の一部としての自動的"
"なサイドイメージの選択と表示をサポートしています。"

#: ../../source/side_image.rst:14
msgid ""
"The side image support assumes that a :func:`Character` is declared with a "
"linked image tag::"
msgstr ""
"サイドイメージのサポートは :func:`Character` の関連付けされる画像タグ付きでの"
"宣言を前提としています。 ::"

#: ../../source/side_image.rst:19
msgid ""
"When a character with a linked image tag speaks, Ren'Py creates a pool of "
"image attributes. The linked image tag is added to this pool, as are the "
"current image attributes that are associated with that tag."
msgstr ""
"関連付けされた画像タグを持つキャラクターが話すとき、 Ren'Py は画像属性のプー"
"ルを生成します。関連づけられた画像タグは、そのタグに関連づけされた現在の画像"
"属性と共にこのプールに加えられます。"

#: ../../source/side_image.rst:23
msgid ""
"In addition to the tag, there must be at least one attribute in the pool. If "
"not, no side image is shown."
msgstr ""
"そのタグに加え、少なくとも一つの属性がプールになければいけません。そうでなけ"
"ればサイドイメージは表示されません。"

#: ../../source/side_image.rst:26
msgid ""
"To determine the side image associated with a tag, Ren'Py tries to find an "
"image with the tag \"side\", and the largest number of attributes from the "
"pool. If no image can be found, or more than one image has the same number "
"of attributes, a :class:`Null` is shown instead."
msgstr ""
"あるタグに関連付けられたサイドイメージを決定するために、 Ren'Py は「 side 」"
"タグやプール内の属性をより多く持つ画像を探します。画像が見つからないか、ひ"
"とつ以上の画像が同数の属性を持つなら :class:`Null` が代わりに表示されます。"

#: ../../source/side_image.rst:31
msgid "For example, say we have the following script::"
msgstr "例えば以下のスクリプトについて述べます ::"

#: ../../source/side_image.rst:49
msgid ""
"At point A, the character ``e`` is speaking, which is linked to the image "
"tag \"eileen\". The \"eileen happy\" image is showing, so the pool of "
"attributes is \"eileen\" and \"happy\". We look for an image with the \"side"
"\" tag, and as many of those attributes as possible – and we match \"side "
"eileen happy\", which is the side image Ren'Py will display."
msgstr ""
"ポイント A では画像タグ「 eileen 」に関連付けられたキャラクター ``e`` が話し"
"ています。画像「 eileen happy 」が表示されているので、属性のプールは"
"「 eileen 」と「 happy 」です。「 side 」タグと、可能な限り多くのそれらの属性"
"を持つ画像を探すと「 side eileen happy 」がマッチし、それが Ren'Py に表示され"
"るサイドイメージになります。"

#: ../../source/side_image.rst:55
msgid ""
"At point B, the \"eileen concerned\" image is showing. The pool of "
"attributes is now \"eileen\" and \"concerned\". The only matching image is "
"\"side eileen\", so that's what Ren'Py selects. If there was a \"side "
"concerned\" image, there would be ambiguity, and Ren'Py wouldn't display an "
"image."
msgstr ""
"ポイント B では「 eileen concerned 」が表示されています。属性のプールは今"
"「 eileen 」と「 concerned 」です。唯一マッチする画像は「 side eileen 」なの"
"で、 Ren'Py はそれを選択します。 画像「 side concerned 」があると、曖昧になる"
"ので、 Ren'Py は画像を表示できません。"

#: ../../source/side_image.rst:62
msgid "Invisible Characters"
msgstr "透明なキャラクター"

#: ../../source/side_image.rst:64
msgid ""
"Another use of the side image is to show an image of the player character, "
"when that character has dialogue. The way to do this is to link an image to "
"the character, and then use the say with attributes construct to select the "
"side image to show."
msgstr ""
"サイドイメージのもう一つの使い方は、プレイヤーであるキャラクターに台詞がある"
"ときの、そのキャラクター画像の表示です。これには画像タグとキャラクターを関連付"
"けし、表示するサイドイメージを選択するための属性つきで say ステートメントを使"
"用します。"

#: ../../source/side_image.rst:69 ../../source/inc/side:29
msgid "For example::"
msgstr "例 ::"

#: ../../source/side_image.rst:85
msgid "Config and Store Variables"
msgstr "config と store 変数"

#: ../../source/side_image.rst:87
msgid ""
"There are a number of attributes of side images that can be controlled using "
"config variables."
msgstr "設定変数を使って制御可能なサイドイメージの属性がいくつかあります。"

#: ../../source/side_image.rst:93
msgid ""
"If _side_image_tag is not None, it takes preference over config."
"side_image_tag."
msgstr ""
"_side_image_tag が None でなければ、 config.side_image_tag より優先されます。"

#: ../../source/side_image.rst:95
msgid ""
"If this is given, then the side image will track the given image tag, rather "
"than the image associated with currently speaking character. For example,"
msgstr ""
"これが与えられると現在話しているキャラクターに関連付けられた"
"画像タグではなく、指定されたタグにサイドイメージは従います。例えば"

#: ../../source/side_image.rst:103
msgid ""
"Will make the side image track the \"eileen\" image tag, which is associated "
"with the ``e`` character."
msgstr ""
"サイドイメージに ``e`` キャラクターに関連付けられた \"eileen\" 画像タグを所得さ"
"せます。"

#: ../../source/side_image.rst:108
msgid ""
"When set to true, the side image will only show if an image with that tag is "
"not already being shown on the screen."
msgstr ""
"True の時、そのタグの画像がスクリーンにすでに表示されていない"
"時だけサイドイメージが表示されます。"

#: ../../source/side_image.rst:114
msgid ""
"If _side_image_prefix_tag is not None, it takes preference over config."
"side_image_prefix_tag."
msgstr ""
"_side_image_prefix_tag が None でなければ、 config.side_image_prefix_tag より"
"優先されます。"

#: ../../source/side_image.rst:117
msgid "The prefix that is used when searching for a side image."
msgstr "サイドイメージを検索するときに使用される接頭辞です。"

#: ../../source/side_image.rst:121
msgid ""
"The Null displayable to use when not displaying a side image. This can be "
"changed, but only to other Null objects. One reason for doing so would be to "
"set the side of the Null (eg. ``Null(width=200, height=150)``) to prevent "
"dissolves from being cut off."
msgstr ""
"Null displayable はサイドイメージを表示しないときに使用します。これは他の "
"Null オブジェクトにのみ変更してください。この理由は Null (eg. "
"``Null(width=200, height=150)`` ) のサイドイメージを配置して、ディゾルブが遮"
"られるのを防ぐためです。"

#: ../../source/side_image.rst:128
msgid ""
"If not None, a transform that is used when the new side image shares the "
"same image tag as the previous side image."
msgstr ""
"None または新しいサイドイメージが以前のサイドイメージと同じ画像タグの時に使用"
"される transform です。"

#: ../../source/side_image.rst:133
msgid ""
"If not None, a transform that is used when the new side image does not share "
"the name image tag (or one of the new or old side images does not exist)."
msgstr ""
"None または新しいサイドイメージが以前のサイドイメージとは別の画像タグの時 (ま"
"たは新しいサイドイメージや以前のサイドイメージがないとき) に使用される "
"transform です。"

#: ../../source/side_image.rst:139
msgid "Transforms and Transitions"
msgstr "transform とトランジション"

#: ../../source/side_image.rst:141
msgid ""
"The :var:`config.side_image_same_transform` and :var:`config."
"side_image_change_transform` transforms are called with two arguments – old "
"and new side image displayables – each time the side image is displayed. "
"These can be used to move around side images, or use a transition to go "
"between side images."
msgstr ""
":var:`config.side_image_same_transform` と :var:`config."
"side_image_change_transform` transform はサイドイメージが表示される度に 2 つ"
"の引数、新旧のサイドイメージ displayable で呼び出されます。これらを使用してサ"
"イドイメージを動かしたりトランジション出来ます。"

#: ../../source/side_image.rst:147
msgid ""
"This causes the side image to slide in and out when the character associated "
"with that image changes::"
msgstr ""
"画像に関連付けられたキャラクターが変わるとき、次のコードはサイドイメージを"
"スライドイン、アウトします。 ::"

#: ../../source/side_image.rst:164
msgid ""
"This is used to dissolve between old and new side images when the character "
"remains the same. (For example, when the character changes emotion.) For "
"the :class:`Dissolve` to work correctly, both side images must be the same "
"size. ::"
msgstr ""
"キャラクターが同じとき ( 例えば表情が変わるとき ) 、次のコードを使用して新旧"
"のサイドイメージをディゾルブします。 :class:`Dissolve` が正確に動作するために"
"は両方のサイドイメージが同じ大きさでなくてはいけません。 ::"

#: ../../source/side_image.rst:176
msgid ""
"When the :func:`SideImage` is scaled down, it might make sense to enable "
"mipmapping in the :func:`Dissolve`::"
msgstr ""
":func:`SideImage` がスケールダウンされると、 :func:`Dissolve` で mipmap が有"
"効になります。 ::"

#: ../../source/side_image.rst:186
msgid "Functions"
msgstr "Functions"

#: ../../source/inc/side:5
msgid "This attempts to find an image to show as the side image."
msgstr "サイドイメージとして表示する画像を見つけようと試みます。"

#: ../../source/inc/side:7
msgid ""
"It begins by determining a set of image attributes. If `image_tag` is given, "
"it gets the image attributes from the tag. Otherwise, it gets them from the "
"currently showing character. If no attributes are available for the tag, "
"this returns None."
msgstr ""
"画像属性のセットを決定するところからはじめます。 `image_tag` が指定されればその"
"タグから画像属性を所得します。そうでなければそれらを現在表示しているキャラク"
"ターから所得します。そのタグで利用できる属性が無ければ、 None を返します。"

#: ../../source/inc/side:12
msgid ""
"It then looks up an image with the tag `prefix_tag`, and the image tage "
"(either from `image_tag` or the currently showing character) and the set of "
"image attributes as attributes. If such an image exists, it's returned."
msgstr ""
"次に `prefix_tag` タグと (`image_tag` または現在表示中のキャラクターのどちらかの) "
"画像タグ、属性としてその画像属性のセットを持つ画像を探します。そのような画像があれ"
"ば、それを返します。"

#: ../../source/inc/side:16
msgid ""
"If not_showing is True, this only returns a side image if the image the "
"attributes are taken from is not on the screen. If Nome, the value is taken "
"from :var:`config.side_image_only_not_showing`."
msgstr ""
"not_showing が True なら、その属性を所得できる画像が画面にないときのみサイド"
"イメージを返します。None なら値は :var:`config.side_image_only_not_showing` "
"から所得されます。"

#: ../../source/inc/side:20
msgid ""
"If `layer` is None, uses the default layer for the currently showing tag."
msgstr ""
"`layer` が None なら、現在タグを表示しているレイヤーとしてデフォルトレイヤー"
"を使用します。"

#: ../../source/inc/side:25
msgid ""
"This sets the attributes associated with an image tag when that image tag is "
"not showing. The main use of this would be to directly set the attributes "
"used by a side image."
msgstr ""
"ある画像タグが表示されていないときに、その画像タグに関連づけられる属性を設定します。主"
"な用途は、サイドイメージで使用する属性の直接設定でしょう。"

#: ../../source/inc/side:34
msgid "and::"
msgstr "は ::"

#: ../../source/inc/side:38
msgid "are equivalent."
msgstr "に等しいです。"

#~ msgid "Variations"
#~ msgstr "変数"

#~ msgid "Leaving Room / Customization"
#~ msgstr "Leaving Room / Customization"

#~ msgid ""
#~ "By default, the entire width of the screen is taken up by the text. If "
#~ "one tries to display a side image, it will be displayed on top of the "
#~ "text. To fix this, one should include margin or padding on the "
#~ "appropriate side of the text window::"
#~ msgstr ""
#~ "デフォルトではスクリーンのすべての幅はテキストに専有されます。サイドイメー"
#~ "ジを表示しようとすると、テキストの上部に表示されるでしょう。これを修正する"
#~ "ためには、以下の様なコードを使って、 margin, padding をテキストウィンドウ"
#~ "の適切なサイドに含めるべきです。 ::"

#~ msgid ""
#~ "The position of the side image can be changed by customizing the ``say`` "
#~ "or ``nvl`` screens. Both include the line::"
#~ msgstr ""
#~ "サイドイメージの場所は ``say`` または ``nvl`` スクリーンをカスタマイズして"
#~ "変更できます。ともに次の行を含んでいます。"

#~ msgid ""
#~ "By changing the :propref:`xalign` and :propref:`yalign` properties, you "
#~ "can control the positioning of the side image on the screen."
#~ msgstr ""
#~ ":propref:`xalign` と :propref:`yalign` プロパティーを変更すれば、スクリー"
#~ "ン上のサイドイメージのある位置を制御できます。"

#~ msgid ""
#~ "Finally, the :func:`SideImage` function returns, as a displayable, the "
#~ "current side image. This can be used as part of more advanced screen "
#~ "customization."
#~ msgstr ""
#~ "最終的には :func:`SideImage` 関数は displayable として現在のサイドイメージ"
#~ "を返します。このことはより高度なカスタマイズの一部で使用されます。"

#~ msgid ""
#~ "It then looks up an image with the tag `prefix_tag` and those attributes, "
#~ "and returns it if it exists."
#~ msgstr ""
#~ "次に `prefix_tag` タグとそれらの属性をもつ画像を探し、あれば返します。"
