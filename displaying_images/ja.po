# Japanese translation for renpy-doc
# Copyright (c) 2013 Rosetta Contributors and Canonical Ltd 2013
# This file is distributed under the same license as the renpy-doc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: renpy-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-01 16:00+0900\n"
"PO-Revision-Date: 2025-03-01 16:29+0900\n"
"Last-Translator: kyouryuukunn <akakyouryuu@gmail.com>\n"
"Language-Team: Japanese <ja@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2015-03-28 05:30+0000\n"
"X-Generator: Poedit 2.2.4\n"

#: ../../source/displaying_images.rst:5
msgid "Displaying Images"
msgstr "画像の表示"

#: ../../source/displaying_images.rst:7
msgid ""
"The defining aspect of a visual novel, lending its name to the form, are the "
"visuals. Ren'Py contains four statements that control the display of images, "
"and a model that determines the order in which the images are displayed. "
"This makes it convenient to display images in a manner that is suitable for "
"use in visual novels and other storytelling games."
msgstr ""
"ビジュアルノベルを定義する特徴は、その名が表すとおり、ビジュアルです。Ren'Py "
"には、画像を制御する 4 つのステートメントがあります。また、画像が表示される順"
"番を定義するモデルをもっています。これにより、ビジュアルノベルに適した方法で"
"画像を表示できます。"

#: ../../source/displaying_images.rst:13
msgid "The four statements that work with images are:"
msgstr "画像に使える 4 つのステートメントは::"

#: ../../source/displaying_images.rst:15
msgid "``image`` - defines a new image."
msgstr "``image`` - 新しい画像を定義します。"

#: ../../source/displaying_images.rst:16
msgid "``show`` - shows an image on a layer."
msgstr "``show`` - レイヤーに画像を表示します。"

#: ../../source/displaying_images.rst:17
msgid ""
"``scene`` - clears a layer, and optionally shows an image on that layer."
msgstr "``scene`` - レイヤーをクリアし、必要ならレイヤーに画像を表示します。"

#: ../../source/displaying_images.rst:18
msgid "``hide`` - removes an image from a layer."
msgstr "``hide`` - レイヤーからイメージを取り除きます。"

#: ../../source/displaying_images.rst:20
msgid ""
"As abrupt changes of image can be disconcerting to the user, Ren'Py has the "
"``with`` statement, which allows effects to be applied when the scene is "
"changed."
msgstr ""
"画像を急に変えるとユーザーはびっくりするので、Ren'Py は ``with`` ステートメン"
"トを用意しています。これにより、場面の変わり目に効果が適用されます。"

#: ../../source/displaying_images.rst:24
msgid ""
"Most (if not all) of the statements listed in this page are checked by :ref:"
"`lint`, which is not the case for their python equivalents."
msgstr ""
"このページにリストされた(すべてではないですが)殆どのステートメントは :ref:"
"`lint` でチェックできますが、これは python での相当する物には当てはまりませ"
"ん。"

#: ../../source/displaying_images.rst:29
msgid "Concepts"
msgstr "概念"

#: ../../source/displaying_images.rst:34
msgid "Image"
msgstr "画像"

#: ../../source/displaying_images.rst:36
msgid ""
"An image is something that can be show to the screen using the show "
"statement. An image consists of a name and a displayable. When the image is "
"shown on a layer, the displayable associated with it is displayed on that "
"layer."
msgstr ""
"画像は、show ステートメントを使って画面に表示されるものです。画像は名前と "
"displayable でできています。画像がレイヤーに表示されるとき、その画像に対応す"
"る displayable がレイヤーに表示されます。"

#: ../../source/displaying_images.rst:41
msgid ""
"An :dfn:`image name` consists of one or more names, separated by spaces. The "
"first component of the image name is called the :dfn:`image tag`. The second "
"and later components of the name are the :dfn:`image attributes`."
msgstr ""
":dfn:`画像名` は、スペースで分けられた1つ以上の名前でできています。画像名を構"
"成する最初の部分を :dfn:`画像タグ` と言います。名前のそれ以降の部分は、 :dfn:"
"`画像属性` です。"

#: ../../source/displaying_images.rst:46
msgid ""
"For example, take the image name ``mary beach night happy``. The image tag "
"is ``mary``, while the image attributes are ``beach``, ``night``, and "
"``happy``."
msgstr ""
"例えば、 ``mary beach night happy`` という画像名があるとします。この画像タグ"
"は ``mary`` で、画像属性は ``beach``, ``night``, ``happy`` です。"

#: ../../source/displaying_images.rst:50
msgid ""
"A displayable is something that can be shown on the screen. The most common "
"thing to show is a static image, which can be specified by giving the "
"filename of the image, as a string. In the example above, we might use :file:"
"`mary_beach_night_happy.png` as the filename. However, an image may refer "
"to :doc:`any displayable Ren'Py supports <displayables>`, not just static "
"images. Thus, the same statements that are used to display images can also "
"be used for animations, solid colors, and the other types of displayables."
msgstr ""
"displayable とは、スクリーンに表示できるものです。主に静止画像を表示するため"
"に使われます。これを指定するには、画像のファイル名を文字列として与えます。上"
"述の例では、ファイル名として例えば :file:`mary_beach_night_happy.png` を使い"
"ます。しかし、画像は静止画像に限らず、 :doc:`Ren'Py がサポートする "
"displayable 全て <displayables>` を参照できます。ですから、画像を表示するのと"
"同じステートメントが、アニメーション、全面色、その他の displayable にも使えま"
"す。"

#: ../../source/displaying_images.rst:60
msgid "Layer"
msgstr "レイヤー"

#: ../../source/displaying_images.rst:62
msgid ""
"A layer is a list of displayables that are shown on the screen. Ren'Py "
"supports multiple layers, including user-defined layers. The order of the "
"layers is fixed within a game (controlled by the :var:`config.layers` "
"variable), while the order of displayables within a layer is controlled by "
"the order in which the scene and show statements are called, and the "
"properties given to those statements."
msgstr ""
"レイヤーとは、画面に表示された displayable のリストです。Ren'Py は複数のレイ"
"ヤーをサポートしていて、ユーザー定義のレイヤーも使えます。レイヤーの順序は"
"ゲーム内で固定されています ( :var:`config.layers` 変数で制御されます)。また、"
"レイヤー内の displayable の順序は、scene ステートメントや show ステートメント"
"が呼び出された順序と、そのステートメントに与えられたプロパティーとで制御され"
"ます。"

#: ../../source/displaying_images.rst:69
msgid "The following layers are defined as part of Ren'Py:"
msgstr "Ren'Py 内部では、以下のレイヤーが定義されています:"

#: ../../source/displaying_images.rst:74
msgid "master"
msgstr "master"

#: ../../source/displaying_images.rst:72
msgid ""
"This is the default layer that is used by the scene, show, and hide "
"statements. It's generally used for backgrounds and character sprites."
msgstr ""
"これは、scene ステートメント、show ステートメント、hide ステートメントで使わ"
"れるデフォルトのレイヤーです。主に、背景やキャラクタースプライトに使われま"
"す。"

#: ../../source/displaying_images.rst:78
msgid "transient"
msgstr "transient"

#: ../../source/displaying_images.rst:77
msgid ""
"The default layer used by ui functions. This layer is cleared at the end of "
"each interaction."
msgstr ""
"ui 関数で使われるデフォルトのレイヤーです。このレイヤーは、インタラクションが"
"終わる度に消去されます。"

#: ../../source/displaying_images.rst:81
msgid "screens"
msgstr "screens"

#: ../../source/displaying_images.rst:81
msgid "This layer is used by the screen system."
msgstr "このレイヤーは、スクリーン機能によって使われます。"

#: ../../source/displaying_images.rst:86
msgid "overlay"
msgstr "overlay"

#: ../../source/displaying_images.rst:84
msgid ""
"The default layer used when a ui function is called from within an overlay "
"function. This layer is cleared when an interaction is restarted."
msgstr ""
"ui 関数が overlay 関数の内部から呼び出されたときに使われるデフォルトのレイ"
"ヤーです。このレイヤーは、インタラクションが再開する度に消去されます。"

#: ../../source/displaying_images.rst:88
msgid ""
"Additional layers can be defined by calling :func:`renpy.add_layer`, and "
"using the various layer-related :doc:`configuration variables <config>`. "
"Using the :ref:`camera statement <camera>`, one or more transforms can be "
"applied to a layer."
msgstr ""
"追加のレイヤーは :func:`renpy.add_layer` の呼び出しと様々なレイヤー関連の :"
"doc:`設定変数 <config>` を使用して定義できます。 :ref:`camera ステートメント "
"<camera>` の使用により、1つ以上の transforms をレイヤーに適用できます。"

#: ../../source/displaying_images.rst:96
msgid "Defining Images"
msgstr "画像の定義"

#: ../../source/displaying_images.rst:98
msgid ""
"There are two ways to define images. You can either place an image file in "
"the image directory, or an image can be defined using the image statement. "
"The former is simple, as it involves placing properly named files in a "
"directory, while the latter a allows more control over how the image is "
"defined, and allows images that are not image files."
msgstr ""
"画像定義には 2 つの方法があります。画像ディレクトリーに画像ファイルを置く"
"か、 image ステートメントで画像を定義するかです。前者は単純で、ディレクトリー"
"内に適切な名前のファイルを配置するだけですが、後者は画像定義時に詳細な制御が"
"出来、画像ファイル以外も画像として扱えます。"

#: ../../source/displaying_images.rst:104
msgid ""
"Images defined using the image statement take precedence over those defined "
"by the image directory."
msgstr ""
"image ステートメントで定義された画像は画像ディレクトリーで定義されたものより"
"優先されます。"

#: ../../source/displaying_images.rst:111
msgid "Images Directory"
msgstr "画像 ディレクトリー"

#: ../../source/displaying_images.rst:113
msgid ""
"The image directory is named \"images\", and is placed under the game "
"directory. When a file with a .jpg, .jpeg, .png, or .webp extension is "
"placed underneath this directory, the extension is stripped, the rest of the "
"filename is forced to lowercase, and the resulting filename is used as the "
"image name if an image with that name has not been previously defined."
msgstr ""
"画像ディレクトリーは「 images 」という名前でゲームディレクトリーに配置されま"
"す。このディレクトリー以下に .jpeg や .jpeg, .png, webp 拡張子を持つファイル"
"を配置すると、その拡張子を除外した残りのファイル名を強制的に小文字にし、その"
"結果のファイル名が既に画像名として定義されていなければ画像名として使用しま"
"す。"

#: ../../source/displaying_images.rst:119
msgid ""
"This process takes place in all directories underneath the image directory. "
"For example, all of these files will define the image ``eileen happy``::"
msgstr ""
"この処理は画像ディレクトリー下のすべてのディレクトリーで起こります。例えば以"
"下のすべてのファイルは画像 ``eileen happy`` を定義します。 ::"

#: ../../source/displaying_images.rst:126
msgid ""
"When an image filename is given, and the image is not found, the images "
"directory is searched."
msgstr ""
"画像ファイル名が指定されてその画像が見つからないと、 images ディレクトリーが"
"検索されます。"

#: ../../source/displaying_images.rst:132
msgid "Oversampling"
msgstr "オーバーサンプリング"

#: ../../source/displaying_images.rst:134
msgid ""
"By default, the pixel size of an image defines the size it will take up when "
"displayed. For example, if an image is 1920x1080 pixels, and the game is "
"configured, using :func:`gui.init`, to run at 1920x1080, the image will fill "
"the entire screen."
msgstr ""
"デフォルトでは表示されたときのサイズは画像のピクセルでのサイズが定義します。"
"例えば、ある画像が 1920x1080 ピクセルであり、ゲームが :func:`gui.init` を使用"
"して、 1920x1080 で実行されるよう設定されていれば、その画像は画面全体を満たし"
"ます。"

#: ../../source/displaying_images.rst:139
msgid ""
"When oversampling is enabled, the size that the image is displayed at is "
"smaller than the image size would imply. For example, if an image is "
"3480x2160, and has an oversamply of 2, then each axis will be halved, and "
"the image would fill the same 1920x1080 window."
msgstr ""
"オーバーサンプリングが有効なときは、その画像が表示されるサイズは画像サイズの"
"ものより小さくなります。例えば、ある画像が 3480x2160 であり、オーバーサンプリ"
"ングが 2 ならば、各軸は半減し、画像は同じく 1920x1080 のウィンドウを満たしま"
"す。"

#: ../../source/displaying_images.rst:144
msgid ""
"This is useful when the image might be zoomed in on, and the extra detail is "
"required. Oversampling is also useful in conjunction with :var:`config."
"physical_width` and :var:`config.physical_height` to allow a game to be "
"remade with higher resolution graphics."
msgstr ""
"これは、画像がズームインされる可能性があり、さらなるディテールが必要な場合に"
"便利です。オーバーサンプリングは :var:`config.physical_width` や :var:"
"`config.physical_height` と組み合わせて、ゲームを高解像度グラフィックでリメイ"
"クする場合にも有効です。"

#: ../../source/displaying_images.rst:149
msgid ""
"Oversampling is automatically enabled if the image ends with an '@' followed "
"by a number, before the extension. For example, :file:`eileen happy@2.png` "
"is 2x oversampled, and :file:`eileen happy@3.png` will be 3x oversampled. "
"Oversampling can also be enabled by giving the `oversample` keyword argument "
"to :func:`Image`."
msgstr ""
"画像の拡張子の前に '@' と数字が続くと、自動的にオーバーサンプリングが有効にな"
"ります。例えば、:file:`eileen happy@2.png` は2倍のオーバーサンプリングで、:"
"file:`eileen happy@3x.png` は3倍のオーバーサンプリングになります。オーバーサ"
"ンプリングは :func:`Image` に `oversample` キーワード引数を与えても有効にでき"
"ます。"

#: ../../source/displaying_images.rst:154
msgid ""
"A directory can also specify how much to oversample images inside it. For "
"example, :file:`images/@2/eileen happy.png` will be oversampled 2x."
msgstr ""
"あるディレクトリーに対して、その中の画像のオーバーサンプリング量も指定できま"
"す。例えば、 :file:`images/@2/eileen happy.png` は 2 倍にオーバーサンプリング"
"されます。"

#: ../../source/displaying_images.rst:160
msgid "Image Statement"
msgstr "image ステートメント"

#: ../../source/displaying_images.rst:162
msgid ""
"The ``image`` statement is used to define an image. An image statement "
"consists of a single logical line beginning with the keyword ``image``, "
"followed by an image name, an equals sign ``=``, and a displayable. For "
"example::"
msgstr ""
"``image`` ステートメントを使用して画像を定義します。image ステートメントは、 "
"``image`` で始まり、画像名、等号 (``=``)、displayable を続けた1行の論理行で出"
"来ています。例 ::"

#: ../../source/displaying_images.rst:176
msgid ""
"When an image file is not directly in the game directory, you'll need to "
"give the directories underneath it. For example, if the image is at :file:"
"`game/eileen/happy.png`, then you can write::"
msgstr ""
"画像が直接 game ディレクトリーにないとき、ディレクトリーを指定する必要があり"
"ます。例えば、画像が :file:`game/eileen/happy.png` なら、以下のように書けま"
"す。 ::"

#: ../../source/displaying_images.rst:182
msgid ""
"The image statement is run at init time, before the menus are shown or the "
"start label runs. When not contained inside an ``init`` block, image "
"statements are run as if they were placed inside an ``init`` block of "
"priority 500."
msgstr ""
"image ステートメントは、ゲームメニューが表示される、または start ラベルが実行"
"される前の初期化時に実行されます。 image ステートメントは ``init``  ブロック"
"に含まれていないとき、優先度 500の ``init`` ブロックの中に含まれているかのよ"
"うに、初期化時に実行されます。"

#: ../../source/displaying_images.rst:187
msgid ""
"See also the :ref:`ATL variant of the image statement. <atl-image-statement>`"
msgstr ""
":ref:`image ステートメントの ATL ブロック <atl-image-statement>` もご覧くださ"
"い。"

#: ../../source/displaying_images.rst:193
msgid "Show Statement"
msgstr "show ステートメント"

#: ../../source/displaying_images.rst:195
msgid ""
"The ``show`` statement is used to display an image on a layer. A show "
"statement consists of a single logical line beginning with the keyword "
"``show``, followed by an image name, followed by zero or more properties."
msgstr ""
"``show`` ステートメントを使用して画像をレイヤーに表示します。 show ステートメ"
"ントは ``show`` で始まり、画像名、ゼロ個以上のプロパティーが続く1行の論理行で"
"できています。"

#: ../../source/displaying_images.rst:200
msgid ""
"If the show statement is given the exact name of an existing image, that "
"image is the one that is shown. Otherwise, Ren'Py will attempt to find a "
"unique image that:"
msgstr ""
"show ステートメントに与えられたものが既存の画像の正確な名前なら、その画像が表"
"示されます。そうでなければ、Ren'Py は以下のような画像を一つ探します:"

#: ../../source/displaying_images.rst:204
msgid "Has the same tag as the one specified in the show statement."
msgstr "show ステートメントで指定されたものと同じタグを持つ 画像"

#: ../../source/displaying_images.rst:205
msgid "Has all of the attributes given in the show statement."
msgstr "show ステートメントで与えられた全ての属性を持つ画像"

#: ../../source/displaying_images.rst:206
msgid ""
"If an image with the same tag is already showing, shares the largest number "
"of attributes with that image."
msgstr ""
"同じタグの画像がすでに表示されているなら、その画像と共通の属性を最も多く持つ"
"画像"

#: ../../source/displaying_images.rst:209
msgid "If a unique image cannot be found, an exception occurs."
msgstr "そのような画像が一つに決まらなければ、例外が発生します。"

#: ../../source/displaying_images.rst:211
msgid ""
"If an image with the same image tag is already showing on the layer, the new "
"image replaces it. Otherwise, the image is placed above all other images in "
"the layer. (That is, closest to the user.) This order may be modified by the "
"``zorder`` and ``behind`` properties."
msgstr ""
"レイヤー上に同じタグの画像がすでに表示されているなら、それを新しい画像が置き"
"換えます。そうでなければ、その画像がレイヤーの一番上に置かれます(つまり、ユー"
"ザーに最も近いところです)。 この順序は、``zorder`` および ``behind`` プロパ"
"ティーで変更できます。"

#: ../../source/displaying_images.rst:216
msgid ""
"The show statement does not cause an interaction to occur. For the image to "
"actually be displayed to the user, a statement that causes an interaction "
"(like the say, menu, pause, and with statements) must be run."
msgstr ""
"show ステートメントは、インタラクションを起こしません。イメージを実際にユー"
"ザーに表示するためには、インタラクションを起こすステートメント(say, menu, "
"pause, および with ステートメントなど) を実行しなければなりません。"

#: ../../source/displaying_images.rst:221
msgid "The show statement takes the following properties:"
msgstr "show ステートメントは、以下のプロパティーを受け取ります:"

#: ../../source/displaying_images.rst:226
msgid "``as``"
msgstr "``as``"

#: ../../source/displaying_images.rst:224
msgid ""
"The ``as`` property takes a name. This name is used in place of the image "
"tag when the image is shown. This allows the same image to be on the screen "
"twice."
msgstr ""
"``as`` プロパティーは名前を受け取ります。画像が表示されるとき、画像タグの代わ"
"りにこの名前が使われます。これで、同じ画像をスクリーンの2箇所に表示できます。"

#: ../../source/displaying_images.rst:242
msgid "``at``"
msgstr "``at``"

#: ../../source/displaying_images.rst:229
msgid ""
"The ``at`` property takes one or more comma-separated simple expressions. "
"Each expression must evaluate to a transform. The transforms are applied to "
"the image in left-to-right order."
msgstr ""
"``at`` プロパティーはコンマで区切られた一つ以上の単純式を受け取ります。それぞ"
"れの式の評価結果は transform でなければなりません。この画像に、その "
"transform が左から順に適用されます。"

#: ../../source/displaying_images.rst:234
msgid ""
"If no at clause is given, Ren'Py will retain any existing transform that has "
"been applied to the image, if they were created with ATL or with :class:"
"`Transform`. If no transform is specified, the image will be displayed using "
"the :var:`default` transform."
msgstr ""
"at 節が与えられていなければ、Ren'Py は画像に適用されている ATL または :class:"
"`Transform` で作成された transform を全て保持します。 transform が存在しなけ"
"れば、画像は :var:`default` transform を使って表示されます。"

#: ../../source/displaying_images.rst:240
msgid ""
"See the section on :ref:`replacing transforms <replacing-transforms>` for "
"information about how replacing the transforms associated with a tag can "
"change the transform properties."
msgstr ""
"あるタグと関連付けられた transform を置き換えてその transform プロパティーを"
"変更する方法は :ref:`transformの置き換え <replacing-transforms>` の項目を参照"
"してください。"

#: ../../source/displaying_images.rst:247
msgid "``behind``"
msgstr "``behind``"

#: ../../source/displaying_images.rst:245
msgid ""
"Takes a comma-separated list of one or more names. Each name is taken as an "
"image tag. The image is shown behind all images with the given tags that are "
"currently being shown."
msgstr ""
"カンマで区切られた一つ以上の名前を受け取ります。それぞれの名前は画像タグとし"
"て受け取られます。画像は、現在表示されている画像の中で、与えられたタグを持つ"
"もの全ての後に表示されます。"

#: ../../source/displaying_images.rst:250
#: ../../source/displaying_images.rst:370
msgid "``onlayer``"
msgstr "``onlayer``"

#: ../../source/displaying_images.rst:250
msgid "Takes a name. Shows the image on the named layer."
msgstr "名前を受け取ります。指名されたレイヤーに画像を表示します。"

#: ../../source/displaying_images.rst:259
msgid "``zorder``"
msgstr "``zorder``"

#: ../../source/displaying_images.rst:253
msgid ""
"Takes an integer. The integer specifies the relative ordering of images "
"within a layer, with larger numbers being closer to the user. This isn't "
"generally used by Ren'Py games, but can be useful when porting visual novels "
"from other engines. This can also be useful for displaying an image that "
"will be above any zorder-less image displayed afterwards, without the burden "
"of placing it on another layer."
msgstr ""
"整数を受け取ります。これは画像のレイヤー上における相対的な順序を指定します。"
"この数字が大きいほどユーザーに近くなります。これは通常 Ren'Py ゲームのコード"
"では使いませんが、他のエンジンからコードを移植するときに便利です。また、後に"
"表示される他のより小さな zorder の画像より上に表示されるように画像を表示する"
"のにも、他のレイヤーに表示する手間がないので便利です。"

#: ../../source/displaying_images.rst:261
msgid "Assuming we have the following images defined::"
msgstr "以下の画像を定義したとします::"

#: ../../source/displaying_images.rst:267
msgid "Some example show statements are::"
msgstr "show ステートメントの例です。 ::"

#: ../../source/displaying_images.rst:290
msgid "Attributes management"
msgstr "属性管理"

#: ../../source/displaying_images.rst:292
msgid "As shown above, attributes can be set, added and replaced."
msgstr "上述のようにして属性は設定、追加、置き換えできます。"

#: ../../source/displaying_images.rst:294
msgid "They can also be removed using the minus sign::"
msgstr "マイナス記号を使用しても除去できます。 ::"

#: ../../source/displaying_images.rst:308
msgid "Show expression"
msgstr "Show expression"

#: ../../source/displaying_images.rst:310
msgid ""
"A variant of the show statement replaces the image name with the keyword "
"``expression``, followed by a simple expression. The expression must "
"evaluate to a displayable, and the displayable is shown on the layer. To "
"hide the displayable, a tag must be given with the as statement."
msgstr ""
"show ステートメントの変種として、画像名の代わりに予約語 ``expression`` を使"
"い、その後に単純式を続けるものがあります。この式の評価は、displayable でなけ"
"ればなりません。その displayable がレイヤーに表示されます。この displayable "
"を hide するためには、このステートメントでタグを与えておかなければなりませ"
"ん。"

#: ../../source/displaying_images.rst:316
#: ../../source/displaying_images.rst:372 ../../source/inc/image_func:238
msgid "For example::"
msgstr "例 ::"

#: ../../source/displaying_images.rst:321
msgid "Show Layer"
msgstr "Show Layer"

#: ../../source/displaying_images.rst:323
msgid ""
"The ``show layer`` statement is discussed alongside the :ref:`camera "
"statement <camera>`, below."
msgstr ""
"``show layer`` ステートメントについては後述の :ref:`camera ステートメント "
"<camera>` と共に記述されています。"

#: ../../source/displaying_images.rst:329
msgid "Scene Statement"
msgstr "scene ステートメント"

#: ../../source/displaying_images.rst:331
msgid ""
"The ``scene`` statement removes all displayables from a layer, and then "
"shows an image on that layer. It consists of the keyword ``scene``, followed "
"by an image name, followed by zero or more properties. The image is shown in "
"the same way as in the show statement, and the scene statement takes the "
"same properties as the show statement."
msgstr ""
"``scene`` ステートメントはレイヤーから全ての displayable を削除し、その後、そ"
"のレイヤーに画像を表示します。このステートメントは、予約語 ``scene`` 、画像"
"名、ゼロ個以上のプロパティーの順でできています。画像は、show ステートメントと"
"同じように表示されます。また、scene ステートメントは show ステートメントと同"
"じプロパティーを受け取ります。"

#: ../../source/displaying_images.rst:337
msgid ""
"The scene statement is often used to show an image on the background layer. "
"For example::"
msgstr ""
"scene ステートメントは、主に背景レイヤーに画像を表示するのに使います。例 :"

#: ../../source/displaying_images.rst:342
msgid ""
"**Scene Expression.** Like the show statement, the scene statement can take "
"expressions instead of image names."
msgstr ""
"scene expression show ステートメントと同様、scene ステートメントも画像名の代"
"わりに式を受け取れます。"

#: ../../source/displaying_images.rst:346
msgid ""
"**Clearing a layer.** When the image name is omitted entirely, the scene "
"statement clears all displayables from a layer without showing another "
"displayable."
msgstr ""
"**レイヤーの消去** 画像名が全く与えられないとき、scene ステートメントはレイ"
"ヤーから全ての displayable を消去し、代わりの画像は表示しません。"

#: ../../source/displaying_images.rst:354
msgid "Hide Statement"
msgstr "hide ステートメント"

#: ../../source/displaying_images.rst:356
msgid ""
"The ``hide`` statement removes an image from a layer. It consists of the "
"keyword ``hide``, followed by an image name, followed by an optional "
"property. The hide statement takes the image tag from the image name, and "
"then hides any image on the layer with that tag."
msgstr ""
"``hide`` ステートメントは、レイヤーから画像を取り除きます。このステートメント"
"は、予約語 ``hide``、画像名、ゼロ個以上のプロパティーの順でできています。"
"hide ステートメントは画像名から画像タグを受け取り、そのタグを持つ画像がレイ"
"ヤーにあれば、その画像を非表示します。"

#: ../../source/displaying_images.rst:361
msgid ""
"Hide statements are rarely necessary. If a sprite represents a character, "
"then a hide statement is only necessary when the character leaves the scene. "
"When the character changes her emotion, it is preferable to use the show "
"statement instead, as the show statement will automatically replace an image "
"with the same tag."
msgstr ""
"hide ステートメントが必要になることはあまりありません。あるスプライトがある"
"キャラクターを表しているなら、hide ステートメントが必要なのはそのキャラクター"
"がシーンから退場する時だけです。キャラクターが表情を変えるときは、show ステー"
"トメントを使うのが望ましいです。show ステートメントは、同じタグの画像を自動的"
"に置き換えてくれます。"

#: ../../source/displaying_images.rst:367
msgid "The hide statement takes the following property:"
msgstr "hide ステートメントは、以下のプロパティーを受け取ります:"

#: ../../source/displaying_images.rst:370
msgid "Takes a name. Hides the image from the named layer."
msgstr "名前を受け取ります。指名されたレイヤーから画像を隠します。"

#: ../../source/displaying_images.rst:378
msgid "You should never write::"
msgstr "こうは書かずに::"

#: ../../source/displaying_images.rst:383
msgid "Instead, just write::"
msgstr "こう書いてください::"

#: ../../source/displaying_images.rst:391
msgid "With Statement"
msgstr "with ステートメント"

#: ../../source/displaying_images.rst:393
msgid ""
"The ``with`` statement is used to apply a transition effect when the scene "
"is changed, making showing and hiding images less abrupt. The with statement "
"consists of the keyword ``with``, followed by a simple expression that "
"evaluates either to a transition object or the special value ``None``."
msgstr ""
"``with`` ステートメントを使用して画面が変わるときにトランジション効果を適用"
"し、画像の表示や非表示を緩やかにします。with ステートメントは予約語 ``with`` "
"と、それに続く評価がトランジションか特殊値 ``None`` である単純式でできていま"
"す。"

#: ../../source/displaying_images.rst:399
msgid ""
"The transition effect is applied between the contents of the screen at the "
"end of the previous interaction (with transient screens and displayables "
"hidden), and the current contents of the scene, after the show and hide "
"statements have executed."
msgstr ""
"トランジション効果は、前のインタラクション (会話、選択肢、トランジション) が"
"終わった時点の画面の内容と、scene、show、hide ステートメントが実行された後の"
"内容の間で適用されます。"

#: ../../source/displaying_images.rst:404
msgid ""
"The with statement causes an interaction to occur. The duration of this "
"interaction is controlled by the user, and the user can cause it to "
"terminate early."
msgstr ""
"with ステートメントは、インタラクションを起こします。インタラクションの時間幅"
"はユーザーが制御できますし、ユーザーが早く終わらせることもできます。"

#: ../../source/displaying_images.rst:408
msgid ""
"For a full list of transitions that can be used, see the chapter on :doc:"
"`transitions <transitions>`."
msgstr ""
"利用できるトランジションの一覧は、 :doc:`トランジション <transitions>` の章を"
"ご覧ください。"

#: ../../source/displaying_images.rst:411
msgid "An example of the with statement is::"
msgstr "with ステートメントの例です。 ::"

#: ../../source/displaying_images.rst:420
msgid ""
"This causes two transitions to occur. The first with statement uses the "
"``dissolve`` transition to change the screen from what was previously shown "
"to the washington background. (The ``dissolve`` transition is, by default, "
"defined as a .5 second dissolve.)"
msgstr ""
"これは、2 つのトランジションを行います。最初の with ステートメントは、 "
"``dissolve`` トランジションを使い、スクリーンを washington 背景に変えます"
"(``dissolve`` トランジションはデフォルトで、0.5 秒のディゾルブと定義されてい"
"ます)。"

#: ../../source/displaying_images.rst:425
msgid ""
"The second transition occurs after the Eileen and Lucy images are shown. It "
"causes a dissolve from the scene consisting solely of the background to the "
"scene consisting of all three images – the result is that the two new images "
"appear to dissolve in simultaneously."
msgstr ""
"第二のトランジションは、Eileen と Lucy の画像が表示された後におこります。これ"
"により背景のみの場面から、3 つ全ての画像がある場面にディゾルブします。結果と"
"して 2 つの新しい画像がディゾルブして現れます。"

#: ../../source/displaying_images.rst:433
msgid "With None"
msgstr "with None"

#: ../../source/displaying_images.rst:435
msgid ""
"In the above example, there are two dissolves. But what if we wanted the "
"background to appear instantly, followed by a dissolve of the two "
"characters? Simply omitting the first with statement would cause all three "
"images to dissolve in – we need a way to say that the first should be show "
"instantly."
msgstr ""
"上述の例には 2 つのディゾルブがあります。しかし背景は即座に現れその後に 2 人"
"のキャラが現れるようにするにはどうするのでしょうか？最初の with ステートメン"
"トを単純になくしてしまうと、3 つの画像すべてがディゾルブして現れてしまいま"
"す。背景が即座に現れるようにしたいです。"

#: ../../source/displaying_images.rst:441
msgid ""
"The with statement changes behavior when given the special value ``None``. "
"The ``with None`` statement causes an abbreviated interaction to occur, "
"without changing what the user sees. When the next transition occurs, it "
"will start from the scene as it appears at the end of this abbreviated "
"interaction."
msgstr ""
"with ステートメントは、特殊な値 ``None`` を与えると、動作が変わります。 "
"``with None`` ステートメントは、ユーザーに表示するものを変えない、省略された"
"インタラクションを起こします。次のトランジションは、この省略されたインタラク"
"ションが終わった時点で表示されている場面から始まります。"

#: ../../source/displaying_images.rst:447
msgid "For example, in::"
msgstr "例 ::"

#: ../../source/displaying_images.rst:456
msgid ""
"Only a single transition occurs, from the washington background to the scene "
"consisting of all three images."
msgstr ""
"washington 背景から、3 つの画像が表示されている場面に、一度だけトランジション"
"が起こります。"

#: ../../source/displaying_images.rst:460
msgid "With Clause of Scene, Show, and Hide Statements"
msgstr "scene、show、hide ステートメントの with 節"

#: ../../source/displaying_images.rst:462
msgid ""
"The show, scene, and hide statements can take an optional ``with`` clause, "
"which allows a transition to be combined with showing or hiding an image. "
"This clause follows the statements at the end of the same logical line. It "
"begins with the keyword ``with``, followed by a simple expression."
msgstr ""
"show、scene、hide ステートメントは、任意で ``with`` 節を受け取れます。これ"
"は、画像の表示や非表示にトランジションを組み合せます。この節はステートメント"
"と同じ論理行の末尾につづきます。 予約後 ``with`` に始まり、単純式が続きます。"

#: ../../source/displaying_images.rst:468
msgid ""
"The with clause is equivalent to preceding the line with a ``with None`` "
"statement, and following it by a :ref:`with statement <with-statement>` "
"containing the text of the with clause. For example::"
msgstr ""
"with 節をつけるのは、 ``with None`` ステートメントを前に、:ref:`with ステート"
"メント <with-statement>` を後に置くことに相当します。 ::"

#: ../../source/displaying_images.rst:475
msgid "is equivalent to::"
msgstr "これは次と等しいです::"

#: ../../source/displaying_images.rst:485
msgid ""
"Note that even though this applies to the :ref:`show-screen-statement` and :"
"ref:`hide-screen-statement` statements too, :ref:`call-screen-statement` "
"differently."
msgstr ""
"これは :ref:`show-screen-statement` と :ref:`hide-screen-statement` ステート"
"メントにも当てはまりますが、 :ref:`call-screen-statement` では異なることに注"
"意してください。"

#: ../../source/displaying_images.rst:492
msgid "Camera and Show Layer Statements"
msgstr "Camera と show ステートメント"

#: ../../source/displaying_images.rst:494
msgid ""
"The ``camera`` statement allows one to apply a transform or ATL transform to "
"an entire layer (such as \"master\"), using syntax like::"
msgstr ""
"``camera`` ステートメントは transform や ATL transform を次のような構文によっ"
"てレイヤー全体 (例えば `master`) に適用できます::"

#: ../../source/displaying_images.rst:499
msgid "or::"
msgstr "または::"

#: ../../source/displaying_images.rst:504
msgid "To stop applying transforms to the layer, use::"
msgstr "transform の適用をやめるには、次のようにします::"

#: ../../source/displaying_images.rst:508
msgid ""
"The camera statement takes an optional layer name, between ``camera`` and "
"``at`` or ``:``. ::"
msgstr ""
"camera ステートメントは ``camera`` と ``at`` または ``:`` の間に任意のレイ"
"ヤー名を受け取ります。 ::"

#: ../../source/displaying_images.rst:513
msgid ""
"The ``show layer`` statement is an older version of ``camera``, with some "
"differences, that is still useful. ::"
msgstr ""
"``show layer`` ステートメントは ``camera`` の旧バージョンですが、いくつかの差"
"異があるためまだ有用です。 ::"

#: ../../source/displaying_images.rst:520
msgid "The differences are:"
msgstr "違いは次の通りです :"

#: ../../source/displaying_images.rst:522
msgid ""
"The transforms applied with ``show layer`` are cleared at the next ``scene`` "
"statement, while ``camera`` transforms last until explicitly cleared."
msgstr ""
"``show layer`` で適用された transform は次の ``scene`` ステートメントでクリア"
"される一方、 ``camera`` transforms は明白にクリアされるまで残ります。"

#: ../../source/displaying_images.rst:526
msgid ""
"``show layer`` requires a layer name, while ``camera`` defaults to the "
"master layer."
msgstr ""
"``show layer`` はレイヤー名を要求しますが、 ``camera`` はデフォルトで master "
"レイヤーを対象にします。"

#: ../../source/displaying_images.rst:531
msgid "Hide and Show Window"
msgstr "ウィンドウの表示・非表示"

#: ../../source/displaying_images.rst:533
msgid ""
"The ``window`` statement is used to control if a window is shown when a "
"character is not speaking (for example, during transitions and pauses). The "
"``window show`` statement causes the window to be shown, while the ``window "
"hide`` statement hides the window."
msgstr ""
"``window`` ステートメントを使用してキャラクターが話していないときにもウィンド"
"ウを表示するかを制御します ( 例 トランジション、ポーズ中 )。 ``window show`` "
"ステートメントはウィンドウを表示させ、``window hide`` ステートメントはウィン"
"ドウを非表示にします。"

#: ../../source/displaying_images.rst:538
msgid ""
"If the optional transition is given, it's used to show and hide the window. "
"If not given, it defaults to :var:`config.window_show_transition` and :var:"
"`config.window_hide_transition`. Giving None as the transition prevents it "
"from occurring."
msgstr ""
"任意のトランジションが指定されると、ウィンドウの表示、非表示時に使用されま"
"す。指定されないと、デフォルトでは :var:`config.window_show_transition` と :"
"var:`config.window_hide_transition` になります。 トランジションとして None を"
"指定するとその実行を防ぎます。"

#: ../../source/displaying_images.rst:543
msgid ""
"The window itself is displayed by calling :var:`config.empty_window`. It "
"defaults to having the narrator say an empty string. ::"
msgstr ""
"ウィンドウ自身は :var:`config.empty_window` を呼び出して表示されます。デフォ"
"ルトではナレーターに空の文字列を話させます。 ::"

#: ../../source/displaying_images.rst:562
msgid "Image Functions"
msgstr "画像関数"

#: ../../source/inc/image_func:5
msgid ""
"Adds a new layer to the screen. If the layer already exists, this function "
"does nothing."
msgstr ""
"新しいレイヤーを追加します。レイヤーが既に存在すればこの関数はなにもしませ"
"ん。"

#: ../../source/inc/image_func:8
msgid "One of `behind` or `above` must be given."
msgstr "`below` または `above` のどちらかが指定さなければいけません。"

#: ../../source/inc/image_func:11 ../../source/inc/image_func:42
#: ../../source/inc/image_func:60 ../../source/inc/image_func:94
#: ../../source/inc/image_func:118 ../../source/inc/image_func:224
msgid "`layer`"
msgstr "`layer`"

#: ../../source/inc/image_func:11
msgid "A string giving the name of the new layer to add."
msgstr "追加する新しいレイヤー名の文字列です。"

#: ../../source/inc/image_func:15
msgid "`above`"
msgstr "`above`"

#: ../../source/inc/image_func:14
msgid ""
"If not None, a string giving the name of a layer the new layer will be "
"placed above."
msgstr "None または新しいレイヤーの下に配置されるレイヤー名の文字列です。"

#: ../../source/inc/image_func:19
msgid "`below`"
msgstr "`below`"

#: ../../source/inc/image_func:18
msgid ""
"If not None, a string giving the name of a layer the new layer will be "
"placed below."
msgstr "None または新しいレイヤーの上に配置されるレイヤー名の文字列です。"

#: ../../source/inc/image_func:23
msgid "`menu_clear`"
msgstr "`menu_clear`"

#: ../../source/inc/image_func:22
msgid ""
"If true, this layer will be cleared when entering the game menu context, and "
"restored when leaving it."
msgstr ""
"True ならこのレイヤーはゲームメニューコンテキストに入るとクリアされ、出るとき"
"に復元されます。"

#: ../../source/inc/image_func:27
msgid "`sticky`"
msgstr "`sticky`"

#: ../../source/inc/image_func:26
msgid ""
"If true, any tags added to this layer will have it become their default "
"layer until they are hidden. If None, this layer will be sticky only if "
"other sticky layers already exist."
msgstr ""
"True ならこのレイヤーに追加されたタグは非表示になるまでこのレイヤーをそのデ"
"フォルトレイヤーにします。 None なら他の sticky レイヤーが既に存在していると"
"きのみこのレイヤーは sticky レイヤーになります。"

#: ../../source/inc/image_func:32
msgid ""
"Determines if `name` can be used to show an image. This interprets `name` as "
"a tag and attributes. This is combined with the attributes of the currently-"
"showing image with `tag` on `layer` to try to determine a unique image to "
"show. If a unique image can be show, returns the name of that image as a "
"tuple. Otherwise, returns None."
msgstr ""
"`name` で画像を表示出来るか決定します。これは `name` をタグと属性として解釈し"
"ます。これは `layer` 上の現在表示されている `tag` の画像の属性と組み合わさ"
"れ、表示する画像を 1 つに決定しようとします。1つの画像が表示可能なら、その画"
"像名をタプルで返し、そうでなければ None を返します。"

#: ../../source/inc/image_func:40
msgid "`tag`"
msgstr "`tag`"

#: ../../source/inc/image_func:39
msgid ""
"The image tag to get attributes from. If not given, defaults to the first "
"component of `name`."
msgstr ""
"画像属性を所得する画像タグです。未指定なら `name` の最初の要素が使用されま"
"す。"

#: ../../source/inc/image_func:43 ../../source/inc/image_func:61
#: ../../source/inc/image_func:95 ../../source/inc/image_func:225
msgid "The layer to check. If None, uses the default layer for `tag`."
msgstr ""
"チェックするレイヤーです。 None なら `tag` のデフォルトレイヤーを使用します。"

#: ../../source/inc/image_func:47
msgid "Changes the zorder of `tag` on `layer` to `zorder`."
msgstr "`layer` 上の `tag` の zorder を `zorder` に変更します。"

#: ../../source/inc/image_func:51
msgid ""
"Checks to see if there is a unique image with the given tag and attributes. "
"If there is, returns the attributes in order. Otherwise, returns None."
msgstr ""
"指定したタグと属性を持つ唯一の画像があるかチェックします。あれば、その属性を"
"順番に返します。そうでなければ None を返します。"

#: ../../source/inc/image_func:57
msgid ""
"Clears all image attributes for the `tag` image. If the tag had no attached "
"image attributes, this does nothing."
msgstr ""
"`tag` 画像のすべての画像属性をクリアします。そのタグに画像属性が泣ければ、お"
"れは何もしません。"

#: ../../source/inc/image_func:65
msgid ""
"Copies images beginning with one prefix to images beginning with another. "
"For example::"
msgstr "ある接頭辞で始まる画像を他の接頭辞で始まるものにコピーします。例 :"

#: ../../source/inc/image_func:70
msgid ""
"will create an image beginning with \"eileen2\" for every image beginning "
"with \"eileen\". If \"eileen happy\" exists, \"eileen2 happy\" will be "
"created."
msgstr ""
"「 eileen 」で始まるすべての画像に対して「 eileen2 」で始まる画像を作成しま"
"す。例えば「 eileen happy 」が存在するなら、「 eileen2 happy 」が作成されま"
"す。"

#: ../../source/inc/image_func:76
msgid "`old`"
msgstr "`old`"

#: ../../source/inc/image_func:75
msgid "A space-separated string giving the components of the old image name."
msgstr "スペース区切りのコピー対象画像名の要素の文字列です。"

#: ../../source/inc/image_func:79
msgid "`new`"
msgstr "`new`"

#: ../../source/inc/image_func:79
msgid "A space-separated string giving the components of the new image name."
msgstr "スペース区切りの新しい画像名の要素の文字列です。"

#: ../../source/inc/image_func:84
msgid ""
"This flushes all image cache entries that refer to the file `fn`.  This may "
"be called when an image file changes on disk to force Ren'Py to use the new "
"version."
msgstr ""
"`fn` ファイルを参照するすべての画像イメージのキャッシュをクリアします。ディス"
"クの画像ファイルが変わったときにはこれを呼び出して、 Ren'Pyに新バージョンの使"
"用を強制します。"

#: ../../source/inc/image_func:90
msgid ""
"Return a tuple giving the image attributes for the image `tag`. If the image "
"tag has not had any attributes associated since the last time it was hidden, "
"returns `if_hidden`."
msgstr ""
"`tag` の画像属性のタプルを返します。画像タグが最後に非表示されてから画像属性"
"がないときは、`if_hidden` を返します。"

#: ../../source/inc/image_func:99
msgid "Returns a list of image tags that have been defined."
msgstr "定義されている画像タグのリストが返されます。"

#: ../../source/inc/image_func:103
msgid ""
"Returns the set of image tags on `layer` that are currently hidden, but "
"still have attribute information associated with them."
msgstr ""
"現在 `layer` 上で非表示されているが、まだ画像属性を持つ画像タグのセットが返さ"
"れます。"

#: ../../source/inc/image_func:108
msgid ""
"If an image with `tag` exists on `layer`, returns the bounding box of that "
"image. Returns None if the image is not found."
msgstr ""
"`tag` を持つ画像が `layer` に存在すれば、その画像の矩形領域を返します。画像が"
"見つからなければ None を返します。"

#: ../../source/inc/image_func:111
msgid ""
"The bounding box is an (x, y, width, height) tuple. The components of the "
"tuples are expressed in pixels, and may be floating point numbers."
msgstr ""
"矩形領域は (x, y, width, height) のタプルです。タプルの要素はピクセル数で表さ"
"れ、小数にも出来ます。"

#: ../../source/inc/image_func:116
msgid "`width`, `height`"
msgstr "`width`, `height`"

#: ../../source/inc/image_func:115
msgid ""
"The width and height of the area that contains the image. If None, defaults "
"the width and height of the screen, respectively."
msgstr ""
"画像を格納する領域の幅と高さです。 None ならデフォルトでそれぞれスクリーンの"
"幅と高さになります。"

#: ../../source/inc/image_func:119
msgid "If None, uses the default layer for `tag`."
msgstr "None なら `tag` のデフォルトレイヤーを使用します。"

#: ../../source/inc/image_func:123
msgid ""
"Returns a list of image attributes, ordered in a way that makes sense to "
"present to the user."
msgstr "ユーザーに提供される順にの画像属性のリストを返します。"

#: ../../source/inc/image_func:129
msgid "`attributes`"
msgstr "`attributes`"

#: ../../source/inc/image_func:127
msgid ""
"If present, only attributes that are compatible with the given attributes "
"are considered. (Compatible means that the attributes can be in a single "
"image at the same time.)"
msgstr ""
"存在すれば、指定された属性と互換性のある属性のみが考慮されます(互換性とはその"
"属性が同時に一つの画像にあることです)。"

#: ../../source/inc/image_func:134
msgid "`sort`"
msgstr "`sort`"

#: ../../source/inc/image_func:132
msgid ""
"If not None, the returned list of attributes is sorted. This is a one-"
"argument function that should be used as a tiebreaker - see `this tutorial "
"<https://docs.python.org/3/howto/sorting.html#key-functions>`_ for more "
"information."
msgstr ""
"None でなければ、これで返される属性のリストがソートされます。これは "
"tiebreaker として使用されるべき引数1つの関数です。詳細は`このチュートリアル "
"<https://docs.python.org/3/howto/sorting.html#key-functions>`_ を参照してくだ"
"さい。"

#: ../../source/inc/image_func:139
msgid ""
"This gets the placement of displayable d. There's very little warranty on "
"this information, as it might change when the displayable is rendered, and "
"might not exist until the displayable is first rendered."
msgstr ""
"これは displayable d の位置を所得します。displayable はレンダリングされると位"
"置が変わる可能性があり、最初にレンダリングされるまでは存在しない可能性もある"
"のでこの情報にはあまり信頼がありません。"

#: ../../source/inc/image_func:143
msgid ""
"This returns an object with the following fields, each corresponding to a "
"style property:"
msgstr ""
"これは以下の属性を持つオブジェクトを返し、それぞれがスタイルプロパティーに対"
"応しています。"

#: ../../source/inc/image_func:146
msgid "pos"
msgstr "pos"

#: ../../source/inc/image_func:147
msgid "xpos"
msgstr "xpos"

#: ../../source/inc/image_func:148
msgid "ypos"
msgstr "ypos"

#: ../../source/inc/image_func:149
msgid "anchor"
msgstr "anchor"

#: ../../source/inc/image_func:150
msgid "xanchor"
msgstr "xanchor"

#: ../../source/inc/image_func:151
msgid "yanchor"
msgstr "yanchor"

#: ../../source/inc/image_func:152
msgid "offset"
msgstr "offset"

#: ../../source/inc/image_func:153
msgid "xoffset"
msgstr "xoffset"

#: ../../source/inc/image_func:154
msgid "yoffset"
msgstr "yoffset"

#: ../../source/inc/image_func:155
msgid "subpixel"
msgstr "subpixel"

#: ../../source/inc/image_func:159
msgid ""
"If an image with the same name has been :ref:`registered <defining-images>`, "
"returns it. Otherwise, returns None."
msgstr ""
"同じ名前の画像が :ref:`登録されて <defining-images>` いればそれを、そうでなけ"
"れば None を返します。"

#: ../../source/inc/image_func:164
msgid ""
"Returns the tag corresponding to the currently speaking character (the "
"`image` argument given to that character). Returns None if no character is "
"speaking or the current speaking character does not have a corresponding "
"image tag."
msgstr ""
"現在話しているキャラクターに関連する (そのキャラクターの `image` 引数に指定さ"
"れた) タグ を返します。話しているキャラクターがいない、または現在のキャラク"
"ターが画像タグと関連付けられていなければ None を返します。"

#: ../../source/inc/image_func:171
msgid ""
"Returns the set of image tags that are currently being shown on `layer`. If "
"sort is true, returns a list of the tags from back to front."
msgstr ""
"現在 `layer` 上に表示されている画像タグのセットが返されます。sort が True な"
"ら、後ろから前の順でタグのリストが返されます。"

#: ../../source/inc/image_func:176
msgid "Returns a list of (tag, zorder) pairs for `layer`."
msgstr "`layer` に対する (tag, zorder) のペアのリストを返します。"

#: ../../source/inc/image_func:180
msgid ""
"Return true if an image with `name` exists, and false if no such image "
"exists."
msgstr ""
"`name` 画像が存在すれば Ture を、そのような画像がなければ False を返します。"

#: ../../source/inc/image_func:185
msgid "`name`"
msgstr "`name`"

#: ../../source/inc/image_func:184
msgid ""
"Either a string giving an image name, or a tuple of strings giving the name "
"components."
msgstr "画像名の文字列か、画像名を要素とする文字列のタプルです。"

#: ../../source/inc/image_func:188
msgid "`exact`"
msgstr "`exact`"

#: ../../source/inc/image_func:188
msgid ""
"Returns true if and only if an image with the exact name exists - "
"parameterized matches are not included."
msgstr ""
"その正確な名前で画像が存在する場合のみ True を返します。正規表現はマッチしま"
"せん。"

#: ../../source/inc/image_func:193
msgid ""
"Returns a list of images that have been added to Ren'Py, as a list of "
"strings with spaces between the name components."
msgstr ""
"Ren'Py に追加された画像を、名前と要素間にスペースを置いた文字列のリストとして"
"返します。"

#: ../../source/inc/image_func:198
msgid ""
"Marks the named image as if it has been already displayed on the current "
"user's system."
msgstr ""
"その名前の画像を現在のユーザーがすでに閲覧しているものとしてマークします。"

#: ../../source/inc/image_func:203
msgid ""
"Marks the named image as if it has not been displayed on the current user's "
"system yet."
msgstr ""
"その名前の画像を現在のユーザーではまだ閲覧していないものとしてマークします。"

#: ../../source/inc/image_func:208
msgid ""
"Returns True if the named image has been seen at least once on the user's "
"system. An image has been seen if it's been displayed using the show "
"statement, scene statement, or :func:`renpy.show` function. (Note that there "
"are cases where the user won't actually see the image, like a show "
"immediately followed by a hide.)"
msgstr ""
"その名前の画像がユーザーに一度でも閲覧されていれば True を返します。画像は "
"show 、 scene ステートメントか  :func:`renpy.show` 関数を使用して表示されると"
"閲覧されたことになります ( 表示直後に hide されるなど、実際にはユーザーが画像"
"を見ていない場合もあることに注意してください )。"

#: ../../source/inc/image_func:216
msgid ""
"Returns true if an image with the same tag as `name` is showing on `layer`."
msgstr ""
"`name` と同じタグを持つ画像が `layer` 上に表示されていると True を返します。"

#: ../../source/inc/image_func:222
msgid "`image`"
msgstr "`image`"

#: ../../source/inc/image_func:220
msgid ""
"May be a string giving the image name or a tuple giving each component of "
"the image name. It may also be a string giving only the image tag."
msgstr ""
"画像名の文字列や、画像名の各要素のタプルです。画像タグだけの文字列でもかまい"
"ません。"

#: ../../source/inc/image_func:229
msgid ""
"This function takes one or more displayables as arguments. It causes Ren'Py "
"to predict those displayables during every interaction until the "
"displayables are removed by :func:`renpy.stop_predict`."
msgstr ""
"この関数は 1 つ以上の displayable を引数として受け取ります。 :func:`renpy."
"stop_predict` によって除外されるまで、 それらの displayable をインタラクショ"
"ン毎に予測させます。"

#: ../../source/inc/image_func:233
msgid ""
"If a displayable name is a string containing one or more \\* characters, the "
"asterisks are used as a wildcard pattern. If there is at least one . in the "
"string, the pattern is matched against filenames, otherwise it is matched "
"against image names."
msgstr ""
"displayable 名が1つ以上の \\* を含む文字列であるなら、アスタリスクがワイルド"
"カードパターンとして使用できます。文字列に少なくとも1つ . があれが、そのパ"
"ターンはファイルネームに、そうでなければ画像名にマッチします。"

#: ../../source/inc/image_func:242
msgid "starts predicting all images with the name eileen, while::"
msgstr "eileen の名前を持つすべての画像を予測します。 ::"

#: ../../source/inc/image_func:246
msgid "matches all files starting with concert in the images directory."
msgstr "image ディレクトリ内の concert で始まるすべての画像にマッチします。"

#: ../../source/inc/image_func:248
msgid ""
"Prediction will occur during normal gameplay. To wait for prediction to "
"complete, use the `predict` argument to :func:`renpy.pause`."
msgstr ""
"予測はゲームプレイ中ずっと発生します。予測の完了を待つには :func:`renpy."
"pause` に `predict` 引数を使用します。"

#: ../../source/inc/image_func:253
msgid ""
"This function takes one or more displayables as arguments. It causes Ren'Py "
"to stop predicting those displayables during every interaction."
msgstr ""
"この関数は 1 つ以上の displayable を引数として受け取ります。それらの "
"displayable のインタラクション毎の予測を停止させます。"

#: ../../source/inc/image_func:256
msgid ""
"Wildcard patterns can be used as described in :func:`renpy.start_predict`."
msgstr ""
"ワイルドカードパターンは :func:`renpy.start_predict` で述べられるように使用可"
"能です。"

#: ../../source/displaying_images.rst:567
msgid "See also"
msgstr "以下も参照してください"

#: ../../source/displaying_images.rst:569
msgid ""
":doc:`statement_equivalents` : how to use most of the features described "
"here in a python context."
msgstr ""
":doc:`statement_equivalents` : ここで述べた機能のほとんどを Python のコンテキ"
"ストで使用する方法です。"

#: ../../source/displaying_images.rst:572
msgid ""
":doc:`displayables` : other objects to display, more diverse than basic "
"images."
msgstr ""
":doc:`displayables` : 基本的な画像の他、より多様な表示するできるオブジェクト"
"があります。"

#~ msgid "master layer."
#~ msgstr "master layer."

#~ msgid ""
#~ "Transforms used with show should not may any assumptions about their "
#~ "starting state. Currently, transforms used with show layer do not take "
#~ "their state from prior layer transforms, but we plan to change this in "
#~ "the future."
#~ msgstr ""
#~ "show から使用される変換はその開始状態についてなにも前提とすべきではありま"
#~ "せん。現在 show layer で使用される変換は前のレイヤーの変換からその状態を所"
#~ "得しませんが、これは将来変更される予定です。"

#~ msgid "For example, in the code::"
#~ msgstr "例えば、コード中で::"

#~ msgid ""
#~ "Returns a list of tuples, with each tuple representing a possible "
#~ "combination of image attributes that can be associated with `tag`. If "
#~ "`attributes` is given, only images that contain all the attributes in "
#~ "that iterable are returned."
#~ msgstr ""
#~ "タプルのリストで、各タプルは `tag` と関連付けられた画像属性の可能な組み合"
#~ "わせです。`attribute` が指定されると、指定されたすべての属性を含む画像のみ"
#~ "が返されます。"

#~ msgid ""
#~ "If the optional transition is given, it's used to show and hide the "
#~ "window. If not given, it defaults to :var:`config.window_show_transition` "
#~ "and :var:`config.window_hide_transition`. Giving None as the transition "
#~ "prevents it from occuring."
#~ msgstr ""
#~ "任意でトランジションが指定されると、ウィンドウの表示、非表示時に使用されま"
#~ "す。指定されないと、デフォルトでは :var:`config.window_show_transition` "
#~ "と :var:`config.window_hide_transition` になります。 トランジションとして "
#~ "None を指定するとその実行を防ぎます。"

#~ msgid ""
#~ "The transition effect is applied between the contents of the screen at "
#~ "the end of the previous interaction (with transient screens and "
#~ "displayables hiddden), and the current contents of the scene, after the "
#~ "show and hide statements have executed."
#~ msgstr ""
#~ "トランジション効果は、前のインタラクション (会話、選択肢、トランジション) "
#~ "が終わった時点のスクリーンの内容と、scene、show、hide ステートメントが実行"
#~ "された後の内容の間で適用されます。"
