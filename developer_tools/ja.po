# Japanese translation for renpy-doc
# Copyright (c) 2013 Rosetta Contributors and Canonical Ltd 2013
# This file is distributed under the same license as the renpy-doc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: renpy-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-28 12:38+0900\n"
"PO-Revision-Date: 2024-09-30 19:46+0900\n"
"Last-Translator: kyouryuukunn <akakyouryuu@gmail.com>\n"
"Language-Team: Japanese <ja@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2014-06-21 06:27+0000\n"
"X-Generator: Poedit 2.2.4\n"

#: ../../source/developer_tools.rst:2
msgid "Developer Tools"
msgstr "開発ツール"

#: ../../source/developer_tools.rst:4
msgid ""
"Ren'Py includes a number of features to make a developer's life easier. Many "
"of them need the variable :var:`config.developer` to be set to True to "
"operate."
msgstr ""
"Ren'Py には開発者用の多くの機能があり、それらの多くは 実行するのに :var:"
"`config.developer` が True である必要があります。"

#: ../../source/developer_tools.rst:10
msgid "Lint"
msgstr "Lint"

#: ../../source/developer_tools.rst:12
msgid ""
"The Lint tool (available from the launcher) checks the game for potential "
"errors or misoptimizations, and advises the developing team about how to "
"best improve it. Since some of these errors will only affect users on other "
"platforms, it’s recommended to understand and fix all errors, even if the "
"problem can't be triggered locally."
msgstr ""
"(ランチャーから利用可能な) Lint ツール は、ゲームに潜在するエラーや最適化ミス"
"をチェックし、開発チームに最適な改善策をアドバイスします。これらのエラーの中"
"には、他のプラットフォームのユーザーにしか影響しないものもあるため、その場で"
"問題を引き起こさない場合でも、すべてのエラーの理解と修正を推奨します。"

#: ../../source/developer_tools.rst:18
msgid "Lint also includes useful infos and stats about the game."
msgstr "Lint にはゲームに対して便利な情報や統計データも含まれています。"

#: ../../source/developer_tools.rst:20
msgid "Note that using Lint is not a substitute for thorough testing."
msgstr "Lint の使用は徹底的なテストの代用にならないことに注意してください。"

#: ../../source/developer_tools.rst:25
msgid "Shift+O Console"
msgstr "Shift+O コンソール"

#: ../../source/developer_tools.rst:27
msgid ""
"The debug console makes it possible to interactively run Ren'Py script and "
"Python statements, and immediately see the results. The console is available "
"in developer mode or when :var:`config.console` is True, and can be accessed "
"by pressing Shift+O."
msgstr ""
"デバッグコンソールは対話的に Ren'Py スクリプトと Python ステートメントを実行"
"し,即座にその結果が確認できます。コンソールは開発者モードか :var:`config."
"console` が True の時に利用可能で「 shift+O 」でアクセス出来ます。"

#: ../../source/developer_tools.rst:32
msgid "The console can be used to:"
msgstr "コンソールは以下に使用可能です。 :"

#: ../../source/developer_tools.rst:34
msgid "Jump to a label."
msgstr "ラベルへのジャンプ"

#: ../../source/developer_tools.rst:35
msgid "Interactively try out Ren'Py script statements."
msgstr "対話的に Ren'Py スクリプトを試用します。"

#: ../../source/developer_tools.rst:36
msgid "Evaluate a Python expression or statement to see the result."
msgstr "python 式やステートメントを評価して結果を確認します。"

#: ../../source/developer_tools.rst:37
msgid "Trace Python expressions as the game progresses."
msgstr "ゲーム進行と共に python 式をトレースします。"

#: ../../source/inc/console_commands:1
msgid "commands:"
msgstr "コマンド :"

#: ../../source/inc/console_commands:3
msgid "clear: clear the console history"
msgstr "clear: コンソール履歴をクリアします。"

#: ../../source/inc/console_commands:5
msgid "escape: Enables escaping of unicode symbols in unicode strings."
msgstr ""
"escape: ユニコード文字列中のユニコードシンボルのエスケープを有効化します。"

#: ../../source/inc/console_commands:7
msgid "exit: exit the console"
msgstr "exit: コンソールを出ます。"

#: ../../source/inc/console_commands:9
msgid "help: show this help"
msgstr "help: このヘルプを表示します。"

#: ../../source/inc/console_commands:11
msgid "help <expr>: show signature and documentation of <expr>"
msgstr "help <expr>: <expr> シグネチャとドキュメントを表示します。"

#: ../../source/inc/console_commands:13
msgid "jump <label>: jumps to label"
msgstr "jump <label>: ラベルに飛びます。"

#: ../../source/inc/console_commands:15
msgid "load <slot>: loads the game from slot"
msgstr "load <slot>: スロットからゲームを起動します。"

#: ../../source/inc/console_commands:17
msgid "long: Print the full representation of objects on the console."
msgstr "long: コンソールにオブジェクトの完全な表現を表示します。"

#: ../../source/inc/console_commands:19
msgid "reload: reloads the game, refreshing the scripts"
msgstr "reload: ゲームをリロードしてスクリプトをリフレッシュします。"

#: ../../source/inc/console_commands:21
msgid "save <slot>: saves the game in slot"
msgstr "save <slot>: スロットにゲームを保存します。"

#: ../../source/inc/console_commands:23
msgid "short: Shorten the representation of objects on the console (default)."
msgstr "short: コンソールのオブジェクトの表示を短縮します。 (default)."

#: ../../source/inc/console_commands:25
msgid "stack: print the return stack"
msgstr "stack: リターンスタックを表示します。"

#: ../../source/inc/console_commands:27
msgid ""
"unescape: Disables escaping of unicode symbols in unicode strings and print "
"it as is (default)."
msgstr ""
"unescape: ユニコード文字列中のユニコードシンボルのエスケープを無効化しそのま"
"まで表示します(default)。"

#: ../../source/inc/console_commands:29
msgid "unwatch <expression>: stop watching an expression"
msgstr "unwatch <expression>: 式の監視を停止します。"

#: ../../source/inc/console_commands:31
msgid "unwatchall: stop watching all expressions"
msgstr "unwatchall: 全ての式の監視を停止します。"

#: ../../source/inc/console_commands:33
msgid "watch <expression>: watch a python expression"
msgstr "watch <expression>: python 式を監視します。"

#: ../../source/inc/console_commands:35
msgid ""
"watch short: makes the representation of traced expressions short (default)"
msgstr "watch short: 追跡している式の表現を短縮します(default)。"

#: ../../source/inc/console_commands:37
msgid "watch long: makes the representation of traced expressions as is"
msgstr "watch long: 追跡している式の表現をそのままにします。"

#: ../../source/inc/console_commands:39
msgid "<renpy script statement>: run the statement"
msgstr "<renpy script statement>: ステートメントを実行します。"

#: ../../source/inc/console_commands:41
msgid "<python expression or statement>: run the expression or statement"
msgstr ""
"<python expression or statement>: python 式やステートメントを実行します。"

#: ../../source/developer_tools.rst:42
msgid "Shift+E Editor Support"
msgstr "Shift+E エディターサポート"

#: ../../source/developer_tools.rst:44
msgid ""
"Shift+E opens the default text editor, as set in the launcher and "
"customizable using :doc:`editor`, to open the script file in and line number "
"at which the current statement is written."
msgstr ""
"Shift+E は、ランチャーで設定され、 :doc:`editor` でカスタマイズ可能なデフォル"
"トのテキストエディタを現在のステートメントが書かれているスクリプトファイルの"
"行番号で開きます。"

#: ../../source/developer_tools.rst:49
msgid "Shift+D Developer Menu"
msgstr "Shift+D 開発者メニュー"

#: ../../source/developer_tools.rst:51
msgid ""
"When :var:`config.developer` is true, hitting Shift+D will display a "
"developer menu that provides easy access to some of the features given below."
msgstr ""
":var:`config.developer` が True の時、「 shift+D 」を押すと以下の機能のいくつ"
"かに簡単にアクセス出来る開発者メニューを表示します。"

#: ../../source/developer_tools.rst:55
msgid "Shift+R Reloading"
msgstr "Shift+R リロード"

#: ../../source/developer_tools.rst:57
msgid ""
"When :var:`config.developer` is True, hitting Shift+R will save the current "
"game, reload the game script, and reload the game. This will often place you "
"at the last unchanged statement encountered before Shift+R was pressed."
msgstr ""
":var:`config.developer` が True なら、「 shift+R 」を押すと現在のゲームをセー"
"ブし、スクリプトをロードし直してからゲームをロードします。これをすると"
"「 shift+R 」が押される前に最後に通過した未変更のステートメントまで戻ることが"
"あります。"

#: ../../source/developer_tools.rst:61
msgid ""
"After the first reload, the game will be in autoreload mode, and any changes "
"to files accessed since the last reload will cause the game to be reloaded "
"again."
msgstr ""
"最初のリロード後、ゲームはオートリロードモードに成ります。アクセスできるファ"
"イルに最後のリロード後から変化があればゲームを再度リロードします。"

#: ../../source/developer_tools.rst:65
msgid ""
"This allows the developer to make script changes with an external editor, "
"and not have to exit and restart Ren'Py to see the effect of the changes."
msgstr ""
"これにより開発者は外部エディターでスクリプトを変更しても Ren'Py を再起動する"
"ことなく変更を確認出来るようになります。"

#: ../../source/developer_tools.rst:68
msgid ""
"Note that game state, which includes variable values and scene lists, is "
"preserved across the reload. This means that if one of those statements is "
"changed, it is necessary to rollback and re-execute the statement to see its "
"new effect."
msgstr ""
"ゲームの状態には変数の値とシーンリストが含まれており、リロード後も保存される"
"ことに注意してください。このことはステートメントの 1 つが変更されたら効果の確"
"認にはロールバックやステートメントの再実行が必要になることを意味します。"

#: ../../source/developer_tools.rst:73
msgid "Shift+R reloading does not work in a replay."
msgstr "Shift+R によるリロードはリプレイでは動作しません。"

#: ../../source/developer_tools.rst:75
msgid ""
"The following functions implement the same behavior in pure python. Note "
"that they are only meant to be used in developer mode."
msgstr ""
"以下の関数では純粋な pythonで同じ動作を実装しています。これらは開発者モードで"
"のみ使用されることに注意してください。"

#: ../../source/inc/reload:5
msgid "Gets the autoreload flag."
msgstr "オートリロードのフラグを所得します。"

#: ../../source/inc/reload:9
msgid ""
"Causes Ren'Py to save the game, reload the script, and then load the save."
msgstr ""
"Ren'Py にゲームをセーブさせ、スクリプトをリロード、そのセーブをロードさせま"
"す。"

#: ../../source/inc/reload:12
msgid ""
"This should only be called during development. It works on Windows, macOS, "
"and Linux, but may not work on other platforms."
msgstr ""
"これは開発中のみ呼び出すべきです。 Windows、macOS、およびLinux では動作します"
"が他のプラットフォームでは動作しない場合があります。"

#: ../../source/inc/reload:17
msgid ""
"Sets the autoreload flag, which determines if the game will be automatically "
"reloaded after file changes. Autoreload will not be fully enabled until the "
"game is reloaded with :func:`renpy.reload_script`."
msgstr ""
"オートリロードのフラグを設定し、ファイル変更後にゲームが自動的にリロードする"
"かどうかを決定します。オートリロードはゲームが :func:`renpy.reload_script` で"
"リロードされて始めて完全に有効化されます。"

#: ../../source/developer_tools.rst:83
msgid "Shift+I Style Inspecting"
msgstr "Shift+I スタイルインスペクター"

#: ../../source/developer_tools.rst:85
msgid ""
"When :var:`config.developer` is true, pressing Shift+I will cause style "
"inspection to occur. This will display a list of displayables underneath the "
"mouse, in the order they are drawn to the screen (that is, the last "
"displayable is the one on top of the others). For each displayable, it will "
"display the type, the style used, and the size it is being rendered at."
msgstr ""
":var:`config.developer` が True のときに「 shift+I 」を押すとスタイルインスペ"
"クターを実行します。これはマウス下の displayable のリストを画面に描画された順"
"に表示します(つまり最後の Displayable はそれ以外の上にあります)。各 "
"displayable には型と使用されているスタイル、描画されているサイズが表示されま"
"す。"

#: ../../source/developer_tools.rst:91
msgid ""
"Clicking on the style name will display the styles the displayable inherits "
"from, and the properties each style contributes to the final displayable."
msgstr ""
"スタイル名をクリックするとその Displayable が継承しているスタイルと各スタイル"
"が最後の Displayable に与えているプロパティーを表示します。"

#: ../../source/developer_tools.rst:95
msgid "> Fast Skipping"
msgstr "> 高速スキップ"

#: ../../source/developer_tools.rst:97
msgid ""
"When :var:`config.developer` or :var:`config.fast_skipping` is True, "
"pressing the `fast_skip` key (by default, \">\") causes the game to "
"immediately skip to the next important interaction.  For this purpose, an "
"important interaction is one that is not caused by a say statement, "
"transition, or pause command. Usually, this means skipping to the next menu, "
"but it will also stop when user-defined forms of interaction occur."
msgstr ""
":var:`config.developer` か :var:`config.fast_skipping` が Ture の時に "
"fast_skip キー ( デフォルトでは、「 > 」 ) を押すとゲームは即座に次の重要なイ"
"ンタラクションまでスキップします。ここで重要なインタラクションとは say ステー"
"トメントやトランジション、ポーズによる以外のインタラクションのことです。通常"
"これは次の選択肢へのスキップを意味しますが、ユーザー定義のインタラクションが"
"起きてもストップします。"

#: ../../source/developer_tools.rst:107
msgid "Warping to a Line"
msgstr "行ワープ"

#: ../../source/developer_tools.rst:109
msgid ""
"Ren'Py supports warping to a line in the script, without the developer to "
"play through the entire game to get there. While this warping technique has "
"a number of warnings associated with it, it still may be useful in providing "
"a live preview."
msgstr ""
"Ren'Py は開発者がゲームをプレイしてその場所まで行かなくともスクリプトの特定の"
"行にワープできます。このワープ技術はいくつかの注意が必要ですが、それでもプレ"
"ビューには便利でしょう。"

#: ../../source/developer_tools.rst:114
msgid ""
"To invoke warping, run Ren'Py with the ``--warp`` command-line argument "
"followed by a filename:line combination, to specify where you would like to "
"warp to. For example::"
msgstr ""
"ワープの実行には Ren'Py をファイル名:行が続く ``--warp`` 引数つきで実行して、"
"ワープ先を指定する必要があります。例 ::"

#: ../../source/developer_tools.rst:120
msgid ""
"(Where `my_project` is the full path to the base directory of your project.)"
msgstr ""
"(ここで、 `my_project` はプロジェクトのベース・ディレクトリーへのフルパスで"
"す)"

#: ../../source/developer_tools.rst:122
msgid ""
"When warping is invoked, Ren'Py does a number of things. It first finds all "
"of the scene statements in the program. It then tries to find a path from "
"the scene statements to every reachable statement in the game. It then picks "
"the reachable statement closest to, but before or at, the given line. It "
"works backwards from that statement to a scene statement, recording the path "
"it took. Ren'Py then executes the scene statement and any show or hide "
"statements found along that path. Finally, it transfers control to the found "
"statement."
msgstr ""
"ワープが実行されると Ren'Py はいくつかの処理をします。最初にプログラム中のす"
"べての scene ステートメントを見つけ、それらの scene ステートメントからその"
"ゲームで到達可能なすべてのステートメントへのパスを見つけます。そして指定され"
"た行よりも前のものから最も近い到達可能なステートメントを見つけ、そのステート"
"メントから scene ステートメントまでを逆に探索し、辿ったパスを記録します。その"
"後、scene ステートメント及びパス上のすべての show、hide ステートメントを実行"
"します。最後に、たどり着いたステートメントに制御を移動します。"

#: ../../source/developer_tools.rst:130
msgid ""
"There are a number of fairly major caveats to the warp feature. The first is "
"that it only examines a single path, which means that while the path may be "
"representative of some route of execution, it's possible that there may be a "
"bug along some other route. In general, the path doesn't consider game "
"logic, so it's also possible to have a path that isn't actually reachable. "
"(This is only really a problem on control-heavy games, especially those that "
"use a lot of Python."
msgstr ""
"ワープ機能に対するいくつかの主要な留意点があります。第一にこれは 1 つのパスの"
"みを調査するためそのパスが幾つかのルートの代表となりますが、その他のルートで"
"はバグがあるかもしれません。一般的にパスはゲームのロジックを考慮しませんので"
"実際には到達不可能なパスもありえます ( これは実際には python コードを多用する"
"ような重いゲームでのみ問題になります )。"

#: ../../source/developer_tools.rst:138
msgid ""
"The biggest problem, though, is that Python is not executed before the "
"statement that is warped to. This means that all variables will be "
"uninitialized, which can lead to crashes when they are used. To overcome "
"this, one can define a label ``after_warp``, which is called after a warp "
"but before the warped-to statement executes. This label can set up variables "
"in the program, and then return to the preview."
msgstr ""
"最大の問題はワープ先のステートメント以前の python コードが実行されないという"
"ことです。つまりすべての変数は初期化されず、それらが使用されるとクラッシュす"
"る可能性があります。これを克服するためにラベル ``after_warp`` が定義でき、こ"
"れはワープ後、ワープ先のステートメントの実行前に 呼び出されます。このラベルの"
"コードでプログラムの変数を設定し、プレビューに戻れます。"

#: ../../source/developer_tools.rst:145
msgid ""
"The warp feature requires :var:`config.developer` to be True to operate."
msgstr ""
"ワープ機能の実行には :var:`config.developer` が True である必要があります。"

#: ../../source/developer_tools.rst:149
msgid "Debug Functions"
msgstr "デバッグ関数"

#: ../../source/inc/debug:5
msgid ""
"Returns a pair giving the filename and line number of the current statement."
msgstr "ファイル名と現在のステートメントの行数のタプルを返します。"

#: ../../source/inc/debug:10
msgid ""
"If :var:`config.log` is not set, this does nothing. Otherwise, it opens the "
"logfile (if not already open), formats the message to :var:`config."
"log_width` columns, and prints it to the logfile."
msgstr ""
":var:`config.log` が設定されていなければこれは何もしません。そうでなければロ"
"グファイルを ( 既に開いていなければ ) 開き、メッセージを :var:`log_width` 文"
"字の体裁でログファイルに書き出します。"

#: ../../source/inc/debug:16
msgid "Stops watching the given Python expression."
msgstr "指定された python 式の表示を停止します。"

#: ../../source/inc/debug:20
msgid ""
"This takes as an argument a filename:linenumber pair, and tries to warp to "
"the statement before that line number."
msgstr ""
"\"ファイル名:行番号\" の形式で引数を受け取り、その行の前のステートメントに"
"ワープを試みます。"

#: ../../source/inc/debug:23
msgid "This works samely as the `--warp` command."
msgstr "`--warp` コマンドと同様に動作します。"

#: ../../source/inc/debug:27
msgid ""
"This watches the given Python expression, by displaying it in the upper-"
"right corner of the screen."
msgstr "これは指定された python 式をスクリーンの右上端に表示します。"

#: ../../source/developer_tools.rst:157
msgid "Launcher Customization"
msgstr "ランチャーのカスタマイズ"

#: ../../source/developer_tools.rst:159
msgid ""
"It's possible to customize the Ren'Py launcher to select the files and "
"directories that are available to click on. To do this, create project.json "
"with the lines below::"
msgstr ""
"Ren'Py ランチャーでクリックできるファイルやディレクトリをカスタマイズできま"
"す。これには次のように project.json を作成します。 ::"

#: ../../source/developer_tools.rst:183
msgid ""
"If the file already exists, you'll want to edit in the renpy_launcher key "
"and the lines below it. You can then edit the dictionaries to change the "
"available files and directories."
msgstr ""
"ファイルがすでに存在する場合は、renpy_launcher キーとその下の行を編集する必要"
"があります。その後、辞書を編集して、使用可能なファイルとディレクトリを変更で"
"きます。"

#~ msgid ""
#~ "The :var:`config.editor` variable allows a developer to specify an editor "
#~ "command that is run when the launch_editor keypress (by default, Shift+E) "
#~ "occurs."
#~ msgstr ""
#~ "変数 :var:`config.editor` は launch_editor キー ( デフォルトでは「 shift-"
#~ "E 」) が押されたときに実行されるエディターのコマンドを開発者が指定出来るよ"
#~ "うにします。"

#~ msgid "Please see :doc:`Text Editor Integration <editor>`."
#~ msgstr ""
#~ "詳しくは :doc:`Text Editor Integration <editor>` を参照してください。"

#~ msgid "Shift+Y Style Dumping"
#~ msgstr "Shift+Y スタイルダンプ"

#~ msgid ""
#~ "When :var:`config.developer` is True, pressing the `dump_styles` key (by "
#~ "default, Shift+Y), will write a description of every style Ren'Py knows "
#~ "about to the file \"styles.txt\". This description includes every "
#~ "property that is part of the style, the value of that property, and the "
#~ "style the property is inherited from."
#~ msgstr ""
#~ ":var:`config.developer` が Ture の時に dump_styles キー ( デフォルトでは、"
#~ "「 shift-Y 」 )を押すと Ren'Py が認識しているすべてのスタイルが「 style."
#~ "txt 」ファイルに書き出されます。これにはそのスタイルの全てのプロパティー"
#~ "と、そのプロパティーの値と継承先のスタイルがあります。"

#~ msgid "A watch will not persist through a save or restart."
#~ msgstr "これはセーブ、再起動後は保存されません。"

#~ msgid ""
#~ "When using renpy.sh or renpy.py from the SDK to run Ren'Py, you will also "
#~ "need to give the ``--game`` option. For example ::"
#~ msgstr ""
#~ "renpy.sh や renpy.py を使用して SDK から Ren'Py を実行する時は、 ``--"
#~ "game`` オプションの指定も必要です。 例 ::"

#~ msgid ""
#~ "There are a number of fairly major caveats to the warp feature. The first "
#~ "is that it only examines a single path, which means that while the path "
#~ "may be representative of some route of execution, it's possible that "
#~ "there may be a bug along some other route. In general, the path doesn't "
#~ "consider game logic, so it's also possible to have a path that isn't "
#~ "actually reachable. (This is only really a problem on control-heavy "
#~ "games, espcially those that use a lot of python code."
#~ msgstr ""
#~ "ワープ機能に対するいくつかの主要な留意点があります。第一にこれは 1 つのパ"
#~ "スのみを調査するのでそのパスが幾つかのルートの代表となりますが、その他の"
#~ "ルートではバグがあるかもしれません。一般的にパスはゲームのロジックを考慮し"
#~ "ませんので実際には到達不可能なパスも可能です。 ( これは特に python コード"
#~ "を多用するような重いゲームでのみ問題になります。 )"

#~ msgid ""
#~ "The biggest problem, though, is that no python code is executed before "
#~ "the statement that is warped to. This means that all variables will be "
#~ "uninitalized, which can lead to crashes when they are used. To overcome "
#~ "this, one can define a label ``after_warp``, which is called after a warp "
#~ "but before the warped-to statement executes. The code reached by this "
#~ "label can set up variables in the program, and then return to the preview."
#~ msgstr ""
#~ "最大の問題はワープ先のステートメント以前の python コードが実行されないとい"
#~ "うことです。つまりすべての変数は初期化されず、それらが使用されるとクラッ"
#~ "シュする可能性があります。これを克服するためにラベル ``after_warp`` が定義"
#~ "でき、これはワープ後、ワープ先のステートメントの実行前に 呼び出されます。"
#~ "このラベルのコードでプログラムの変数を設定し、プレビューに戻れます。"
