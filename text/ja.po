# Japanese translation for renpy-doc
# Copyright (c) 2013 Rosetta Contributors and Canonical Ltd 2013
# This file is distributed under the same license as the renpy-doc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: renpy-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-01 10:50+0900\n"
"PO-Revision-Date: 2020-11-01 13:11+0900\n"
"Last-Translator: kyouryuukunn <akakyouryuu@gmail.com>\n"
"Language-Team: Japanese <ja@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2015-03-29 05:43+0000\n"
"X-Generator: Poedit 2.2.4\n"

#: ../../source/text.rst:8
msgid "Text"
msgstr "テキスト"

#: ../../source/text.rst:10
msgid ""
"Ren'Py contains several ways of displaying text. The :ref:`say <say-"
"statement>` and :ref:`menu <menu-statement>` statements are primarily "
"concerned with the display of text to the user. The user interface often "
"contains text, displayed using the :ref:`text <sl-text>`, :ref:`textbutton "
"<sl-textbutton>`, and :ref:`label <sl-label>` screen language statements. "
"These functions, along with others, create :func:`Text` displayables, and "
"show them on the screen."
msgstr ""
"Ren'Py にはテキストを表示する方法がいくつかあります。ユーザーにテキストを表示"
"する方法としてまず考えられるのは  :ref:`say <say-statement>` や :ref:`menu "
"<menu-statement>` ステートメントです。スクリーン言語ステートメント :ref:"
"`text <sl-text>`, :ref:`textbutton <sl-textbutton>`, や :ref:`label <sl-"
"label>` を使ってユーザーインタフェースにテキストを表示することもよくありま"
"す。これらやその他の関数は :func:`Text` displayable を作成し、これをスクリー"
"ンに表示します。"

#: ../../source/text.rst:18
msgid ""
"The Text displayable is responsible for managing the process of showing the "
"text to the user. The text displayable performs actions in the following "
"order:"
msgstr ""
"テキスト displayable の役割はユーザーにテキストを表示する工程の管理で"
"す。テキスト displayable は以下の順序にそって処理されます:"

#: ../../source/text.rst:23
msgid "Translating text."
msgstr "テキストを翻訳する。"

#: ../../source/text.rst:24
msgid "Interpolating data into the text."
msgstr "データをテキストに置換する。"

#: ../../source/text.rst:25
msgid "Styling the text using styles and text tags."
msgstr "スタイルとテキストタグを使ってテキストの体裁を整える。"

#: ../../source/text.rst:26
msgid "Laying out the styled text."
msgstr "整えられたテキストをレイアウトする。"

#: ../../source/text.rst:27
msgid "Drawing the text to the screen."
msgstr "テキストをスクリーンに描画する。"

#: ../../source/text.rst:29
msgid "This chapter discusses the process of text display in Ren'Py."
msgstr "この章では Ren'Py のテキスト表示に焦点を当てます。"

#: ../../source/text.rst:33
msgid "Escape Characters"
msgstr "エスケープ文字"

#: ../../source/text.rst:35
msgid ""
"There are three special characters that can control the way Ren'Py displays "
"text. A creator needs to be aware of these characters to ensure that their "
"writing is not accidentally misinterpreted by the engine."
msgstr ""
"Ren'Py のテキスト表示を制御する文字が 3 つあります。クリエータはこれらの文字"
"がエンジンに誤解釈されないよう気をつける必要があります。"

#: ../../source/text.rst:58
msgid "\\ (backslash)"
msgstr "\\\\(バックスラッシュ)"

#: ../../source/text.rst:40
msgid ""
"The backslash character is used to introduce when writing a Ren'Py or Python "
"string. Some common escape codes are:"
msgstr ""
"バックスラッシュ文字は Ren'Py 、または Python の文字列を書くときの導入に使わ"
"れます。よく使うエスケープコードは:"

#: ../../source/text.rst:44
msgid "\\\\\" (backslash-doublequote)"
msgstr "\\\\\" (バックスラッシュ-ダブルクォート)"

#: ../../source/text.rst:44
msgid "Includes a doublequote in a double-quoted string."
msgstr "ダブルクオートで囲まれた文字列にダブルクオートを含めます。"

#: ../../source/text.rst:47
msgid "\\\\' (backslash-quote)"
msgstr "\\\\' (バックスラッシュ-クォート)"

#: ../../source/text.rst:47
msgid "Includes a single quote in a single-quoted string."
msgstr "シングルクオートで囲まれた文字列にシングルクオートを含めます。"

#: ../../source/text.rst:52
msgid "\\\\\\  (backslash-space)"
msgstr "\\\\\\  (バックスラッシュ-スペース)"

#: ../../source/text.rst:50
msgid ""
"Includes an additional space in a Ren'Py string. By default, Ren'Py script "
"text collapses adjacent whitespace into a single space character."
msgstr ""
"Ren'Py の文字列にスペースを含めます。デフォルトの Ren'Py スクリプトのテキスト"
"では、連続する空白は一つのスペース文字に折りたたまれます。"

#: ../../source/text.rst:55
msgid "\\\\n (backslash-n)"
msgstr "\\\\n (バックスラッシュ-n)"

#: ../../source/text.rst:55
msgid "Includes a newline character in the text."
msgstr "テキストに改行文字を含めます。"

#: ../../source/text.rst:58
msgid "\\\\\\\\ (backslash-backslash)"
msgstr "\\\\\\\\ (バックスラッシュ-バックスラッシュ)"

#: ../../source/text.rst:58
msgid "Includes a backslash character in the text."
msgstr "テキストにバックスラッシュ文字を含めます。"

#: ../../source/text.rst:63
msgid "[ (left bracket)"
msgstr "[ (左角括弧)"

#: ../../source/text.rst:61
msgid ""
"The left bracket is used to introduce interpolation of a value into the "
"text. To include a single left bracket in your text, double it – write "
"``[[``."
msgstr ""
"左角括弧はテキストへ値の置換を導入するために使われます。テキストに左角括弧自"
"体を含めるには二重にして、 ``[[`` と書いてください。"

#: ../../source/text.rst:68
msgid "{ (left brace)"
msgstr "{ (左波括弧)"

#: ../../source/text.rst:66
msgid ""
"The left brace is used to introduce a text tag. To include a left brace in "
"your text, double it – write ``{{``."
msgstr ""
"左波括弧はテキストタグを導入するために使われます。テキストに左波括弧自体を含"
"めるには二重にして、 ``{{`` と書いてください。"

#: ../../source/text.rst:73
msgid "Interpolating Data"
msgstr "データの置換"

#: ../../source/text.rst:75
msgid ""
"Ren'Py supports interpolating data into the text string before it is "
"displayed. For example, if the player's name is stored in the ``playername`` "
"variable, one could write a line of dialogue like::"
msgstr ""
"Ren'Py ではテキスト文字列が表示される前にデータを置換できます。例えば、プレイ"
"ヤー名が ``playername`` 変数に保存されているとすると、台詞をこのように書けま"
"す::"

#: ../../source/text.rst:81
msgid ""
"Ren'Py will interpolate variables found in the global store. When using a "
"text widget in a screen, Ren'Py will also interpolate screen local "
"variables. (This can be overridden by supplying an explicit scope argument "
"to the Text displayable.)"
msgstr ""
"Ren'Py はグローバルスコープに保存されている変数を置換します。スクリーンでテキ"
"ストウィジェットを使っているときは、Ren'Py はスクリーンのローカル変数も置換し"
"ます(テキスト displayable にスコープ引数を明示的に与えて、これをオー"
"バーライドできます)。"

#: ../../source/text.rst:86
msgid ""
"Ren'Py isn't limited to interpolating simple variables. It can also "
"interpolate fields and components of tuples. So it's possible to have::"
msgstr ""
"Ren'Py の置換は単なる変数に限りません。フィールドやタプルの要素も置換できま"
"す。ですから、以下のコードも書けます ::"

#: ../../source/text.rst:91
msgid ""
"It's possible to apply formatting when displaying numbers. This will display "
"a floating point number to two decimal places::"
msgstr ""
"数を表示するときにはフォーマット化コードを適用できます。このコードは、浮動小"
"数点数を小数第 2 位まで表示します ::"

#: ../../source/text.rst:97
msgid ""
"Ren'Py's string interpolation is taken from the :pep:`3101` string "
"formatting syntax. Ren'Py uses [ to introduce string formatting because "
"{ was taken by text tags."
msgstr ""
"Ren'Py の文字列置換は :pep:`3101` 文字列フォーマット化構文を引き継いでいま"
"す。Ren'Py では { をテキストタグに使うので、文字列フォーマット化に [ を使いま"
"す。"

#: ../../source/text.rst:101
msgid ""
"Along with the ``!s`` and ``!r`` conversion flags supported by Python, "
"Ren'Py supports several more flags. The ``!q`` conversion flag ensures that "
"text tags are properly quoted, so that displaying a string will not "
"introduce unwanted formatting constructs. For example::"
msgstr ""
"Python でサポートされている ``!s`` や ``!r`` 変換フラグに加え、 Ren'Py は他"
"にもいくつかのフラグをサポートします。 ``!q`` 変換フラグはテキストタグが適切"
"にクォートされていることを保証し、表示する文字列を望まない形式の構造にしませ"
"ん。例えば ::"

#: ../../source/text.rst:108
msgid "The ``!t`` flag will translate the interpolated string::"
msgstr "``!t`` 変換フラグは置換した文字列を翻訳します。 ::"

#: ../../source/text.rst:117
msgid ""
"The ``!i`` flag will make additional interpolate for the interpolated "
"string::"
msgstr "``!i`` 変換フラグは置換された文字列をさらに置換します。 ::"

#: ../../source/text.rst:122
msgid ""
"This should be used to substitute the text that has a substitution inside. "
"It's often useful in screen language, see :ref:`Const Text <const-text>`."
msgstr ""
"これは置換を含むテキストを置換するのに使用するべきです。スクリーン言語で役立"
"つでしょう。 :ref:`Const Text <const-text>` も参照してください。"

#: ../../source/text.rst:125
msgid ""
"The ``!u`` flag forces the text to uppercase and the ``!l`` flag forces the "
"text to lowercase. The ``!c`` flag acts only on the first character, "
"capitalizing it. These flags may be combined, for example using ``!cl`` "
"would capitalize the first character, and force the remaining text to "
"lowercase."
msgstr ""
"``!u`` フラグはテキストを大文字に、 ``!l`` フラグは小文字にします。 ``!c`` フ"
"ラグは最初の一文字にのみ作用し、大文字にします。これらのフラグは組み合わせ可"
"能で、 ``!cl`` は最初の文字を大文字、残りを小文字にします。"

#: ../../source/text.rst:132
msgid "Styling and Text Tags"
msgstr "スタイリングとテキストタグ"

#: ../../source/text.rst:134
msgid ""
"In Ren'Py, text gains style information in two ways. The first is from the "
"style that is applied to the entire block of text. Please see the section "
"about the :ref:`style system <styles>` for more details, especially the "
"section on :ref:`text style properties <text-style-properties>`."
msgstr ""
"Ren'Py でテキストにスタイル情報を与える方法は 2 つあります。1 つめはテキスト"
"のブロック全体に適用されるスタイルを使う方法です。詳細は :ref:`スタイルシステ"
"ム <styles>` 、特に :ref:`テキストスタイルプロパティー <text-style-"
"properties>` の節を参照してください。"

#: ../../source/text.rst:139
msgid ""
"The second way is through text tags. Text tags are suitable for styling a "
"portion of text block, or a small fraction of the text blocks in the "
"program. If you find yourself applying the same text tags to every line of "
"text, consider using a style instead."
msgstr ""
"2 つ目はテキストタグを使う方法です。テキストタグはテキストブロックの一部にス"
"タイルを適用するのに向いています。行ごとに同じテキストタグを適用しているよう"
"なら、代わりにスタイルの使用を考えてください。"

#: ../../source/text.rst:144
msgid ""
"There are two types of text tags. Some text tags are self-closing, while "
"others require a closing tag. When multiple closing tags are used, they "
"should be closed last open, first closed order – Ren'Py will reject "
"incorrect nesting. For example::"
msgstr ""
"ここに2種類のテキストタグがあります。テキストタグには自動的に閉じるものと、閉"
"じタグが必要なものがあります。複数の閉じタグが使われたときは、最後に開かれた"
"ものが最初に閉じられる順になります。Ren'Py は不適切なネストを却下します。"
"例 ::"

#: ../../source/text.rst:156
msgid ""
"Some text tags take an argument. In that case, the tag name is followed by "
"an equals sign (=), and the argument. The argument may not contain the right-"
"brace (}) character. The meaning of the argument varies based on the text "
"tag."
msgstr ""
"テキストタグには引数を取るものがあります。この場合、タグ名に等号 (=)、引数が"
"続きます。引数には右波括弧文字 (}) を含められません。引数の意味は、テキストタ"
"グによって変わります。"

#: ../../source/text.rst:162
msgid "General Text Tags"
msgstr "全体のテキストタグ"

#: ../../source/text.rst:164
msgid "Tags that apply to all text are:"
msgstr "以下のタグはテキスト全体に適用されます:"

#: ../../source/text.rst:169
msgid ""
"The anchor tag creates a hyperlink between itself and its closing tag. While "
"the behavior of the hyperlink is controlled by the :propref:"
"`hyperlink_functions` style property, the default handler has the following "
"behavior."
msgstr ""
"アンカータグは自身からその閉じタグまでの間にハイパーリンクを作成します。ハイ"
"パーリンクの働きは :propref:`hyperlink_functions` スタイルプロパティーで制御"
"でき、デフォルトの処理は以下のように働きます。"

#: ../../source/text.rst:174
msgid ""
"When the argument begins with ``jump:``, the rest of the argument is a label "
"to jump to."
msgstr "引数が ``jump:`` で始まるなら、残りの引数はジャンプ先のラベルです。"

#: ../../source/text.rst:176
msgid ""
"When the argument begins with ``call:``, the rest of the argument is a label "
"to call. As usual, a call ends the current Ren'Py statement."
msgstr ""
"引数が ``call:`` で始まるなら、残りの引数は呼び出し先のラベルです。通常、呼び"
"出しは現在の Ren'Py ステートメントを終わらせます。"

#: ../../source/text.rst:179
msgid ""
"When the argument begins with ``call_in_new_context:``, the rest of the "
"argument is a label to call in a new context (using :func:`renpy."
"call_in_new_context`)."
msgstr ""
"引数が ``call_in_new_context:`` で始まるなら、残りの引数は( :func:`renpy."
"call_in_new_context` を使用して)新しいコンテキストで呼び出すラベルです。"

#: ../../source/text.rst:182
msgid ""
"When the argument begins with ``show:``, the rest of the argument is a "
"screen to show."
msgstr "引数が ``show:`` で始まるなら、残りの引数は表示するスクリーンです。"

#: ../../source/text.rst:184
msgid ""
"When the argument begins with ``showmenu:``, the rest of the argument is a "
"game menu screen to show."
msgstr ""
"引数が ``showmenu:`` で始まるなら、残りの引数は表示するゲーム内選択肢のスク"
"リーンです。"

#: ../../source/text.rst:187
msgid ""
"Otherwise, the argument is a URL that is opened by the system web browser."
msgstr "そうでなければ、引数はシステムのウェブブラウザで開かれるURLです。"

#: ../../source/text.rst:189
msgid ""
"If there is no protocol section in the argument, :var:`config."
"hyperlink_protocol` is prepended to it. If config.hyperlink_protocol has "
"been set to \"jump\", {a=label} and {a=jump:label} become equivalent. "
"Creators can define new protocols using :var:`config.hyperlink_handlers`."
msgstr ""
"引数にプロトコルセクションはなく、 :var:`config.hyperlink_protocol` がそのた"
"めに用意されています。 config.hyperlink_protocol が  \"jump\" に設定される"
"と、 {a=label} と {a=jump:label} は等しくなります。制作者は :var:`config."
"hyperlink_handlers` を使って新しいプロトコルを定義できます。"

#: ../../source/text.rst:215
msgid ""
"The alpha text tag renders the text between itself and its closing tag in "
"the specified opacity. The opacity should be a value between 0.0 and 1.0, "
"corresponding to fully invisible and fully opaque, respectively. If the "
"value is prefixed by + or -, the opacity will be changed by that amount "
"instead of completely replaced. If the value is prefixed by \\*, the opacity "
"will be multiplied by that amount. ::"
msgstr ""
"alpha テキストタグは自身と閉じたタグ間のテキストを指定の不透明度でレンダリン"
"グします。不透明度は 0.0から1.0までの値で、それぞれ完全な透明と不透明に対応し"
"ます。値の接頭辞に+ または - があると、不透明度はその数だけ変更されます。値の"
"接頭辞が \\* なら不透明度はその数で乗算されます。::"

#: ../../source/text.rst:229
msgid ""
"The alt tag prevents text from being rendered, while still maing the text "
"available for the text-to-speech system. ::"
msgstr ""
"alt タグはテキストが表示されないようにする一方、読み上げ機能では利用可能にし"
"ます。"

#: ../../source/text.rst:234
msgid "See also the :var:`alt` character."
msgstr ":var:`alt` 文字も参照してください。"

#: ../../source/text.rst:238
msgid ""
"The alternate ruby top tag marks text between itself and its closing tag as "
"alternate ruby top text. See the section on :ref:`Ruby Text <ruby-text>` for "
"more information."
msgstr ""
"代替ルビタグは自身からその閉じタグまでの間のテキストをルビの内容としてマーク"
"します。詳細は :ref:`ルビテキスト <ruby-text>` の節をご覧ください。"

#: ../../source/text.rst:244
msgid ""
"The bold tag renders the text between itself and its closing tag in a bold "
"font. ::"
msgstr ""
"ボールドタグは自身からその閉じタグまでの間をボールドフォントでレンダリングし"
"ます。::"

#: ../../source/text.rst:251
msgid ""
"The color text tag renders the text between itself and its closing tag in "
"the specified color. The color should be in #rgb, #rgba, #rrggbb, or "
"#rrggbbaa format. ::"
msgstr ""
"カラーテキストタグは自身からその閉じタグまでの間を指定された色でレンダリング"
"します。色は #rgb, #rgba, #rrggbb, または #rrggbbaa の形式にしてください。::"

#: ../../source/text.rst:259
msgid ""
"The characters per second tag sets the speed of text display, for text "
"between the tag and its closing tag. If the argument begins with an "
"asterisk, it's taken as a multiplier to the current text speed. Otherwise, "
"the argument gives the speed to show the text at, in characters per "
"second. ::"
msgstr ""
"秒あたり文字数タグは自身からその閉じタグまでの間のテキストにおける、テキスト"
"表示の速度を設定します。引数がアスタリスクで始まっていたら、それが現在のテキ"
"スト速度に乗ぜられます。そうでなければ、テキストを表示する速度を秒あたりの文"
"字数で与えます。 ::"

#: ../../source/text.rst:269
msgid ""
"The font tag renders the text between itself and its closing tag in the "
"specified font. The argument is the filename of the font to use. ::"
msgstr ""
"フォントタグは自身からその閉じタグまでの間を指定されたフォントでレンダリング"
"します。引数は、使用するフォントのファイル名です。 ::"

#: ../../source/text.rst:277
msgid ""
"The italics tag renders the text between itself and its closing tag in "
"italics. ::"
msgstr ""
"イタリックタグは自身からその閉じタグまでの間をイタリック体でレンダリングしま"
"す。 ::"

#: ../../source/text.rst:284
msgid ""
"The image tag is a self-closing tag that inserts an image into the text. The "
"image should be the height of a single line of text. The argument should be "
"either the image filename, or the name of an image defined with the image "
"statement. ::"
msgstr ""
"イメージタグはテキストに画像を挿入する自己終了タグです。画像はテキスト一行の"
"高さであるべきです。引数は画像のファイル名または、image ステートメントで定義"
"された画像でなければなりません。 ::"

#: ../../source/text.rst:293
msgid ""
"The kerning tag is a tag that adjust the kerning of characters between "
"itself and its closing tag. It takes as an argument a floating point number "
"giving the number of pixels of kerning to add to each kerning pair. (The "
"number may be negative to decrease kerning.) ::"
msgstr ""
"カーニングタグは自身からその閉じタグまでの間の文字のカーニングを調整します。"
"これは浮動小数点数の引数を取り、それが各カーニングペアに加えられるカーニング"
"のピクセル数を与えます(負数にしてカーニングを減ずることもできます)。 ::"

#: ../../source/text.rst:303
msgid ""
"The noalt tag prevents text from being spoken by the text-to-speech system. "
"This is often used in conjuction with the alt tag, to provide accessible and "
"visual optiopns  ::"
msgstr ""
"noalt タグはテキストが読み上げ機能で発話されないようにします。これは alt タグ"
"と共に使用され、アクセス可能な視覚的なオプションを提供します。"

#: ../../source/text.rst:311
msgid ""
"The outline text tag changes all the outlines (including drop shadows) to "
"the given color. The color should be in #rgb, #rgba, #rrggbb, or #rrggbbaa "
"format. ::"
msgstr ""
"outlinecolor テキストタグは(影を含む)すべてのアウトラインを指定の色に変更しま"
"す。色は #rgb, #rgba, #rrggbb, または #rrggbbaa の形式にしてください。::"

#: ../../source/text.rst:319
msgid ""
"The plain tag ensures the text does not have, bold, italics, underline, or "
"strikethrough applied. ::"
msgstr ""
"plain タグはテキストを bold, italics, underline, strikethrough でなくしま"
"す。 ::"

#: ../../source/text.rst:326
msgid ""
"The ruby bottom tag marks text between itself and its closing tag as ruby "
"bottom text. See the section on :ref:`Ruby Text <ruby-text>` for more "
"information."
msgstr ""
"ルビ下部タグは自身からその閉じタグまでの間のテキストをルビをふる対象として"
"マークします。詳細は :ref:`ルビテキスト <ruby-text>` の節をご覧ください。"

#: ../../source/text.rst:332
msgid ""
"The ruby top tag marks text between itself and its closing tag as ruby top "
"text. See the section on :ref:`Ruby Text <ruby-text>` for more information."
msgstr ""
"ルビ上部タグは自身からその閉じタグまでの間のテキストをルビの内容としてマーク"
"します。詳細は :ref:`ルビテキスト <ruby-text>` の節をご覧ください。"

#: ../../source/text.rst:338
msgid ""
"The strikethrough tag draws a line through text between itself and its "
"closing tag. ::"
msgstr ""
"打ち消し線タグは自身からその閉じタグまでの間のテキストに打ち消し線を引きま"
"す。 ::"

#: ../../source/text.rst:345
msgid ""
"The size tag changes the size of text between itself and its closing tag. "
"The argument should be an integer, optionally preceded by + or -. If the "
"argument is just an integer, the size is set to that many pixels high. "
"Otherwise, the size is increased or decreased by that amount. ::"
msgstr ""
"サイズタグは自身からその閉じタグまでの間のテキストの大きさを変更します。引数"
"は整数で、+ か - を前置できます。引数が整数だけなら、その大きさに設定されま"
"す。そうでなければ、大きさが指定された分だけ増減されます。 ::"

#: ../../source/text.rst:355
msgid ""
"The space tag is a self-closing tag that inserts horizontal space into a "
"line of text. As an argument, it takes an integer giving the number of "
"pixels of space to add. ::"
msgstr ""
"スペースタグはテキストに水平スペースを挿入する自己終了タグです。引数として追"
"加されるスペースのピクセル数を与える整数を取ります。 ::"

#: ../../source/text.rst:363
msgid ""
"The underline tag underlines the text between itself and its closing tag. ::"
msgstr "下線タグは自身からその閉じタグまでの間のテキストに下線を引きます。 ::"

#: ../../source/text.rst:370
msgid ""
"The vspace tag is a self-closing tag that inserts vertical space between "
"lines of text. As an argument, it takes an integer giving the number of "
"pixels of space to add. ::"
msgstr ""
"スペースタグはテキストの行間に水平スペースを挿入する自己終了タグです。引数と"
"して追加されるスペースのピクセル数を与える整数を取ります。 ::"

#: ../../source/text.rst:378
msgid ""
"Text tags beginning with # are ignored, but can be included to distinguish "
"strings for the purpose of translation. ::"
msgstr ""
"# で始まるテキストタグは無視されますが、翻訳時に文字列を区別するために加えら"
"れます ::"

#: ../../source/text.rst:384
msgid "Dialogue Text Tags"
msgstr "台詞のテキストタグ"

#: ../../source/text.rst:386
msgid "Text tags that only apply to dialogue are:"
msgstr "台詞にのみ適用されるテキストタグです :"

#: ../../source/text.rst:390
msgid ""
"Text after the done tag is not displayed. Why would you want this? It's to "
"allow text to avoid jumping around when :propref:`adjust_spacing` is True."
msgstr ""
"doneタグ後のテキストは表示されません。これにより、 :propref:`adjust_spacing` "
"が True のときでもテキストが飛び回らないようにします。"

#: ../../source/text.rst:394
msgid ""
"When the done tag is present, the line of dialogue is not added to the "
"history buffer. If the nw tag is present, it should be before the done tag.::"
msgstr ""
"done タグがあると、その台詞の行はヒストリーバッファに追加されません。 nw タグ"
"があるなら、 done タグより前にあるべきです。 ::"

#: ../../source/text.rst:404
msgid ""
"If the fast tag is displayed in a line of text, then all text before it is "
"displayed instantly, even in slow text mode. The fast tag is a self-closing "
"tag. ::"
msgstr ""
"テキストの行内に fast タグがあると、遅いテキストモードであっても、その前にあ"
"るテキストがすべて瞬間表示されます。 ::"

#: ../../source/text.rst:414
msgid ""
"The no-wait tag is a self-closing tag that causes the current line of "
"dialogue to automatically dismiss itself once the end of line has been "
"displayed. ::"
msgstr ""
"ノーウェイトタグは現在の行が最後まで表示されきった時点で台詞を自動的に消し去"
"る自己終了タグです。 ::"

#: ../../source/text.rst:422
msgid ""
"The no-wait tag will wait for voice and self-voicing to complete before "
"advancing."
msgstr "no-wait タグはボイスまたはセルフボイスが完了するまで進行を待ちます。"

#: ../../source/text.rst:427
msgid ""
"The paragraph pause tag is a self-closing tag that terminates the current "
"paragraph, and waits for the user to click to continue. If it is given an "
"argument, the argument is interpreted as a number, and the wait "
"automatically ends after that many seconds have passed. ::"
msgstr ""
"段落ポーズタグは自己終了タグです。これは現在の段落を終了し、ユーザーがクリッ"
"クして読み進めるのを待ちます。引数を与えられると、その引数が数字として解釈さ"
"れ、それだけの時間が経過すると自動的に待機が終了します。 ::"

#: ../../source/text.rst:437
msgid ""
"The wait tag is a self-closing tag that waits for the user to click to "
"continue. If it is given an argument, the argument is interpreted as a "
"number, and the wait automatically ends after that many seconds have "
"passed. ::"
msgstr ""
"ウェイトタグはユーザーがクリックして読み進めるまで待機する自己完結タグです。"
"引数を与えられると、その引数は数字と解釈され、待機はその秒数が経過後に自動的"
"に終了します。 ::"

#: ../../source/text.rst:447
msgid ""
"The clear text tag only makes sense on a line by itself in the :ref:`NVL "
"monologue mode <nvl-monologue-mode>`. It does the same thing at the ``nvl "
"clear`` statement without ending the block of text. ::"
msgstr ""
"clear テキストタグは :ref:`NVL モノローグモード <nvl-monologue-mode>` でのみ"
"意味があります。テキストブロックを終了しない他は ``nvl clear`` ステートメント"
"と同じことをします。 ::"

#: ../../source/text.rst:463
msgid ""
"It's also possible to define :ref:`custom text tags <custom-text-tags>` "
"using Python."
msgstr ""
"Pythonを使用して :ref:`カスタムテキストタグ <custom-text-tags>` も定義出来ま"
"す。"

#: ../../source/text.rst:467
msgid "Style Text Tags"
msgstr "スタイルテキストタグ"

#: ../../source/text.rst:469
msgid ""
"Ren'Py supports text tags that access styles. These are text tags where the "
"tag name is empty. In this case, the argument is taken to be the name of a "
"style. For example, the {=mystyle} tag will acces the ``mystyle`` style."
msgstr ""
"Ren'Py はスタイルにアクセス出来るテキストタグもサポートしています。これらは、"
"タグ名が空であるようなテキストタグです。この場合、引数はスタイルの名前として"
"取られます。 例えば {=mystyle} タグは ``mystyle`` スタイルにアクセスします。"

#: ../../source/text.rst:474
msgid ""
"The text between the tag and the corresponding closing tag has the following "
"properties set to those defined in the style:"
msgstr ""
"タグと対応する閉じタグとの間のテキストはそのスタイルで定義された以下のプロパ"
"ティーを持ちます。 :"

#: ../../source/text.rst:477
msgid "antialias"
msgstr "antialias"

#: ../../source/text.rst:478
msgid "font"
msgstr "font"

#: ../../source/text.rst:479
msgid "size"
msgstr "size"

#: ../../source/text.rst:480
msgid "bold"
msgstr "bold"

#: ../../source/text.rst:481
msgid "italic"
msgstr "italic"

#: ../../source/text.rst:482
msgid "underline"
msgstr "underline"

#: ../../source/text.rst:483
msgid "strikethrough"
msgstr "strikethrough"

#: ../../source/text.rst:484
msgid "color"
msgstr "color"

#: ../../source/text.rst:485
msgid "black_color"
msgstr "black_color"

#: ../../source/text.rst:486
msgid "kerning"
msgstr "kerning"

#: ../../source/text.rst:490
msgid "Non-English Languages"
msgstr "英語以外の言語"

#: ../../source/text.rst:492
msgid ""
"The default font for Ren'Py contains characters for English and many other "
"languages. For size reasons, it doesn't contain the characters required to "
"render other languages, including Chinese, Japanese, and Korean. In order to "
"support these languages, a project must first change the fonts it uses."
msgstr ""
"Ren'Py のデフォルトフォントには、英語やその他多くの文字が含まれています。容量"
"の都合から、中国語、日本語、韓国語などに必要な文字は含まれていません。あるプ"
"ロジェクトでこれらの言語をサポートするためには、まず使用するフォントを変更し"
"なければなりません。"

#: ../../source/text.rst:498
msgid ""
"Ren'Py should then support most world languages without further "
"configuration. However, Korean can be written with or without spacing "
"between words. Ren'Py has a special mode to support Korean with spaces, "
"which can be enabled by setting::"
msgstr ""
"これだけの設定で、Ren'Py は世界の殆どの言語をサポートするでしょう。しかし、"
"韓国語は分かち書きをするかしないかを選べます。Ren'Py には韓国語の分かち書きをサ"
"ポートする特別なモードがあり、このコードで有効にできます ::"

#: ../../source/text.rst:505
msgid "This can be changed from the default of \"unicode\" in gui.rpy."
msgstr "これは gui.rpy の \"unicode\" のデフォルトから変更可能です。"

#: ../../source/text.rst:507
msgid ""
"Japanese has multiple rules for line breaking. We recommend starting with "
"\"japanese-normal\", and moving to \"japanese-loose\" or \"japanese-strict\" "
"for more or less break opportunities, respectively. ::"
msgstr ""
"日本語には複数の改行方法があります。「 japanese-normal 」で始めて、改行の機会"
"を増やす、または減らすために、それぞれ 「 japanese-loose 」または「 japanese-"
"strict 」に移ることを勧めます。 ::"

#: ../../source/text.rst:513
msgid ""
"Ideographic languages provide a large number of opportunities for line "
"breaking. To enable a faster but less-accurate line-breaking algorithm, use::"
msgstr ""
"表意文字の言語には改行が多いです。高速だが不正確な改行アルゴリズムを有効にす"
"るには、このコードを使ってください ::"

#: ../../source/text.rst:519
msgid ""
"The faster line-breaking algorithm is not be necessary unless the game is "
"displaying huge amounts of text, such as in NVL-mode."
msgstr ""
"高速な改行アルゴリズムは、NVL モードのような莫大な量のテキストを表示するゲー"
"ムでなければ必要有りません。"

#: ../../source/text.rst:522
msgid ""
"The line breaking algorithms can be further configured using the :func:"
"`renpy.language_tailor` function."
msgstr ""
"改行アルゴリズムは :func:`renpy.language_tailor` 関数を使用して更に設定出来ま"
"す。"

#: ../../source/text.rst:527
msgid "Vertical Text"
msgstr "縦書き"

#: ../../source/text.rst:529
msgid ""
"When the :propref:`vertical` style property is set, Ren'Py will produce "
"vertically oriented text. The text is written top-to-bottom, right-to-left."
msgstr ""
":propref:`vertical` スタイルが適切に設定されていると、Ren'Py は縦書きテキスト"
"を生成します。そのテキストは上から下。右から左に書かれます。"

#: ../../source/text.rst:533
msgid "There are two text tags that interact with vertical text."
msgstr "縦書きテキストに作用する2つのテキストタグがあります。"

#: ../../source/text.rst:537
msgid "Includes horizontally-oriented text inside vertical text."
msgstr "縦書きテキスト内に横書きテキストを含めます。"

#: ../../source/text.rst:541
msgid ""
"Includes vertically-oriented text inside horizontal text. (This will not "
"rotate the text to the vertical orientation.)"
msgstr ""
"横書きテキスト内に縦書きテキストを含めます(これは縦向きの回転を行いませ"
"ん)。"

#: ../../source/text.rst:546
msgid ""
"If the font does not contain vertical text spacing information, Ren'Py will "
"attempt to synthesize this information from horizontal text information. The "
"spacing may not remain constant between Ren'Py releases."
msgstr ""
"フォントが縦書きテキストの情報を含んでいない場合、Ren'Py は横書きテキストの情"
"報から縦書き用の情報を生成しようとします。行間隔は Ren'Py のリリースごとに異"
"なる可能性があります。"

#: ../../source/text.rst:555
msgid "Ruby Text"
msgstr "ルビテキスト"

#: ../../source/text.rst:557
msgid ""
"Ruby text (also known as furigana or interlinear annotations) is a way of "
"placing small text above a character or word. There are several steps "
"required for your game to support ruby text."
msgstr ""
"ルビテキスト (ふりがな表記とも言います) は、文字や単語の上に小さなテキストを"
"配置する方法です。貴方のゲームでルビテキストをサポートするためには必要な手順"
"があります。"

#: ../../source/text.rst:561
msgid ""
"First, you must set up styles for the ruby text. The following style changes "
"are required:"
msgstr ""
"まずは、ルビテキストのスタイルを設定します。以下のスタイル変更が必要です:"

#: ../../source/text.rst:564
msgid ""
"The :propref:`line_leading` property must be used to leave enough vertical "
"space for the ruby text."
msgstr ""
"ルビテキストに十分な垂直スペースを残すために、 :propref:`line_leading` プロパ"
"ティーを使います。"

#: ../../source/text.rst:566
msgid ""
"A new named style must be created. The properties of this style, such as :"
"propref:`size` should be set in a fashion appropriate for ruby text."
msgstr ""
"新しく名前をつけたスタイルを作ります。このスタイルの :propref:`size` などのプ"
"ロパティーは、ルビテキストに合うように設定します。"

#: ../../source/text.rst:569
msgid ""
"The :propref:`yoffset` of the new style should be set, in order to move the "
"ruby text above the baseline."
msgstr ""
"新しいスタイル :propref:`yoffse` を設定し、ルビテキストがベースラインの上に来"
"るようにします。"

#: ../../source/text.rst:571
msgid ""
"The :propref:`ruby_style` field of the text's style should be set to the "
"newly-created style."
msgstr ""
"テキストのスタイルの :propref:`ruby_style` フィールドを、新しく作成されたスタ"
"イルに設定します。"

#: ../../source/text.rst:574 ../../source/text.rst:592
#: ../../source/text.rst:679
msgid "For example::"
msgstr "例 ::"

#: ../../source/text.rst:584
msgid "(Use ``style.style_name`` to refer to a style for this purpose.)"
msgstr "(``style.style_name`` を使用してこの目的でスタイルを参照します)"

#: ../../source/text.rst:586
msgid ""
"Once Ren'Py has been configured, ruby text can be included using the {rt} "
"and {rb} text tags. The {rt} tag is used to mark one or more characters to "
"be displayed as ruby text. If the ruby text is preceded by text enclosed in "
"the {rb} tag, the ruby text is centered over that text. Otherwise, it is "
"centered over the preceding character."
msgstr ""
"Ren'Py の設定が済めば、{rt} と {rb} を使ってルビテキストを使えます。{rt} タグ"
"は、文字がルビテキストとして表示されるようにマークします。ルビテキストの前に "
"{rb} タグで囲まれたテキストがあると、ルビはその上で中央寄せされます。そうでな"
"ければ、直前の一文字の上で中央寄せされます。"

#: ../../source/text.rst:598
msgid ""
"It's the creator's responsibility to ensure that ruby text does not leave "
"the boundaries of the text. It may be necessary to add leading or spaces to "
"the left and right of the text to prevent these errors from occurring."
msgstr ""
"クリエータは、ルビテキストがテキストの境界を超えないようにしなければなりませ"
"ん。そのようなエラーが起こらないように、先頭や左右に文字間のスペースを開ける"
"必要があるかもしれません。"

#: ../../source/text.rst:603
msgid ""
"Ren'Py also supports alternate ruby text, which is a second kind of ruby top "
"text. This is introduced with the {art} text tag (instead of {rt}), and the :"
"propref:`altruby_style` property (instead of :propref:`ruby_style`)."
msgstr ""
"Ren'Py は代替テキストタグもサポートします。これは {rt} の代わりに {art} テキ"
"ストタグで始まり、( :propref:`ruby_style` の代わりに) :propref:"
"`altruby_style` プロパティーを使用します。"

#: ../../source/text.rst:608
msgid "Fonts"
msgstr "フォント"

#: ../../source/text.rst:610
msgid ""
"Ren'Py supports TrueType/OpenType fonts and collections, and Image-Based "
"fonts."
msgstr ""
"Ren'Py は Truetype/OpenType フォントと画像ベースのフォントをサポートしていま"
"す。"

#: ../../source/text.rst:613
msgid ""
"A TrueType or OpenType font is specified by giving the name of the font "
"file. The file must be present in the game directory or one of the archive "
"files."
msgstr ""
"Truetype や OpenType フォントは、フォントファイルの名前を与えて指定できます。"
"ファイルはゲームディレクトリーにあるか、アーカイブファイルのひとつでなければ"
"なりません。"

#: ../../source/text.rst:617
msgid ""
"Ren'Py also supports TrueType/OpenType collections that define more than one "
"font. When accessing a collection, use the 0-based font index, followed by "
"an at-sign and the file name. For example, \"0\\@font.ttc\" is the first "
"font in a collection, \"1\\@font.ttc\" the second, and so on."
msgstr ""
"Ren'Py は、複数のフォントを定義している Truetype コレクションもサポートしてい"
"ます。コレクションにアクセスするときは、0 ベースのフォントインデクス、アット"
"マーク、そしてファイル名の順に使ってください。例えば、「 0@font.ttc 」がコレ"
"クションの最初のフォントなら、次は「 1@font.ttc 」、などとなります。"

#: ../../source/text.rst:624
msgid "Font Replacement"
msgstr "フォントの置き換え"

#: ../../source/text.rst:626
msgid ""
"The :var:`config.font_replacement_map` variable is used to map fonts. The "
"combination of font filename, boldness, and italics is mapped to a similar "
"combination. This allows a font with proper italics to be used instead of "
"the automatically-generated italics."
msgstr ""
":var:`config.font_replacement_map` 変数は、フォントを対応付けるのに使われま"
"す。フォントのファイル名、ボールド体、イタリック体の組合せをべつの同様の組合"
"せと対応付けられます。これにより、自動的に生成されたイタリック体の代わりに適"
"切なイタリック体を使用できます。"

#: ../../source/text.rst:631
msgid ""
"Once such mapping would be to replace the italic version of the Deja Vu Sans "
"font with the official oblique version (You'll need to download the oblique "
"font from the web)::"
msgstr ""
"このようなマッピングによって Deja Vu Sans font のイタリック版を公式の斜体版に"
"置き換えます (web で斜体版をダウンロードする必要があります)。 ::"

#: ../../source/text.rst:638
msgid "This mapping can improve the look of italic text."
msgstr "このマッピングでイタリックテキストの見た目が向上します。"

#: ../../source/text.rst:641
msgid "Image-Based Fonts"
msgstr "画像ベースのフォント"

#: ../../source/text.rst:643
msgid ""
"Image based fonts can be registered by calling one of the following "
"registration functions. Registering an image-based font requires the "
"specification of a name, size, boldness, italicness, and underline. When all "
"of these properties match the registered font, the registered font is used."
msgstr ""
"画像ベースのフォントは、以下の登録関数の何れかを呼び出すことで登録できます。"
"画像ベースのフォントの登録には、名前、大きさ、ボールド体、イタリック体、下線"
"付きを指定する必要があります。これらすべてのプロパティーが登録されたフォント"
"に合致するとき、登録されたフォントが使われます。"

#: ../../source/inc/image_fonts:5
msgid ""
"This registers a BMFont with the given details. Please note that size, bold, "
"italic, and underline are all advisory (used for matching), and do not "
"change the appearance of the font."
msgstr ""
"これは、与えられた詳細の BMFont を登録します。なお、size, bold, italic, およ"
"び underline はすべて (マッチングに使われる) 助言的なものであり、フォントの外"
"見を変えるものではありません。"

#: ../../source/inc/image_fonts:9
msgid ""
"Please see the `BMFont home page <http://www.angelcode.com/products/bmfont/"
">`_ for the tool that creates BMFonts. Ren'Py expects that the filename "
"parameter will be to a file in the BMFont text format, that describes a 32-"
"bit font. The Alpha channel should contain the font information, while the "
"Red, Green, and Blue channels should be set to one. The image files, "
"kerning, and other control information is read out of the BMFont file."
msgstr ""
"BMPFont を作成するツールは `BMFont home page <http://www.angelcode.com/"
"products/bmfont/>`_ をご覧ください。Ren'Py は、filename パラメーターが "
"BMFont テキストフォーマットのファイルであることを期待し、 32-bit フォントを記"
"述するものでなければなりません。アルファチャンネルはフォント情報を含まなけれ"
"ばならず、そこに Red, Green, および Blue チャンネルが設定されます。 画像ファ"
"イル、カーニング、その他の制御情報は BMPFont から読み取られます。"

#: ../../source/inc/image_fonts:16
msgid ""
"We recommend including Latin and General Punctuation as part of your BMFont, "
"to ensure all of the Ren'Py interface can render."
msgstr ""
"Ren'Py の全てのインタフェースが確実にレンダリングできるように、BMFont にはラ"
"テン文字と一般的な句読点を含めることを推奨します。"

#: ../../source/inc/image_fonts:20 ../../source/inc/image_fonts:49
#: ../../source/inc/image_fonts:89
msgid "`name`"
msgstr "`name`"

#: ../../source/inc/image_fonts:20 ../../source/inc/image_fonts:49
#: ../../source/inc/image_fonts:89
msgid "The name of the font being registered, a string."
msgstr "登録するフォントの名前で、文字列です。"

#: ../../source/inc/image_fonts:23 ../../source/inc/image_fonts:52
#: ../../source/inc/image_fonts:92
msgid "`size`"
msgstr "`size`"

#: ../../source/inc/image_fonts:23 ../../source/inc/image_fonts:52
#: ../../source/inc/image_fonts:92
msgid "The size of the font being registered, an integer."
msgstr "登録するフォントのサイズで、整数です。"

#: ../../source/inc/image_fonts:26 ../../source/inc/image_fonts:55
#: ../../source/inc/image_fonts:95
msgid "`bold`"
msgstr "`bold`"

#: ../../source/inc/image_fonts:26 ../../source/inc/image_fonts:55
#: ../../source/inc/image_fonts:95
msgid "The boldness of the font being registered, a boolean."
msgstr "登録するフォントがボールド体であるかどうかの 真偽値です。"

#: ../../source/inc/image_fonts:29 ../../source/inc/image_fonts:58
#: ../../source/inc/image_fonts:98
msgid "`italics`"
msgstr "`italics`"

#: ../../source/inc/image_fonts:29 ../../source/inc/image_fonts:58
#: ../../source/inc/image_fonts:98
msgid "The italicness of the font being registered, a boolean."
msgstr "登録するフォントがイタリック体であるかどうかの 真偽値です。"

#: ../../source/inc/image_fonts:32 ../../source/inc/image_fonts:61
#: ../../source/inc/image_fonts:101
msgid "`underline`"
msgstr "`underline`"

#: ../../source/inc/image_fonts:32 ../../source/inc/image_fonts:61
#: ../../source/inc/image_fonts:101
msgid "An ignored parameter."
msgstr "このパラメーターは無視されます。"

#: ../../source/inc/image_fonts:34 ../../source/inc/image_fonts:65
#: ../../source/inc/image_fonts:104
msgid "`filename`"
msgstr "`filename`"

#: ../../source/inc/image_fonts:35
msgid "The file containing BMFont control information."
msgstr "BMFont 制御情報を含むファイルです。"

#: ../../source/inc/image_fonts:39
msgid ""
"This registers a MudgeFont with the given details. Please note that size, "
"bold, italic, and underline are all advisory (used for matching), and do not "
"change the appearance of the font."
msgstr ""
"これは、指定の書体で MudgeFont を登録します。なお、size, bold, italic, およ"
"び underline はすべて (マッチングに使われる) 助言的なものであり、フォントの外"
"見を変えるものではありません。"

#: ../../source/inc/image_fonts:43
msgid ""
"Please see the `MudgeFont home page <http://www.larryhastings.com/"
"programming/mudgefont/>`_ for the tool that creates MudgeFonts. Ren'Py "
"assumes that character codes found in the MudgeFont xml file are unicode "
"character numbers, and ignores negative character codes."
msgstr ""
"MudgeFonts を作成するツールについては、 `MudgeFont home page <http://www."
"larryhastings.com/programming/mudgefont/>`_ をご覧ください。Ren'Py は、"
"MudgeFont xml ファイルに見つかった文字コードが Unicode 文字番号であると推測"
"し、負の文字コードを無視します。"

#: ../../source/inc/image_fonts:64
msgid ""
"The file containing the MudgeFont image, a string. The image is usually a "
"TGA file, but could be a PNG or other format that Ren'Py supports."
msgstr ""
"MudgeFont イメージを含むファイルで、文字列です。このイメージは通常 TGA ファイ"
"ルですが、PNG その他の Ren'Py がサポートするフォーマットにもできます。"

#: ../../source/inc/image_fonts:68
msgid "`xml`"
msgstr "`xml`"

#: ../../source/inc/image_fonts:68
msgid "The xml file containing information generated by the MudgeFont tool."
msgstr "MudgeFont ツールによって生成された情報を含む xml ファイルです。"

#: ../../source/inc/image_fonts:71 ../../source/inc/image_fonts:107
msgid "`spacewidth`"
msgstr "`spacewidth`"

#: ../../source/inc/image_fonts:71 ../../source/inc/image_fonts:107
msgid "The width of a space character, an integer in pixels."
msgstr "空白文字の幅で、整数のピクセル数です。"

#: ../../source/inc/image_fonts:74 ../../source/inc/image_fonts:117
msgid "`default_kern`"
msgstr "`default_kern`"

#: ../../source/inc/image_fonts:74 ../../source/inc/image_fonts:117
msgid "The default kern spacing between characters, in pixels."
msgstr "文字間のデフォルトのカーニング間隔で、ピクセル数です。"

#: ../../source/inc/image_fonts:77 ../../source/inc/image_fonts:121
msgid "`kerns`"
msgstr "`kerns`"

#: ../../source/inc/image_fonts:77 ../../source/inc/image_fonts:120
msgid ""
"A map from two-character strings to the kern that should be used between "
"those characters."
msgstr ""
"二文字の文字列から、その文字間に使われるカーニング間隔へのマッピングです。"

#: ../../source/inc/image_fonts:82
msgid ""
"This registers an SFont with the given details. Please note that size, bold, "
"italic, and underline are all advisory (used for matching), and do not "
"change the appearance of the font."
msgstr ""
"これは、指定の書体で SFont を登録します。なお、size, bold, italic, および "
"underline はすべて (マッチングに使われる) 助言的なものであり、フォントの外見"
"を変えるものではありません。"

#: ../../source/inc/image_fonts:86
msgid "`More information about SFont. <http://www.linux-games.com/sfont/>`_"
msgstr "`SFont についてのさらなる情報 <http://www.linux-games.com/sfont/>`_"

#: ../../source/inc/image_fonts:104
msgid "The file containing the sfont image, a string."
msgstr "登録するフォントの名前で、文字列です。"

#: ../../source/inc/image_fonts:114
msgid "`baseline`"
msgstr "`baseline`"

#: ../../source/inc/image_fonts:110
msgid ""
"The distance from the top of the font to the baseline (the invisible line "
"letters sit on), an integer in pixels.  If this font is mixed with other "
"fonts, their baselines will be aligned.  Negative values indicate distance "
"from the bottom of the font instead, and ``None`` means the baseline equals "
"the height (i.e., is at the very bottom of the font)."
msgstr ""
"フォントの上端からベースライン (文字を置く不可視のライン) までのピクセルの整"
"数での距離です。このフォントが他のフォントと合成されると、ベースラインで合わ"
"せられます。負の値だと代わりにフォントの下端からの距離になり、 ``None`` だと"
"ベースラインとの距離は高さと同じになります(つまりフォントの最下端になりま"
"す)。"

#: ../../source/inc/image_fonts:129
msgid "`charset`"
msgstr "`charset`"

#: ../../source/inc/image_fonts:124
msgid ""
"The character set of the font. A string containing characters in the order "
"in which they are found in the image. The default character set for a SFont "
"is::"
msgstr ""
"フォントの文字セットです。画像で見つかる順に文字を含む文字列です。SFont用のデ"
"フォルトの文字セットは次の通りです。 ::"

#: ../../source/text.rst:651
msgid ""
"As BMFont is the most complete of the three image font formats Ren'Py "
"supports, it's the one recommended for new projects. An example of BMFont "
"use is::"
msgstr ""
"BMFont は Ren'Py がサポートする三つの画像フォント中では最も完全なものなので、"
"新しいプロジェクトでは推奨されます。 BMFont の使用例は以下の通りです :"

#: ../../source/text.rst:666
msgid "Font Groups"
msgstr "フォントグループ"

#: ../../source/text.rst:668
msgid ""
"When creating a multilingual game, it may not be possible to find a single "
"font that covers every writing system the game use while projecting the the "
"mood the creator intends. To support this, Ren'Py supports font groups that "
"can take characters from two or more fonts and combine them into a single "
"font."
msgstr ""
"マルチ言語のゲームを作成するとき、制作者が意図した雰囲気を保ちつつ、一つの"
"フォントですべてのゲームが使用するシステムをカバーすることは多分不可能です。"
"これをサポートするために、 Ren'Py はフォントグループをサポートして二つ以上の"
"フォントから文字を受け取って一つのフォントに合成出来るようにします。"

#: ../../source/text.rst:674
msgid ""
"To create a font group, create a :class:`FontGroup` object and call the ``."
"add`` method on it once or more. A FontGroup can be used wherever a font "
"name can be used. The add method takes the start and end of a range of "
"Unicode character points, and the first range to cover a point is used."
msgstr ""
"フォントグループを作成するためには、 :class:`FontGroup`  オブジェクトを作成"
"し、その ``.add`` メソッドを一回以上呼び出してください。フォントグループは"
"フォント名が使用可能などこででも使用できます。 add メソッドはユニコードの文字"
"コードの最初と最後を引数にし、ある文字コードをカバーする最初の範囲が使用され"
"ます。"

#: ../../source/inc/font_group:5
msgid "A group of fonts that can be used as a single font."
msgstr "フォントグループは一つのフォントとして使用されます。"

#: ../../source/inc/font_group:9
msgid "Associates a range of characters with a `font`."
msgstr "`font` と文字の範囲を関連づけます。"

#: ../../source/inc/font_group:14
msgid "`start`"
msgstr "`start`"

#: ../../source/inc/font_group:12
msgid ""
"The start of the range. This may be a single-character string, or an integer "
"giving a unicode code point. If start is None, then the font is used as the "
"default."
msgstr ""
"範囲の始まりです。これは一文字の文字列か、ユニコードのコードポイントの整数で"
"す。"

#: ../../source/inc/font_group:18
msgid "`end`"
msgstr "`end`"

#: ../../source/inc/font_group:17
msgid ""
"The end of the range. This may be a single-character string, or an integer "
"giving a unicode code point."
msgstr "範囲の終わりです。これは一文字の文字列か、ユニコードの文字列です。"

#: ../../source/inc/font_group:20
msgid ""
"When multiple .add() calls include the same character, the first call takes "
"precedence."
msgstr ""
"複数回の .add() 呼び出しが同じ文字を含めるとき、最初の呼び出しが優先されま"
"す。"

#: ../../source/inc/font_group:23
msgid ""
"This returns the FontGroup, so that multiple calls to .add() can be chained "
"together."
msgstr ""
"これは FontGroup を返すので、何回も .add() を呼び出して数珠つなぎに出来ます。"

#: ../../source/text.rst:690
msgid "Text Displayables"
msgstr "Text Displayables"

#: ../../source/text.rst:692
msgid ""
"Text can also be used as a :ref:`displayable <displayables>`, which allows "
"you to apply transforms to text, displaying it as if it was an image and "
"moving it around the screen."
msgstr ""
"テキストは :ref:`displayable <displayables>` としても使えます。これによりテキ"
"ストに transform を適用し、画像であるかのように transform して画面上を移動させられます。"

#: ../../source/inc/text:5
msgid ""
"This is a displayable that can be shown with an additional string parameter, "
"which then shows that string as if it was an image. This is usually used as "
"part of the pre-defined ``text`` image."
msgstr ""
"これは追加の文字列パラメーターを表示可能な displayable で、文字列を画像のよう"
"に表示出来ます。これは通常、予め定義された ``text`` 画像の一部で使用されま"
"す。"

#: ../../source/inc/text:9
msgid "For example, one can do::"
msgstr "例 ::"

#: ../../source/inc/text:17
msgid ""
"You can use ParameterizedText directly to define similar images with "
"different style properties. For example, one can write::"
msgstr ""
"ParameterizedText を直接使用して、別のスタイルプロパティーを持つ同じ画像を定"
"義出来ます。例えば以下のように書けます。 ::"

#: ../../source/inc/text:24
msgid "A displayable that displays text on the screen."
msgstr "テキストを画面に表示する displayable です。"

#: ../../source/inc/text:28
msgid "`text`"
msgstr "`text`"

#: ../../source/inc/text:27
msgid ""
"The text to display on the screen. This may be a string, or a list of "
"strings and displayables."
msgstr ""
"画面に表示するテキストです。これは文字列か、文字列や displayable のリストにで"
"きます。"

#: ../../source/inc/text:33
msgid "`slow`"
msgstr "`slow`"

#: ../../source/inc/text:31
msgid ""
"Determines if the text is displayed slowly, being typed out one character at "
"the time. If None, slow text mode is determined by the :propref:`slow_cps` "
"style property. Otherwise, the truth value of this parameter determines if "
"slow text mode is used."
msgstr ""
"テキストの表示を低速にして一文字づつ打ち出されるようにするかを決定します。"
"None であれば、低速テキストモードは :propref:`slow_cps` スタイルプロパティー"
"によって決定されます。そうでなければ、低速テキストモードを使用するかはこのパ"
"ラメーターの真偽値によって決定されます。"

#: ../../source/inc/text:37
msgid "`scope`"
msgstr "`scope`"

#: ../../source/inc/text:36
msgid ""
"If not None, this should be a dictionary that provides an additional scope "
"for text interpolation to occur in."
msgstr ""
"None を設定するか、テキスト置換を行うための追加のスコープを提供する辞書を指定"
"します。"

#: ../../source/inc/text:40
msgid "`substitute`"
msgstr "`substitute`"

#: ../../source/inc/text:40
msgid ""
"If true, text interpolation occurs. If false, it will not occur. If None, "
"they are controlled by :var:`config.new_substitutions`."
msgstr ""
"True なら、テキスト置換が行われます。 False なら行われません。None なら、 :"
"var:`config.new_substitutions` で制御されます。"

#: ../../source/text.rst:700
msgid "Text Utility Functions"
msgstr "テキストユーソリティー関数"

#: ../../source/inc/text_utility:5
msgid ""
"Returns a copy of `s` with the text tags filtered. Exactly one of the "
"`allow` and `deny` keyword arguments must be given."
msgstr ""
"テキストタグがフィルターされた `s`  のコピーを返します。 `allow` と `deny` "
"キーワード引数のどちらかが指定されなければなりません。"

#: ../../source/inc/text_utility:9
msgid "`allow`"
msgstr "`allow`"

#: ../../source/inc/text_utility:9
msgid ""
"A set of tags that are allowed. If a tag is not in this list, it is removed."
msgstr "許可されたタグのセットです。タグがこのリストになければ、除去されます。"

#: ../../source/inc/text_utility:11
msgid "`deny`"
msgstr "`deny`"

#: ../../source/inc/text_utility:12
msgid ""
"A set of tags that are denied. If a tag is not in this list, it is kept in "
"the string."
msgstr ""
"拒否されるタグのセットです。タグがこのリストになければ、文字列に保持されま"
"す。"

#: ../../source/inc/text_utility:16
msgid "Transforms `s`, while leaving text tags and interpolation the same."
msgstr "テキストタグと置換はそのままに、 `s` を変換します。"

#: ../../source/inc/text_utility:21
msgid "`function`"
msgstr "`function`"

#: ../../source/inc/text_utility:19
msgid ""
"A function that is called with strings corresponding to runs of text, and "
"should return a second string that replaces that run of text."
msgstr ""
"実行するテキストに対応する引数で呼び出される関数で、実行するテキストを置き換"
"えた文字列を返すべきです。"

#: ../../source/text.rst:705
msgid "Slow Text Concerns"
msgstr "低速テキストについて"

#: ../../source/text.rst:707
msgid ""
"Ren'Py allows the creator or user to indicate that text should be displayed "
"slowly. In this case, Ren'Py will render the text to a texture, and then "
"draw rectangles from the texture to the screen."
msgstr ""
"Ren'Py では、クリエータやユーザーがテキストの表示を低速にできます。この場合、"
"Ren'Py はテキストをテクスチャにレンダリングし、そのテクスチャからスクリーンに"
"長方形をレンダリングします。"

#: ../../source/text.rst:711
msgid ""
"Unfortunately, this means that it's possible to get rendering artifacts when "
"characters overlap. To minimize these rendering artifacts, ensure that the :"
"propref:`line_leading` and :propref:`line_spacing` properties are large "
"enough that lines do not overlap. If the bottoms of characters on the first "
"line are clipped, especially if line_spacing is negative, consider "
"increasing :propref:`line_overlap_split`."
msgstr ""
"残念ながらこれにより、文字が重複するときにレンダリングが乱れることがありま"
"す。このレンダリングの乱れを最小限にするためには、 :propref:`line_leading` お"
"よび :propref:`line_spacing` を十分大きくとり、行が重複しないようにしてくださ"
"い。最初の行の文字の下部が切り捨てられている、特に line_spacing が負であるな"
"ら、 :propref:`line_overlap_split` を増やすことも考えてください。"

#: ../../source/text.rst:719
msgid ""
"Horizontal artifacts are also possible when characters are kerned together, "
"but these artifacts are less severe, as they exist for only a single frame."
msgstr ""
"字詰めをしても水平方向の乱れ起こりえますが、この乱れはたった 1 フレームだけな"
"のでそれほど深刻ではありません。"

#: ../../source/text.rst:723
msgid ""
"Artifacts aren't a problem for static text, like the text in menus and other "
"parts of the user interface."
msgstr ""
"乱れはメニューやその他のユーザーインターフェースのテキストのような静的なテキ"
"ストでは問題になりません。"

#: ../../source/text.rst:727
msgid "Text Overflow Logging"
msgstr "テキストオーバーフローの記録"

#: ../../source/text.rst:729
msgid ""
"Ren'Py can log cases where text expands outside of the area allocated for "
"it. To enable text overflow logging, the following steps are necessary."
msgstr ""
"Ren'Py はテキストが許可されたエリアからあふれた場合に記録出来ます。テキスト"
"オーバーフローの記録を有効化するためには、次の手順が必要です。"

#: ../../source/text.rst:733
msgid "Set the :var:`config.debug_text_overflow` variable to true."
msgstr ":var:`config.debug_text_overflow` 変数を True にしましょう。"

#: ../../source/text.rst:734
msgid ""
"Set the :propref:`xmaximum` and :propref:`ymaximum` style properties on "
"either the Text displayable, or a container enclosing it."
msgstr ""
":propref:`xmaximum` と :propref:`ymaximum` スタイルをテキストdisplayable かそ"
"れを囲むものに適切に設定しましょう。"

#: ../../source/text.rst:736
msgid "Run the game."
msgstr "ゲームを起動します。"

#: ../../source/text.rst:738
msgid ""
"Whenever text is displayed that overflows the available area, Ren'Py will "
"log an error to the text_overflow.txt file."
msgstr ""
"利用可能なエリアを超えてテキストが表示されると、 Ren'Py は ``text_overflow."
"txt`` ファイルにエラーを記録します。"

#~ msgid ""
#~ "`charset` - The character set of the font. A string containing characters "
#~ "in"
#~ msgstr ""
#~ "`charset` - フォントの文字セットで、その画像で見つかった順に文字を含む文字"
#~ "列です。"

#~ msgid "Hyperlinks are rendered using the ``style.hyperlink_text`` style."
#~ msgstr ""
#~ "ハイパーリンクは ``style.hyperlink_text`` スタイルを使ってレンダリングされ"
#~ "ます。"

#~ msgid ""
#~ "If the argument begins with the text ``\"http://\"``, clicking on it "
#~ "opens the url in a web browser. Otherwise, the argument is interpreted as "
#~ "a label, which is called in a new context. This allows hyperlinks to be "
#~ "used to define terms."
#~ msgstr ""
#~ "引数がテキスト ``\"http://\"`` で始まるなら、それをクリックすると、その "
#~ "url が web ブラウザで開かれます。そうでなければ、引数はラベルとして解釈さ"
#~ "れ、新しいコンテキストで呼び出されます。これにより、ハイパーリンクを用語の"
#~ "定義に使えます。"

#~ msgid ""
#~ "Apart from the change in style, there is no specific behavior when a "
#~ "hyperlink is hovered."
#~ msgstr ""
#~ "ハイパーリンク上にマウスが入っても、スタイルが変わる以外に特別な動作はあり"
#~ "ません。"

#~ msgid "User-Defined Text Tags"
#~ msgstr "ユーザー定義のテキストタグ"

#~ msgid ""
#~ "The file containing the MudgeFont image, a string. The image is usually a "
#~ "TGA file, but could be a PNG or other format that Ren'PY supports."
#~ msgstr ""
#~ "MudgeFont イメージを含むファイルで、文字列です。このイメージは通常 TGA "
#~ "ファイルですが、PNG その他の Ren'Py がサポートするフォーマットにもできま"
#~ "す。"

#~ msgid ""
#~ "Unfortunately, this means that it's possible to get rendering artifacts "
#~ "when characters overlap. To minimize these rendering artifacts, ensure "
#~ "that the :propref:`line_leading` and :propref:`line_spacing` properties "
#~ "are large enough that lines do not overlap. If the bottoms of characters "
#~ "on the first line are clipped, espeically if line_spacing is negative, "
#~ "consider increasing :propref:`line_overlap_split`."
#~ msgstr ""
#~ "残念ながらこれにより、文字が重複するときにレンダリングが乱れることがありま"
#~ "す。このレンダリングの乱れを最小限にするためには、 :propref:"
#~ "`line_leading` および :propref:`line_spacing` を十分大きくとり、行が重複し"
#~ "ないようにしてください。最初の行の文字の下部が切り捨てられている、特に "
#~ "line_spacing が負であるなら、 :propref:`line_overlap_split` を増やすことも"
#~ "考えてください。"
