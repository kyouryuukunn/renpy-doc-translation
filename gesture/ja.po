# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 6.99.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-20 21:53+0900\n"
"PO-Revision-Date: 2023-04-29 15:28+0900\n"
"Last-Translator: akakyouryuu <akakyouryuu@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.0.1\n"

#: ../../source/gesture.rst:4
msgid "Gestures"
msgstr "ジェスチャー"

#: ../../source/gesture.rst:6
msgid ""
"Ren'Py includes a gesture recognizer that is enabled when a touchscreen is "
"used. This makes it possible for gestures to functions that would otherwise "
"require a keyboard and mouse."
msgstr ""
"タッチスクリーン使用時に有効化されるジェスチャー認識機能が Ren'Py にはありま"
"す。これにより、キーボードやマウスを必要とする機能をジェスチャーにより利用出"
"来ます。"

#: ../../source/gesture.rst:10
msgid ""
"The gesture recognizer first classifies swipes into 8 compass directions, \"n"
"\", \"ne\", \"e\", \"se\", \"s\", \"sw\", \"w\", \"nw\". North is considered "
"to be towards the top of the screen. It then concatenates the swipes into a "
"string using the \"_\" as a delimiter. For example, if the player swipes "
"down and to the right, the string \"s_e\" will be produced."
msgstr ""
"ジェスチャー認識は先ず、スワイプを 8 つのコンパスの方向 \"n\", \"ne\", \"e"
"\", \"se\", \"s\", \"sw\", \"w\", \"nw\" に分類します。 North は画面の上方向"
"と考えられます。次に複数のスワイプを \"_\" を区切り文字として 1 つの文字列に"
"連結します。例えばプレイヤーが下、右とスワイプすると、 文字列 \"s_e\" が生成"
"されます。"

#: ../../source/gesture.rst:16
msgid ""
"Assuming :var:`config.dispatch_gesture` is None, what happens next is that "
"gesture is mapped to an event using :var:`config.gestures`. If it is found, "
"it is queued using :func:`renpy.queue_event`. Otherwise, the gesture is "
"ignored."
msgstr ""
":var:`config.dispatch_gesture` が None なら、次にジェスチャーは :var:`config."
"gestures` を使用してイベントに割り振られます。見付かれば :func:`renpy."
"queue_event` を使用してキューされます。そうでなければジェスチャーは無視されま"
"す。"

#: ../../source/gesture.rst:21
msgid ""
"Gesture recognition is only enabled when \"touch\" is present in :var:"
"`config.variants`, which should be the case when running on a touchscreen "
"device."
msgstr ""
"ジェスチャー認識は  :var:`config.variants` に \"touch\" があるときのみ有効化"
"され、それはタッチスクリーンのデバイスで使用されている場合のはずです。"

#: ../../source/gesture.rst:27
msgid "A map from gesture to the event activated by the gesture."
msgstr ""
"ジェスチャーからそのジェスチャーによりアクティベートされるイベントへのマップ"
"です。"

#: ../../source/gesture.rst:31
msgid ""
"The function that is used to dispatch gestures. This function is passed the "
"raw gesture string. If it returns non-None, the interaction ends."
msgstr ""
"ジェスチャーを処理するために使用される関数です。この関数には生のジェスチャー"
"文字列が渡されます。 None 以外を返すとインタラクションは終了します。"

#~ msgid ""
#~ "Cancels the current gesture, preventing the gesture from being "
#~ "recognized. This should be called by displayables that have gesture-like "
#~ "behavior."
#~ msgstr ""
#~ "現在のジェスチャーをキャンセルし、ジェスチャーが認識されるのを防ぎます。こ"
#~ "れはジェスチャーと似た振舞をする displayable から呼び出されるべきです。"
