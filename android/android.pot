# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2020, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 7.4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-25 18:44+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/android.rst:8
msgid "Android"
msgstr ""

#: ../../source/android.rst:10
msgid "Ren'Py support devices running the Android operating system, such as smartphones and tablets. While these devices do not support 100% of Ren'Py's functionality, with minimal modification visual novels can be packaged and ported to these devices."
msgstr ""

#: ../../source/android.rst:15
msgid "RAPT – the Ren'Py Android Packaging Tool – is a program, downloaded separately from Ren'Py, that creates an Android package for testing or release purposes."
msgstr ""

#: ../../source/android.rst:19
msgid "Required Language"
msgstr ""

#: ../../source/android.rst:21
msgid "Some of the libraries used by RAPT are licensed under the terms of the GNU Lesser/Library General Public License. You'll need to comply with the terms of that license to distribute Ren'Py. We believe including the following language in your app's description will suffice, but check with a lawyer to be sure."
msgstr ""

#: ../../source/android.rst:27
msgid "This program contains free software licensed under a number of licenses, including the GNU Lesser General Public License. A complete list of software is available at https://www.renpy.org/l/license/."
msgstr ""

#: ../../source/android.rst:33
msgid "User Instructions"
msgstr ""

#: ../../source/android.rst:35
msgid "When a Ren'Py game has been launched on Android, the following keybindings work:"
msgstr ""

#: ../../source/android.rst:42
msgid "`Home`"
msgstr ""

#: ../../source/android.rst:39
msgid "Returns to the Android home screen, suspending the Ren'Py game. As part of the suspend process, Ren'Py will automatically save the game. If necessary, the save will be automatically loaded when the user returns to the game."
msgstr ""

#: ../../source/android.rst:45
msgid "`Menu`"
msgstr ""

#: ../../source/android.rst:45
msgid "Brings up the in-game menu, and returns to the game."
msgstr ""

#: ../../source/android.rst:48
msgid "`Back`"
msgstr ""

#: ../../source/android.rst:48
msgid "Rolls back."
msgstr ""

#: ../../source/android.rst:52
msgid "`Volume Up`, `Volume Down`"
msgstr ""

#: ../../source/android.rst:51
msgid "Controls Android's media volume."
msgstr ""

#: ../../source/android.rst:57
msgid "Platform Differences"
msgstr ""

#: ../../source/android.rst:59
msgid "There are many important differences between the touch-based Android platform and the mouse-based platforms that Ren'Py supports. Changes due to the Android software and hardware are:"
msgstr ""

#: ../../source/android.rst:63
msgid "The touchscreen is treated as if it was a mouse. However, it will only produce mouse events when the user is actively touching the screen."
msgstr ""

#: ../../source/android.rst:67
msgid "Movie playback in fullscreen mode can only use media formats that are supported by Android devices. See `this page <http://developer.android.com/guide/appendix/media-formats.html>`_ for a list of supported video formats."
msgstr ""

#: ../../source/android.rst:72
msgid "Text input (such as :func:`renpy.input`) is limited to the input methods that do not require completions to work. (Western languages probably work, while other languages might not.)"
msgstr ""

#: ../../source/android.rst:76
msgid "In addition, there are a few changes that may be necessary due to human factors:"
msgstr ""

#: ../../source/android.rst:79
msgid "Since Android smartphones can be smaller than a computer monitor, it may be necessary to increase text size."
msgstr ""

#: ../../source/android.rst:82
msgid "Since touch input is less accurate than mouse input, touch-based buttons need to be larger than mouse-based ones."
msgstr ""

#: ../../source/android.rst:85
msgid "To help you adapt to these differences, Ren'Py for Android automatically selects screen variants based on the device's screen size and capabilities. See :ref:`screen-variants` for more information."
msgstr ""

#: ../../source/android.rst:92
msgid "Testing and Emulation"
msgstr ""

#: ../../source/android.rst:94
msgid "For testing purposes, Ren'Py supports three Android emulation modes. These are accessed from the Android screen of the launcher."
msgstr ""

#: ../../source/android.rst:100
msgid "Phone"
msgstr ""

#: ../../source/android.rst:98
msgid "This mode emulates an Android phone. Touch emulation is performed using the mouse, but only when the mouse button is held down. Escape is mapped to the menu button, and Page Up is mapped to the back button."
msgstr ""

#: ../../source/android.rst:105
msgid "Tablet"
msgstr ""

#: ../../source/android.rst:103
msgid "This mode emulates an Android tablet. Touch emulation is performed using the mouse, but only when the mouse button is held down. Escape is mapped to the menu button, and Page Up is mapped to the back button."
msgstr ""

#: ../../source/android.rst:114
msgid "Television / OUYA"
msgstr ""

#: ../../source/android.rst:108
msgid "This mode emulates a television-based Android device, such as the OUYA console. The keyboard is mapped to remote or controller input, with the arrow keys providing navigation. Select is enter, Escape is menu, and page-up is back."
msgstr ""

#: ../../source/android.rst:113
msgid "This mode also displays an overlay showing the Television-unsafe area. Content in the Television-unsafe area may not display on all Televisions."
msgstr ""

#: ../../source/android.rst:116
msgid "While these emulators can be used to quickly test your project, it's best to also test on real hardware. The emulators do not deal with some human-factors issues, like the size of a user's fingers."
msgstr ""

#: ../../source/android.rst:126
msgid "Building Android Applications"
msgstr ""

#: ../../source/android.rst:129
msgid "Ren'Py contains tools that help you take a packaging-centric approach to Android game development. In this approach, you will use a PC to build an Android package and upload it to your device. You can then run the game like any Android application. When it works correctly, you can upload the package you make to Google Play and other app stores."
msgstr ""

#: ../../source/android.rst:136
msgid "Building an Android application consists of four steps:"
msgstr ""

#: ../../source/android.rst:138
msgid "Download and install the Java Development Kit and Android USB Drivers (scroll down for links)."
msgstr ""

#: ../../source/android.rst:141
msgid "Use the launcher to install the Android SDK and create keys."
msgstr ""

#: ../../source/android.rst:143
msgid "Use the launcher to configure the Android build."
msgstr ""

#: ../../source/android.rst:145
msgid "Use the launcher to build the Android application."
msgstr ""

#: ../../source/android.rst:147
msgid "Once you've finished these steps, you'll have a runnable Android package. You'll only need to run step 3 when you decide to make changes to your game's configuration or when configuring a new game entirely; you'll run step 4 most often, whenever you need to make a new build of your game."
msgstr ""

#: ../../source/android.rst:154
msgid "Step 1: Installing the Dependencies"
msgstr ""

#: ../../source/android.rst:156
msgid "There are three things you may need to manually download and install before you can build packages:"
msgstr ""

#: ../../source/android.rst:159
msgid "**Java Development Kit.** The Java Development Kit (JDK) contains several tools that are used by |PGS4A|, including the tools used to generate keys and sign packages. It can be downloaded from:"
msgstr ""

#: ../../source/android.rst:164
msgid "http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html"
msgstr ""

#: ../../source/android.rst:166
msgid "You'll need version 8 of the JDK."
msgstr ""

#: ../../source/android.rst:168
msgid "Please note that the developer-focused JDK is different from the user-focused JRE, and you'll need the JDK to create Android packages."
msgstr ""

#: ../../source/android.rst:172
msgid "**Android Device.** You'll also want to set your device up for development. You'll want to enable developer mode on your device, and set up your computer for Android development. Instructions on how to set up your computer can be found at:"
msgstr ""

#: ../../source/android.rst:177
msgid "https://developer.android.com/studio/run/device"
msgstr ""

#: ../../source/android.rst:179
msgid "You can also run your app in an x86_64 image on the Android emulator (note that x86 is not supported). Setting the emulator up is outside of the scope of this document."
msgstr ""

#: ../../source/android.rst:185
msgid "Step 2: Set up the Android SDK and Development Environment"
msgstr ""

#: ../../source/android.rst:187
msgid "The next step is to set up the Android SDK and the rest of your development environment. This step will:"
msgstr ""

#: ../../source/android.rst:190
msgid "Check that the JDK is installed properly."
msgstr ""

#: ../../source/android.rst:191
msgid "Install the Android SDK."
msgstr ""

#: ../../source/android.rst:192
msgid "Use the Android SDK to install the appropriate development packages."
msgstr ""

#: ../../source/android.rst:194
msgid "Create a signing key that will be used to sign packages that are placed on the market (android.keystore: this will be generated in the RAPT directory)."
msgstr ""

#: ../../source/android.rst:198
msgid "This step requires Internet access."
msgstr ""

#: ../../source/android.rst:200
msgid "To perform this step, choose \"Install SDK & Create Keys\" from the Android screen in the Ren'Py Launcher."
msgstr ""

#: ../../source/android.rst:203
msgid "RAPT will report on what it's doing. It will also prompt you with warnings about licenses, and ask if you want it to generate a key."
msgstr ""

#: ../../source/android.rst:208
msgid "The key generated by RAPT is created with a standard passphrase. You should really use keytool to generate your own signing keys."
msgstr ""

#: ../../source/android.rst:212
msgid "http://docs.oracle.com/javase/7/docs/technotes/tools/windows/keytool.html"
msgstr ""

#: ../../source/android.rst:214
msgid "At the very least, you should keep the android.keystore file in a safe place. You should also back it up, because without the key, you won't be able to upload the generated applications."
msgstr ""

#: ../../source/android.rst:218
msgid "If you don't want to download the SDK each time, you can create a file named sdk.txt containing a single line that is the path to the already-installed SDK."
msgstr ""

#: ../../source/android.rst:223
msgid "Step 3: Configure Your Game"
msgstr ""

#: ../../source/android.rst:225
msgid "Before building a package, you must give Ren'Py some information about the Android build of your game. To do this, choose \"Configure\" from the Android screen of the Ren'Py launcher."
msgstr ""

#: ../../source/android.rst:229
msgid "If you need to change the information – for example, if you release a new version of your game – you can re-run the configure command. Your previous choices will be remembered."
msgstr ""

#: ../../source/android.rst:234
msgid "Step 4: Build and Install the Package"
msgstr ""

#: ../../source/android.rst:236
msgid "Finally, you can build and install the package. This is done with a by connecting your Android device to your computer, and choosing \"Build & Install\" from the Android screen of the Ren'Py launcher. (The first time you install, your Android device may ask you to authorize your computer to install applications.)"
msgstr ""

#: ../../source/android.rst:242
msgid "If you'd rather copy the game's apk file to your Android device manually, choose \"Build Package\" from the Android screen of the Ren'Py launcher. Then navigate to the 'bin' directory underneath the RAPT directory and copy the appropriate file to your Android device. You will then need to find the .apk file in your Android device using a file manager application and open it to install the game."
msgstr ""

#: ../../source/android.rst:249
msgid "Ren'Py allows you to select between two release modes, Debug and Release. The debug mode is useful for testing, as it allows you to easily use Android studio to view the logs or files on the device. Release produces a version of the app suitable to upload to the various stores."
msgstr ""

#: ../../source/android.rst:254
msgid "You will need to uninstall the app when switching between debug and release builds."
msgstr ""

#: ../../source/android.rst:259
msgid "Icon and Presplash Images"
msgstr ""

#: ../../source/android.rst:262
msgid "Icon"
msgstr ""

#: ../../source/android.rst:264
msgid "Ren'Py will create an icon from your app from two files in the game's base directory:"
msgstr ""

#: ../../source/android.rst:270
msgid "android-icon_foreground.png"
msgstr ""

#: ../../source/android.rst:268
msgid "The foreground layer of the icon. This should be 432x432 pixels and transparent."
msgstr ""

#: ../../source/android.rst:274
msgid "android-icon_background.png"
msgstr ""

#: ../../source/android.rst:273
msgid "The background layer of the icon. This should be 432x432 pixels and opaque."
msgstr ""

#: ../../source/android.rst:276
msgid "Android adaptive icons work by masking the two layers of the icon to an area that is at least 132x132 pixels, in the center. The area outside of this safe space may be shown, but it might be masked out, too. Bleeding outside of the safe area is encouraged. The two layers might move a little relative to each other when the icon is dragged around."
msgstr ""

#: ../../source/android.rst:282
msgid "For more information about adaptive icons, please check out:"
msgstr ""

#: ../../source/android.rst:284
msgid "https://medium.com/google-design/designing-adaptive-icons-515af294c783"
msgstr ""

#: ../../source/android.rst:286
msgid "Note that 1dp corresponds to 4 actual pixels."
msgstr ""

#: ../../source/android.rst:288
msgid "When generating the application, Ren'Py will convert these files to an appropriate size for each device, and will generate static icons for devices that do not support adaptive icons."
msgstr ""

#: ../../source/android.rst:294
msgid "Presplash"
msgstr ""

#: ../../source/android.rst:296
msgid "The presplash is shown before Ren'Py fully loads, before the main splashscreen starts. It's especially important on Android, as the first time Ren'Py runs it will unpack supporting files, which make take some time."
msgstr ""

#: ../../source/android.rst:303
msgid "android-presplash.jpg"
msgstr ""

#: ../../source/android.rst:301
msgid "The image that's used when the app is loading. This should be surrounded by a monocolored border. That border is expanded to fill the screen."
msgstr ""

#: ../../source/android.rst:308
msgid "Google Play Expansion APKs"
msgstr ""

#: ../../source/android.rst:310
msgid "Ren'Py optionally supports the use of expansion APKs when used on a device supporting Google Play. Expansion APKs allow Google Play to host games larger than 50MB in size. Please see:"
msgstr ""

#: ../../source/android.rst:314
msgid "http://developer.android.com/google/play/expansion-files.html"
msgstr ""

#: ../../source/android.rst:316
msgid "For information about expansion APKs work. Right now, only the main expansion APK is supported, giving a 2GB limit. When an Expansion APK is created, all game files will be placed in the expansion APK. Ren'Py will transparently use these files."
msgstr ""

#: ../../source/android.rst:321
msgid "To configure your game to use Expansion APKs, you'll need to set two variables:"
msgstr ""

#: ../../source/android.rst:326
msgid "This is the Google Play license key associated with your application, which can be found on the \"Services & APIs\" tab associated with your application in the Google Play developer console. (Be sure to remove all spaces and newlines from the key.)"
msgstr ""

#: ../../source/android.rst:333
msgid "This should be a tuple of 20 bytes, where each byte is represented as an integer between -128 and 127. This is used to encrypt license information returned from Google Play."
msgstr ""

#: ../../source/android.rst:337
msgid "A valid (if insecure) value for this variable is::"
msgstr ""

#: ../../source/android.rst:341
msgid "RAPT will place the expansion APK on the device when installing the APK package on the device. The expansion APK will be an .obb file found inside the bin subdirectory of the RAPT directory."
msgstr ""

#: ../../source/android.rst:345
msgid "In normal operation, Google Play will place the expansion APK on the device automatically when the user installs the application."
msgstr ""

