# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2020, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 7.3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-18 23:55+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/menus.rst:9
msgid "In-Game Menus"
msgstr ""

#: ../../source/menus.rst:11
msgid "In many visual novels, the player is asked to make choices that control the outcome of the story. The Ren'Py language contains a ``menu`` statement that makes it easy to present choices to the user."
msgstr ""

#: ../../source/menus.rst:15
msgid "Here's an example of a ``menu`` statement::"
msgstr ""

#: ../../source/menus.rst:35
msgid "The ``menu`` statement begins with the keyword ``menu``. This may be followed by a label name, in which case it's equivalent to preceding the menu with that label. For example::"
msgstr ""

#: ../../source/menus.rst:42
msgid "The menu statement is followed by an indented block. This block may contain a :ref:`say statement <say-statement>`, and must contain at least one menu choice. If the say statement is present, it is displayed on the screen at the same time as the menu."
msgstr ""

#: ../../source/menus.rst:47
msgid "**Menu Choices.** A menu choice is an option the user can select from the in-game menu. A menu choice begins with a string. The string may be followed by an if-clause, which makes the choice conditional. The menu choice ends with a colon, and must be followed by a block of Ren'Py statements."
msgstr ""

#: ../../source/menus.rst:54
msgid "When the choice is selected, the block of statements is run. If execution reaches the end of the block, it continues with the statement after the end of the menu statement."
msgstr ""

#: ../../source/menus.rst:58
msgid "An if-clause consists of the keyword ``if``, followed by a Python expression. The menu choice is only displayed if the expression is true. In the following menu::"
msgstr ""

#: ../../source/menus.rst:70
msgid "The third choice will only be presented if the ``drank_tea`` variable is true. (However if, the :var:`config.menu_include_disabled` variable is set to True, it will be shown as a disabled button.)"
msgstr ""

#: ../../source/menus.rst:78
msgid "Menu Set"
msgstr ""

#: ../../source/menus.rst:80
msgid "A menu can take a set clause, on a line by itself. If present, only items with captions that are not in the set are displayed as part of the menu. When a choice is selected, the caption of that choice can be added to the set."
msgstr ""

#: ../../source/menus.rst:85
msgid "As with all menus, if no choices are available it advances to the statement after the menu."
msgstr ""

#: ../../source/menus.rst:88
msgid "For historical reasons, the set can be either a set object or a list."
msgstr ""

#: ../../source/menus.rst:117
msgid "Menu Arguments"
msgstr ""

#: ../../source/menus.rst:119
msgid "It's possible to pass arguments to the menu itself, and to the individual choices in a menu. To pass arguments to the menu, add them to the menu line, after the optional name, and immediately before the colon. To pass arguments to a menu choice, put them after the menu string and before the ``if`` keyword or colon. ::"
msgstr ""

#: ../../source/menus.rst:137
msgid "Menu arguments passed to the menu itself become arguments to the screen, except the `screen` argument which selects the screen, and the `nvl` argument that selects the :ref:`NVL-mode menu <nvl-mode-menu>`. There is also a special keyword `_mode` which will set the mode of this interaction, by default \"menu\". The arguments to the choices become arguments to the items passed to the menu screen."
msgstr ""

#: ../../source/menus.rst:144
msgid "See the documentation for :ref:`the choice screen <choice-screen>` and :var:`config.menu_arguments_callback`."
msgstr ""

