# Japanese translation for renpy-doc
# Copyright (c) 2013 Rosetta Contributors and Canonical Ltd 2013
# This file is distributed under the same license as the renpy-doc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: renpy-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-08 00:04+0900\n"
"PO-Revision-Date: 2021-08-08 15:31+0900\n"
"Last-Translator: kyouryuukunn <akakyouryuu@gmail.com>\n"
"Language-Team: Japanese <ja@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2015-04-04 05:44+0000\n"
"X-Generator: Poedit 2.2.4\n"

#: ../../source/udd.rst:3
msgid "This page has been :ref:`moved <cdd>`."
msgstr "このページは :ref:`<cdd>` に移動されました。"

#~ msgid "Creator-Defined Displayables"
#~ msgstr "ユーザー定義 Displayable"

#~ msgid ""
#~ "The most complex, but most powerful, way of customizing Ren'Py's behavior "
#~ "is to use a creator-defined displayable. A creator-defined displayable is "
#~ "allowed to take arbitrary pygame events. It can also render other "
#~ "displayables, and place them at arbitrary locations on the screen. This "
#~ "makes it suitable for creating 2D mini-games that cannot be expressed "
#~ "with the tools Ren'Py gives you. (But see also the section :ref:`sprites "
#~ "<sprites>`, which describes a higher-level way of accomplishing many of "
#~ "the same things.)"
#~ msgstr ""
#~ "Ren'Py の動作をカスタマイズする最も複雑だが最もパワフルな方法はユーザー定"
#~ "義 displayable の使用です。ユーザー定義 displayable は任意の pygame イベン"
#~ "トを受け取れ、他の displayable をレンダリングして画面の任意の位置にそれら"
#~ "を配置できます。 このため Ren'Py が提供するツールでは表現できない 2D ゲー"
#~ "ムを作成するのに最適です( :ref:`sprites <sprites>` の章も見てください。大"
#~ "量の同一displayableを扱う高度な方法が述べられています)。"

#~ msgid ""
#~ "Creator-defined displayables are programmed entirely in Python, and we "
#~ "encourage you to have a reasonable degree of skill at object-oriented "
#~ "Python programming before you begin creating one."
#~ msgstr ""
#~ "ユーザー定義 displayable はすべて Python でプログラムされるため、この作成"
#~ "を始める前にある程度のオブジェクト指向 Python プログラミングのスキルを獲得"
#~ "することを勧めます。"

#~ msgid "Example"
#~ msgstr "例"

#~ msgid ""
#~ "Here's an example of a creator-defined displayable. This displayable "
#~ "changes renders its child with an alpha that is determined by the "
#~ "distance of the mouse pointer from the center of the child. ::"
#~ msgstr ""
#~ "これはユーザー定義 displayable の例です。この displayable は、その中心から"
#~ "のマウスポインターとの距離により決まる alpha 値で、その子のレンダリングを"
#~ "変更します。 ::"

#~ msgid ""
#~ "To use the creator-defined displayable, we can create an instance of it, "
#~ "and add that instance to the screen. ::"
#~ msgstr ""
#~ "ユーザー定義 displayable を使用するためにそのインスタンスを作成し、それを"
#~ "スクリーンに追加できます。 ::"

#~ msgid "renpy.Displayable"
#~ msgstr "renpy.Displayable"

#~ msgid ""
#~ "A creator-defined displayable is created by subclassing the renpy."
#~ "Displayable class. A creator-defined displayable must override the render "
#~ "method, and may override other methods as well."
#~ msgstr ""
#~ "ユーザー定義 displayable は renpy.Displayable のサブクラスとして作成されま"
#~ "す。ユーザー定義 displayable では render メソッドと多分その他のメソッドも"
#~ "同様に上書きしなければなりません。"

#~ msgid ""
#~ "A displayable object must be pickleable, which means it may not contain "
#~ "references to objects that cannot be pickled. Most notably, Render "
#~ "objects cannot be stored in a creator-defined displayable."
#~ msgstr ""
#~ "displayable オブジェクトは pickle 可能でなければならず、これはつまり "
#~ "pickle できないオブジェクトへの参照を含んではいけないということです。 特"
#~ "に Render オブジェクトはユーザー定義 displayable に保存できません。"

#~ msgid ""
#~ "Since we expect you to override the methods of the displayable class, "
#~ "we'll present them with the `self` parameter."
#~ msgstr ""
#~ "displayable クラスのメソッド上書きをして欲しいので、 `self` 引数付きで表示"
#~ "します。"

#~ msgid "Base class for creator-defined displayables."
#~ msgstr "ユーザー定義 displayable の基本クラスです。"

#~ msgid ""
#~ "A subclass may override the constructor, perhaps adding new parameters. "
#~ "If it does, it should pass all unknown keyword arguments to the renpy."
#~ "Displayable constructor, with the call::"
#~ msgstr ""
#~ "サブクラスはコンストラクターを上書きし、新しい引数を追加するかもしれませ"
#~ "ん。その場合、以下のようなコードを使用して、すべての未知のキーワード引数を"
#~ "renpy.Displayable のコンストラクターに渡すべきです。 ::"

#~ msgid ""
#~ "Subclasses must override this, to return a :class:`renpy.Render` object. "
#~ "The render object determines what, if anything, is shown on the screen."
#~ msgstr ""
#~ "サブクラスはこれを上書きして :class:`renpy.Render` オブジェクトを返さなけ"
#~ "ればなりません。 render オブジェクトは画面に何が表示されるかを決定します。"

#~ msgid "`width`, `height`"
#~ msgstr "`width`, `height`"

#~ msgid "The amount of space available to this displayable, in pixels."
#~ msgstr "この displayable が利用できるピクセル数での空間です。"

#~ msgid "`st`"
#~ msgstr "`st`"

#~ msgid ""
#~ "A float, the shown timebase, in seconds. The shown timebase begins when "
#~ "this displayable is first shown on the screen."
#~ msgstr ""
#~ "出現時間軸での秒数を表す小数です。出現時間軸はこの displayable が最初に画"
#~ "面に表示されると開始します。"

#~ msgid "`at`"
#~ msgstr "`at`"

#~ msgid ""
#~ "A float, the animation timebase, in seconds. The animation timebase "
#~ "begins when an image with the same tag was shown, without being hidden. "
#~ "(When the displayable is shown without a tag, this is the same as the "
#~ "shown timebase.)"
#~ msgstr ""
#~ "アニメーション時間軸の秒数を表す小数です。アニメーション時間軸は同じタグを"
#~ "持つ画像が hide されていない状態で表示されると開始します ( displayable が"
#~ "タグなしで表示されるとこれは出現時間軸と同じです )。"

#~ msgid ""
#~ "The render method is called when the displayable is first shown. It can "
#~ "be called again if :func:`renpy.redraw` is called on this object."
#~ msgstr ""
#~ "render メソッドは displayable が最初に表示されるときに呼び出されます。これ"
#~ "はこのオブジェクトの :func:`renpy.redraw` が呼び出されると、もう一度呼び出"
#~ "されます。"

#~ msgid ""
#~ "The event method is called to pass a pygame event to the creator-defined "
#~ "displayable. If the event method returns a value other than None, that "
#~ "value is returned as the result of the interaction."
#~ msgstr ""
#~ "event メソッドを呼び出して pygame イベントをユーザー定義 displayable に渡"
#~ "します。event メソッドが None 以外の値を返すとその値はインタラクションの結"
#~ "果として返されます。"

#~ msgid ""
#~ "The event method exists on other displayables, allowing the creator-"
#~ "defined displayable to pass on the event."
#~ msgstr ""
#~ "event メソッドは他の displayable にも存在し、ユーザー定義 displayable にそ"
#~ "のイベントを渡せるようにします。"

#~ msgid "`ev`"
#~ msgstr "`ev`"

#~ msgid "An `event object <http://www.pygame.org/docs/ref/event.html>`_"
#~ msgstr "`event オブジェクト <http://www.pygame.org/docs/ref/event.html>`_"

#~ msgid "`x`, `y`"
#~ msgstr "`x`, `y`"

#~ msgid ""
#~ "The x and y coordinates of the event, relative to the upper-left corner "
#~ "of the displayable. These should be used in preference to position "
#~ "information found in the pygame event objects."
#~ msgstr ""
#~ "displayable の左上に対するイベントの x,y 座標です。これらは pygame イベン"
#~ "トオブジェクトで見つけられる位置情報より優先して使用されるはずです。"

#~ msgid "A float, the shown timebase, in seconds."
#~ msgstr "出現時間軸の秒数"

#~ msgid ""
#~ "An event is generated at the start of each interaction, and :func:`renpy."
#~ "timeout` can be used to cause another event to occur."
#~ msgstr ""
#~ "event は各インタラクションの開始で生成され、 :func:`renpy.timeout` を使用"
#~ "してもう一つのイベント発生させられます。"

#~ msgid ""
#~ "This method is called at the start of each interaction. It can be used to "
#~ "trigger a redraw, and probably should be used to trigger a redraw if the "
#~ "object participates in rollback."
#~ msgstr ""
#~ "このメソッドは各インタラクションの開始で呼び出されます。再描画を起こすため"
#~ "に使用でき、またオブジェクトがロールバックに参加するなら、再描画に使用する"
#~ "べきです。"

#~ msgid ""
#~ "If the displayable has child displayables, this method should be "
#~ "overridden to return a list of those displayables. This ensures that the "
#~ "per_interact methods of those displayables are called, and also allows "
#~ "images used by those displayables to be predicted."
#~ msgstr ""
#~ "displayable に子の displayable があれば、このメソッドはそれらの "
#~ "displayable のリストを返すように上書きされるべきです。これはそれらの "
#~ "displayable の per_interact メソッドが呼び出されることを保証し、それらの "
#~ "displayable に使用される画像が予測されるようにもします。"

#~ msgid "renpy.Render"
#~ msgstr "renpy.Render"

#~ msgid ""
#~ "Creator-defined displayables work with renpy.Render objects. Render "
#~ "objects are returned by calling the :func:`renpy.render` function on a "
#~ "displayable. A creator-defined displayable should create a Render object "
#~ "by calling :class:`renpy.Render` from its render method."
#~ msgstr ""
#~ "ユーザー定義 displayable は renpy.Render オブジェクトとともに働きます。 "
#~ "Render オブジェクトはdisplayableの :func:`renpy.render` 関数を呼び出すと返"
#~ "されます。ユーザー定義 displayable はその render メソッドから :class:"
#~ "`renpy.Render` を呼び出して Render オブジェクトを作成するべきです。"

#~ msgid ""
#~ "Since the render object isn't intended to be subclassed, we will omit the "
#~ "implicit `self` parameter."
#~ msgstr ""
#~ "render オブジェクトはサブクラスにすることが意図されていないので、 `self` "
#~ "引数を省略します。"

#~ msgid "Creates a new Render object."
#~ msgstr "新しい Render オブジェクトを作成します。"

#~ msgid "The width and height of the render object, in pixels."
#~ msgstr "ピクセル数での Render オブジェクトの幅と高さです。"

#~ msgid "Draws another render object into this render object."
#~ msgstr ""
#~ "この Render オブジェクトにもう一つの Render オブジェクトを描写します。"

#~ msgid "`source`"
#~ msgstr "`source`"

#~ msgid "The render object to draw."
#~ msgstr "描画する Render オブジェクト"

#~ msgid "`pos`"
#~ msgstr "`pos`"

#~ msgid ""
#~ "The location to draw into. This is an (x, y) tuple with the coordinates "
#~ "being pixels relative to the upper-left corner of the target render."
#~ msgstr ""
#~ "描画する座標。これは対象の Render の左上端に対するピクセル数の座標 (x,y) "
#~ "のタプルです。"

#~ msgid "`main`"
#~ msgstr "`main`"

#~ msgid ""
#~ "A keyword-only parameter. If true, `source` will be displayed in the "
#~ "style inspector."
#~ msgstr ""
#~ "キーワード引数です。 True なら `source` がスタイルインスペクターに表示され"
#~ "ます。"

#~ msgid ""
#~ "Renders `d` and places it into the rectangle defined by the `x`, `y`, "
#~ "`width`, and `height`, using Ren'Py's standard placement algorithm."
#~ msgstr ""
#~ "`d` をレンダリングし、 `x`, `y`, `width`, `height` で定義された長方形に配"
#~ "置します。"

#~ msgid "`x`, `y`, `width`, `height`"
#~ msgstr "`x`, `y`, `width`, `height`"

#~ msgid ""
#~ "The rectangle to place in. If `width` or `height`, when None, are the "
#~ "width and height of this render, respectively."
#~ msgstr ""
#~ "配置する長方形です。 `width` や `height` が None でなければ、それぞれこの "
#~ "render の幅と高さになります。"

#~ msgid "`st`, `at`"
#~ msgstr "`st`, `at`"

#~ msgid ""
#~ "The times passed to Render. If None, defaults to the times passed to the "
#~ "render method calling this method."
#~ msgstr ""
#~ "render に渡される時間です。 None なら、このメソッドを呼び出している "
#~ "render メソッドに渡される時間になります。"

#~ msgid "`render`"
#~ msgstr "`render`"

#~ msgid "If not None, this is used instead of rendering `d`."
#~ msgstr "None でなければこれが `d` の代わりに使用されます。"

#~ msgid "As for .blit()."
#~ msgstr ".blit() と同様です。"

#~ msgid ""
#~ "Returns a canvas object. A canvas object has methods corresponding to the "
#~ "`pygame.draw <http://www.pygame.org/docs/ref/draw.html>`_ functions, with "
#~ "the first parameter (the surface) omitted."
#~ msgstr ""
#~ "canvas オブジェクトを返します。 canvas オブジェクトは `pygame.draw "
#~ "<http://www.pygame.org/docs/ref/draw.html>`_ の関数に対応し、最初の引数 "
#~ "( surface ) を省略したメソッドを持ちます。"

#~ msgid ""
#~ "Canvas objects also have a get_surface() method that returns the pygame "
#~ "Surface underlying the canvas."
#~ msgstr ""
#~ "Canvas オブジェクトはその canvas 下にある pygame Surface を返す "
#~ "get_surface() メソッドも持ちます。"

#~ msgid "Returns a (width, height) tuple giving the size of this render."
#~ msgstr "この Render のサイズを与える (width, height) のタプルを返します。"

#~ msgid "Returns a render consisting of a rectangle cut out of this render."
#~ msgstr "この Render を長方形に切り取って構成される Render を返します。"

#~ msgid "`rect`"
#~ msgstr "`rect`"

#~ msgid "A (x, y, width, height) tuple."
#~ msgstr "(x, y, width, height) のタプル"

#~ msgid ""
#~ "Sets the zoom level of the children of this displayable in the "
#~ "horitzontal and vertical axes. Only the children of the displayable are "
#~ "zoomed – the width, height, and blit coordinates are not zoomed."
#~ msgstr ""
#~ "この displayable の子の水平、垂直方向のズームレベルを設定します。"
#~ "displayable の子のみが拡大され、幅、高さ、 blit 座標は拡大されません。"

#~ msgid ""
#~ "The following attributes and methods are only used when model-based "
#~ "rendering is enabled:"
#~ msgstr ""
#~ "以下の属性とメソッドはモデルベースのレンダリング有効時のみ使用可能です。"

#~ msgid "This field enables model-based rendering for this Render. If true:"
#~ msgstr ""
#~ "このフィールドはこのレンダーに対してモデルベースのレンダリングを有効にしま"
#~ "す。 :"

#~ msgid "If set to True:"
#~ msgstr "True なら :"

#~ msgid "All of the children of this displayable are rendered to textures."
#~ msgstr "この Displayable のすべての子がテクスチャにレンダリングされます。"

#~ msgid ""
#~ "A mesh the size of the first child is assocated with this displayable."
#~ msgstr "mesh はこの Displayable の最初の子のサイズです。"

#~ msgid ""
#~ "A model is created with the mesh, shaders, uniforms, and properties "
#~ "associated with this Render."
#~ msgstr ""
#~ "モデルはこのレンダーの mesh, shader, uniform, properties で作成されます。"

#~ msgid "The model will then be drawn in a single operation."
#~ msgstr "モデル1つのオペレーションで描画されます。"

#~ msgid ""
#~ "This causes the shader part `shader` to be used when this Render or its "
#~ "children are drawn. The part should be a string, or can be a string "
#~ "beginning with \"-\" to prevent a shader from being drawn."
#~ msgstr ""
#~ "これにより、 shader は `shader` を分離してこのレンダーやその子が描画される"
#~ "ときに使用されるようにします。文字列またはshaderで描画されないようにする "
#~ "\"-\" で始まる文字列です。"

#~ msgid ""
#~ "Causes the uniform `name` to have `value` when this Render or its "
#~ "children are drawn."
#~ msgstr ""
#~ "このレンダーやその子が描画されるときに uniform `name` を `value` にしま"
#~ "す。"

#~ msgid ""
#~ "Causes the GL property `name` to have `value` when this Render or one of "
#~ "its children are drawn."
#~ msgstr ""
#~ "このレンダーまたはその子の1つが描画されるときに GL プロパティー `name` を "
#~ "`value` にします。"

#~ msgid "Utility Functions"
#~ msgstr "ユーティリティー関数"

#~ msgid "These function manage the rendering process."
#~ msgstr "これらの関数はレンダリングプロセスを管理します。"

#~ msgid ""
#~ "This takes `d`, which may be a displayable object or a string. If it's a "
#~ "string, it converts that string into a displayable using the usual rules."
#~ msgstr ""
#~ "これは displayable オブジェクトか文字列の `d` を取ります。文字列なら通常の"
#~ "ルールに基づきその文字列を displayable に変換します。"

#~ msgid ""
#~ "If `value` is not None, immediately ends the current interaction, causing "
#~ "the interaction to return `value`. If `value` is None, does nothing."
#~ msgstr ""
#~ "`value` が None でなければ、即座に現在のインタラクションが終了し、インタラ"
#~ "クションは `value` を返します。 `value` が None の場合は何もしません。"

#~ msgid ""
#~ "This can be called from inside the render and event methods of a creator-"
#~ "defined displayable."
#~ msgstr ""
#~ "これは Render 内部とユーザー定義 displayable の event メソッドから呼び出さ"
#~ "れ得ます。"

#~ msgid ""
#~ "Loads the image manipulator `im` using the image cache, and returns a "
#~ "render."
#~ msgstr ""
#~ "画像キャッシュを使用して画像マニピュレータ `im` をロードし、 render を返し"
#~ "ます。"

#~ msgid ""
#~ "Loads the image manipulator `im` using the image cache, and returns a "
#~ "pygame Surface."
#~ msgstr ""
#~ "画像キャッシュを使用して画像マニピュレータ `im` をロードし、 pygame "
#~ "Surface を返します。"

#~ msgid "Returns true if the pygame event `ev` matches `keysym`"
#~ msgstr ""
#~ "pygame のイベント `ev` が `keysym` にマッチするなら True を返します。"

#~ msgid "`keysym`"
#~ msgstr "`keysym`"

#~ msgid "One of:"
#~ msgstr "以下のうちの 1 つです :"

#~ msgid "The name of a keybinding in :var:`config.keymap`."
#~ msgstr ":var:`config.keymap` のキーバインディングの名前"

#~ msgid "A keysym, as documented in the :ref:`keymap` section."
#~ msgstr ":ref:`keymap` に記載されているキーシンボル"

#~ msgid "A list containing one or more keysyms."
#~ msgstr "1 つ以上のキーシンボルのリスト"

#~ msgid ""
#~ "Causes a displayable to be rendered, and a renpy.Render object to be "
#~ "returned."
#~ msgstr ""
#~ "displayable がレンダリングされ、 renpy.Render オブジェクトが返されます。"

#~ msgid "`d`"
#~ msgstr "`d`"

#~ msgid "The displayable to render."
#~ msgstr "レンダリングする displayable"

#~ msgid "The width and height available for the displayable to render into."
#~ msgstr "displayable がレンダリング可能な幅と高さです。"

#~ msgid "The shown and animation timebases."
#~ msgstr "出現時刻とアニメーション時間軸です。"

#~ msgid ""
#~ "Renders returned by this object may be cached, and should not be modified "
#~ "once they have been retrieved."
#~ msgstr ""
#~ "このオブジェクトから返された Render はキャッシュされるので、一度取り出され"
#~ "た Render は修正すべきではありません。"

#~ msgid ""
#~ "Causes an event to be generated before `seconds` seconds have elapsed. "
#~ "This ensures that the event method of a user-defined displayable will be "
#~ "called."
#~ msgstr ""
#~ "event が `seconds` 秒が経過後に生成されます。これは ユーザー定義 "
#~ "displayable の event メソッドが呼び出されることを保証します。"

#~ msgid ""
#~ "Causes the displayable `d` to be redrawn after `when` seconds have "
#~ "elapsed."
#~ msgstr "displayable `d` が `when` 秒経過後に再描画されます。"
