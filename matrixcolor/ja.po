# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2020, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 7.4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-07-13 22:31+0900\n"
"PO-Revision-Date: 2023-07-14 23:48+0900\n"
"Last-Translator: kyouryuukunn <akakyouryuu@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.2.4\n"

#: ../../source/matrixcolor.rst:2
msgid "Matrixcolor"
msgstr "Matrixcolor"

#: ../../source/matrixcolor.rst:4
msgid ""
"Ren'Py supports recoloring images using the :tpref:`matrixcolor` transform "
"property. This property can take either a :class:`Matrix` or a ColorMatrix "
"object."
msgstr ""
"Ren'Py は :tpref:`matrixcolor` transform プロパティーを使用した画像の再着色を"
"サポートします。このプロパティーは :class:`Matrix` または ColorMatrix オブ"
"ジェクトを受け取ります。"

#: ../../source/matrixcolor.rst:9
msgid "Premultiplied Alpha Color"
msgstr "Premultiplied Alpha Color"

#: ../../source/matrixcolor.rst:11
msgid ""
"When an image is loaded, Ren'Py decompresses the image, and then copies it "
"to the GPU of your computer or mobile device. As part of the copying, each "
"of the four color channels (red, green, blue, and alpha - with alpha "
"representing opacity) is scaled to a number between 0.0 and 1.0. In this "
"system, 1.0 represents the full level of a color or fully opaque, while 0.0 "
"represents the absence of the color or the pixel being fully transparent."
msgstr ""
"画像がロードされると、Ren'Pyは画像を解凍し、コンピュータまたはモバイルデバイ"
"スのGPU にコピーします。コピーの一環として4つのカラーチャンネル(red, green, "
"blue そして不透明度を表現する alpha)のそれぞれは0.0から1.0にスケールされま"
"す。このシステムでは1.0が色または透明度の最大値で、0.0はその色がないまたはピ"
"クセルが完全に透明であることを表します。"

#: ../../source/matrixcolor.rst:18
msgid ""
"Ren'Py doesn't stop there, though. Once the values have been scaled, the "
"red, green, and blue channels are multiplied by the alpha channel. This "
"means that an opaque white pixel will have the value (1.0, 1.0, 1.0, 1.0), a "
"50% transparent red pixel will have the value (0.5, 0.0, 0.0, 0.5), and a "
"transparent pixel will have the value (0.0, 0.0, 0.0, 0.0)."
msgstr ""
"Ren'Py はそれだけにとどまりません。一旦その値がスケールされると、 red, "
"green, blue チャンネルはアルファチャンネルで乗算されます。つまり不透明な白い"
"ピクセルは (1.0, 1.0, 1.0, 1.0) となり、50%の透明度の赤いピクセルは(0.5, "
"0.0, 0.0, 0.5)になり、透明なピクセルは(0.0, 0.0, 0.0, 0.0)になります。"

#: ../../source/matrixcolor.rst:24
msgid ""
"Premultiplied alph allows Ren'Py to scale images up and down without causing "
"dark artifacts that come from representing colors more directly. Scaling "
"images is similar to averaging two pixels together. Without premultiplied "
"alpha, we might have a solid white pixel and a transparent pixel - (1.0, "
"1.0, 1.0, 1.0) and (0.0, 0.0, 0.0, 0.0), respectively. Average those "
"together gets (0.5, 0.5, 0.5, 0.5). But that's not right - averaging solid "
"white and transparent black should get 50% opaque white, not 50% opaque gray."
msgstr ""
"この方法は Ren'Pyが色をより直接扱うと発生する暗さなしで画像をスケーリングでき"
"るようにします。画像のスケーリングは2つのピクセルの平均化と同じです。直接扱う"
"と、それぞれ (1.0, 1.0, 1.0, 1.0) と (0.0, 0.0, 0.0, 0.0) である完全な白と透"
"明なピクセルはそれらを平均するとき (0.5, 0.5, 0.5, 0.5) となります。しかしこ"
"れは正しくありません。完全な白と透明の平均は不透明な灰色ではなく 50% 不透明な"
"白になるはずです。"

#: ../../source/matrixcolor.rst:33
msgid ""
"In the premultiplied alpha system, the starting value is the same, and so is "
"the result - except now, (0.5, 0.5, 0.5, 0.5) has been pre-defined to be 50% "
"opaque white. By storing colors in this way, Ren'Py can draw them to the "
"screen correctly, and not get weird artifacts when scaling."
msgstr ""
"Premultiplied alphaシステムでは、最初の値は同じで、結果も同じですが、(0.5, "
"0.5, 0.5, 0.5)が50%不透明度の白としてあらかじめ定義されています。色をこの方法"
"で貯めることで Ren'Py はそれらをスクリーンに正確に描画でき、スケーリング時の"
"ひどい副作用がありません。"

#: ../../source/matrixcolor.rst:39
msgid "Using a Matrix to Change Colors"
msgstr "マトリックスを使用した色の変更"

#: ../../source/matrixcolor.rst:41
msgid ""
"The :class:`Matrix` objects used to change colors can consist of 16 numbers, "
"which can in turn be arranged into a 4x4 grid. Here's a way of doing this "
"that assigns a letter to each number::"
msgstr ""
"色の変更に使用される :class:`Matrix` オブジェクトは16の数値で構成され、4x4の"
"グリッドで表せます。文字を各数値に代入してこれを作成方法をここに表します。 ::"

#: ../../source/matrixcolor.rst:50
msgid ""
"While they're represented as letters here, realize these are really numbers, "
"either given directly or computed."
msgstr ""
"ここでは文字で表現されていますが、これらは実際には直接与えられるまたは算出さ"
"れる数値です。"

#: ../../source/matrixcolor.rst:53
msgid ""
"These values are applied to the red (R), green (G), blue (B), and alpha (A) "
"channels of the original color to make a new color, (R', G', B', A'). The "
"formulas to do this are:"
msgstr ""
"これらの値はオリジナルカラーのred (R), green (G), blue (B), alpha (A) チャン"
"ネルに適用され、新しいカラー (R', G', B', A') を作ります。これは次の形式で実"
"行されます。:"

#: ../../source/matrixcolor.rst:64
msgid ""
"While this might seem complex, there's a pretty simple structure to it - the "
"first row creates the new red channel, the second the new green channel and "
"so on. So if we wanted to make a matrix that swapped red and green for some "
"reason, we'd write::"
msgstr ""
"これは複雑に見えますが、かなり単純な構成で、最初の行が新しい red チャンネルを"
"作成し、2番目が新しい green チャンネルと続きます。赤と緑を入れ替えるマトリッ"
"クスを作りたいなら、次のように記述します。 ::"

#: ../../source/matrixcolor.rst:75
msgid ""
"While this is a simple example, there is a lot of color theory that can be "
"expressed in this way. Matrices can be combined by multiplying them "
"together, and when that happens the matrices are combined right to left."
msgstr ""
"これは単純な式ですが、このように表現されるたくさんの色の理論があります。マト"
"リックスは複数組み合わせでき、そのときは右から左に組み合わされます。"

#: ../../source/matrixcolor.rst:82
msgid "ColorMatrix"
msgstr "ColorMatrix"

#: ../../source/matrixcolor.rst:84
msgid ""
"While Matrix objects are suitable for static color changes, they're not "
"useful for animating color changes. It's also useful to have a way of taking "
"common matrices and encapsulating them in a way that allows the matrix to be "
"parameterized."
msgstr ""
"Matrix オブジェクトは静的なカラーチャンネルに最適ですが、アニメーションする色"
"の変化には不向きです。共通のマトリックスを受け取ってマトリックスの引数が媒介"
"変数になるようにカプセル化する方法があると便利です。"

#: ../../source/matrixcolor.rst:89
msgid ""
"The ColorMatrix is a base class that is is extended by a number of Matrix-"
"creating classes. Instances of ColorMatrix are called by Ren'Py, and return "
"Matrixes. ColorMatrix is well integrated with ATL, allowing for matrixcolor "
"animations. ::"
msgstr ""
"ColorMatrix はMatrix を作成するいくつかのクラスによって拡張される基本クラスで"
"す。 ColorMatrix のインスタンスは Ren'Py に呼び出され、 Matrix を返します。 "
"ColorMatrix はよく ATL に組み込まれ、matrixcolor アニメーションを可能にしま"
"す。 ::"

#: ../../source/matrixcolor.rst:100
msgid ""
"The ColorMatrix class can be subclassed, with the subclasses replacing its "
"``__call__`` method. This method takes:"
msgstr ""
"ColorMatrix クラスはその ``__call__`` メソッドを置き換えるサブクラスによって"
"継承されえます。このメソッドは次を引数に受け取ります。 :"

#: ../../source/matrixcolor.rst:103
msgid ""
"An old object to interpolate off of. This object may be of any class, and "
"may be None if no old object exists."
msgstr ""
"補間する以前のオブジェクトです。このオブジェクトは任意のクラスである可能性が"
"あり、以前のオブジェクトがなければ None です。"

#: ../../source/matrixcolor.rst:105
msgid ""
"A value between 0.0 and 1.0, representing the point to interpolate. 0.0 is "
"entirely the old object, and 1.0 is entirely the new object."
msgstr ""
"0.0 から 1.0の間の値で、補間の進行度を表します。0.0が完全な old オブジェクト"
"で、1.0が完全な new オブジェクトです。"

#: ../../source/matrixcolor.rst:108
msgid "And should return a :class:`Matrix`."
msgstr ":class:`Matrix` を返します。"

#: ../../source/matrixcolor.rst:110
msgid ""
"As an example of a ColorMatrix, here is the implementation of Ren'Py's "
"TintMatrix class. ::"
msgstr ""
"ColorMatrix の例として、こちらが Ren'Py の TintMatrix クラスの実装となりま"
"す。 ::"

#: ../../source/matrixcolor.rst:156
msgid "Structural Similarity"
msgstr "構造的同一性"

#: ../../source/matrixcolor.rst:158
msgid ""
"In ATL, interpolating a the :tpref:`matrixcolor` property requires the use "
"of ColorMatrixes that have structural similarity. That means the same types "
"of ColorMatrix, multiplied together in the same order."
msgstr ""
"ATLでは :tpref:`matrixcolor` プロパティーを補間するために、構造的に同一の "
"ColorMatrix を使用する必要があります。つまり、同じタイプの ColorMatrix を、同"
"じ順番で掛け合わせるということです。"

#: ../../source/matrixcolor.rst:162
msgid ""
"As an example, the following will interpolate from normal to a desaturated "
"blue tint, and then return to normal. ::"
msgstr ""
"例として、以下は、通常状態から脱色された青味に、その後通常状態に戻るという補"
"間です。 ::"

#: ../../source/matrixcolor.rst:170
msgid ""
"While the first setting of matrixcolor may seem unnecessary, it is required "
"to provide a base for the first linear interpolation. If it wasn't present, "
"that interpolation would be skipped."
msgstr ""
"matrixcolor の最初の設定は不要に思えるかもしれませんが、最初の線形補間に開始"
"状態を提供するために必要です。もしこれがなければ、その補間はスキップされま"
"す。"

#: ../../source/matrixcolor.rst:176
msgid "Built-In ColorMatrix Subclasses"
msgstr "組み込み ColorMatrix サブクラス"

#: ../../source/matrixcolor.rst:178
msgid ""
"The following is the list of ColorMatrix subclasses that are built into "
"Ren'Py."
msgstr "以下は Ren'Py に組み込まれた ColorMatrix サブクラスのリストです。"

#: ../../source/inc/colormatrix:5 ../../source/inc/colormatrix:32
msgid ""
"A ColorMatrix that can be used with :tpref:`matrixcolor` to change the "
"brightness of an image, while leaving the Alpha channel alone."
msgstr ""
":tpref:`matrixcolor` でアルファチャンネルを変えずに画像の明るさを変えるのに使"
"用される ColorMatrix です。"

#: ../../source/inc/colormatrix:11 ../../source/inc/colormatrix:37
#: ../../source/inc/colormatrix:57 ../../source/inc/colormatrix:66
#: ../../source/inc/colormatrix:77
msgid "`value`"
msgstr "`value`"

#: ../../source/inc/colormatrix:10
msgid ""
"The amount of change in image brightness. This should be a number between -1 "
"and 1, with -1 the darkest possible image and 1 the brightest."
msgstr ""
"画像明度の変更量です。これは-1 から 1 の間の数値で、－1は最も暗く、1が最も明"
"るいです。"

#: ../../source/inc/colormatrix:16
msgid ""
"A ColorMatrix that can be used with :tpref:`matrixcolor` to colorize black "
"and white displayables. It uses the color of each pixel in the black and "
"white to interpolate between the black color and the white color."
msgstr ""
":tpref:`matrixcolor` で黒と白のDisplayableを着色するのに使用される "
"ColorMatrix です。黒と白の各ピクセルの色を使用してblack_colorとwhite_colorの"
"間で補間します。"

#: ../../source/inc/colormatrix:21
msgid "The alpha channel is not touched."
msgstr "アルファチャンネルには触れられません。"

#: ../../source/inc/colormatrix:23
msgid ""
"This is inteded for use with a black and white image (or one that has been "
"desaturated with :func:`SaturationMatrix`), and will yield strange results "
"when used with images that are not black and white."
msgstr ""
"これは白黒画像( または :func:`SaturationMatrix` で彩度をなくされたもの) )への"
"使用を意図しており、白黒以外の画像に使用するとかなり奇妙な結果になるでしょ"
"う。"

#: ../../source/inc/colormatrix:27
msgid "`black_color`, `white_color`"
msgstr "`black_color`, `white_color`"

#: ../../source/inc/colormatrix:28
msgid "The colors used in the interpolation."
msgstr "補間に使用される色です。"

#: ../../source/inc/colormatrix:37
msgid ""
"The contrast value. Values between 0.0 and 1.0 decrease the contrast, while "
"values above 1.0 increase the contrast."
msgstr ""
"コントラストの値で、 0.0 から 1.0 の間でコントラストを再生成し、 1.0 以上では"
"コントラストを増加させます。"

#: ../../source/inc/colormatrix:42
msgid ""
"A ColorMatrix that can be used with :tpref:`matrixcolor` to rotate the hue "
"by `value` degrees. While `value` can be any number, positive or negative, "
"360 degrees makes a complete rotation. The alpha channel is left alone."
msgstr ""
":tpref:`matrixcolor` で色調を `value` 度回転するのに使用される ColorMatrix で"
"す。 `value` は正負どの数でもよく、360度で1周します。アルファチャンネルはその"
"ままです。"

#: ../../source/inc/colormatrix:48
msgid ""
"A ColorMatrix that can be used with :tpref:`matrixcolor` that does not "
"change the color or alpha of what is supplied to it."
msgstr ""
":tpref:`matrixcolor` で色もアルファチャンネルも変更しないのに使用される "
"ColorMatrix です。"

#: ../../source/inc/colormatrix:53
msgid ""
"A ColorMatrix that can be used with :tpref:`matrixcolor` to invert each of "
"the color channels. The alpha channel is left alone."
msgstr ""
":tpref:`matrixcolor` で各カラーチャンネルを反転するのに使用される "
"ColorMatrix です。アルファチャンネルはそのままです。"

#: ../../source/inc/colormatrix:57
msgid ""
"The amount to inverty by. 0.0 is not inverted, 1.0 is fully inverted. Used "
"to animate inversion."
msgstr ""
"反転する量で、 0.0 は反転せず、 1.0 は完全に反転します。反転のアニメーション"
"に使用されます。"

#: ../../source/inc/colormatrix:62
msgid ""
"A ColorMatrix that can be used with :tpref:`matrixcolor` to change the "
"opacity of an image, while leaving color channels alone."
msgstr ""
":tpref:`matrixcolor` で画像の不透明度を変更するのに使用される ColorMatrix で"
"す。カラーチャンネルはそのままです。"

#: ../../source/inc/colormatrix:66
msgid ""
"The amount the alpha channel should be multiplied by, a number between 0.0 "
"and 1.0."
msgstr "アルファチャンネルに乗算される量で、0.0 から 1.0 の数値です。"

#: ../../source/inc/colormatrix:71
msgid ""
"A ColorMatrix that can be used with :tpref:`matrixcolor` that alters the "
"saturation of an image, while leaving the alpha channel alone."
msgstr ""
":tpref:`matrixcolor` で画像の彩度を変えるのに使用される ColorMatrix です。ア"
"ルファチャンネルはそのままです。"

#: ../../source/inc/colormatrix:76
msgid ""
"The amount of saturation in the resulting image. 1.0 is the unaltered image, "
"while 0.0 is grayscale."
msgstr "彩度量で、 1.0 は画像が変化せず、 0.0 はグレースケールになります。"

#: ../../source/inc/colormatrix:85
msgid "`desat`"
msgstr "`desat`"

#: ../../source/inc/colormatrix:80
msgid ""
"This is a 3-element tuple that controls how much of the red, green, and blue "
"channels will be placed into all three channels of a fully desaturated "
"image. The default is based on the constants used for the luminance channel "
"of an NTSC television signal. Since the human eye is mostly sensitive to "
"green, more of the green channel is kept then the other two channels."
msgstr ""
"これは 3 要素のタプルで、red、green、blueチャンネルが完全に彩度を無くした 3 "
"つのチャンネルにどれだけ残るかを制御します。デフォルトはNTSC テレビジョン信号"
"の輝度チャンネルに使われる定数に基づきます。人間の目は緑に最も敏感なので、緑"
"チャンネルは他の 2 つのチャンネルよりも残されます。"

#: ../../source/inc/colormatrix:90
msgid ""
"A function that returns a ColorMatrix that can be used with :tpref:"
"`matrixcolor` to sepia-tone a displayable. This is the equivalent of::"
msgstr ""
":tpref:`matrixcolor` でDisplayableをセピア調にするのに使用される ColorMatrix "
"です。これは次と等価です。"

#: ../../source/inc/colormatrix:97
msgid ""
"A ColorMatrix can be used with :tpref:`matrixcolor` to tint an image, while "
"leaving the alpha channel alone."
msgstr ""
":tpref:`matrixcolor` で画像を染めるのに使用される ColorMatrix です。アルファ"
"チャンネルはそのままです。"

#: ../../source/inc/colormatrix:102
msgid "`color`"
msgstr "`color`"

#: ../../source/inc/colormatrix:101
msgid ""
"The color that the matrix will tint things to. This is passed to :func:"
"`Color`, and so may be anything that Color supports as its first argument."
msgstr ""
"matrix が染める色です。これは :func:`Color` に渡されるので Color が第一引数に"
"サポートするすべてであり得ます。"

#~ msgid "Is ignored."
#~ msgstr "無視されます。"

#~ msgid "show eileen happy at center:"
#~ msgstr "show eileen happy at center:"

#~ msgid ""
#~ "matrixcolor TintMatrix(\"#ffffff\") * SaturationMatrix(1.0) linear 2.0 "
#~ "matrixcolor TintMatrix(\"#ccccff\") * SaturationMatrix(0.0) linear 2.0 "
#~ "matrixcolor TintMatrix(\"#ffffff\") * SaturationMatrix(1.0)"
#~ msgstr ""
#~ "matrixcolor TintMatrix(\"#ffffff\") * SaturationMatrix(1.0) linear 2.0 "
#~ "matrixcolor TintMatrix(\"#ccccff\") * SaturationMatrix(0.0) linear 2.0 "
#~ "matrixcolor TintMatrix(\"#ffffff\") * SaturationMatrix(1.0)"
