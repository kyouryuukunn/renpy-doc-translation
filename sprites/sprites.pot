# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2020, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 7.4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-30 21:47+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/sprites.rst:7
msgid "Sprites"
msgstr ""

#: ../../source/sprites.rst:9
msgid "To support the display of a large number of images at once, Ren'Py supports a sprite system. This system allows one to create sprites, where each sprite contains a displayable. The sprites can then have their location on the screen and vertical ordering changed."
msgstr ""

#: ../../source/sprites.rst:14
msgid "If one ignores performance, the sprite system is conceptually similar to a :func:`Fixed` wrapping :func:`Transform`\\s. Sprites are much faster than transforms, but also less flexible. The big performance improvement of sprites is that each Displayable is rendered only once per frame, even if that Displayable is used by many sprites. The limitation is that Sprites only allow one to change their xoffset and yoffset, rather than the many properties that a Transform has."
msgstr ""

#: ../../source/sprites.rst:22
msgid "To use the sprite system, create a SpriteManager object, and then call its create method to create new particles. As necessary, update the xoffset, yoffset, and zorder fields of each sprite to move it around the screen. By supplying `update` and `event` arguments to SpriteManager, you can have the sprites change over time, and react to user input."
msgstr ""

#: ../../source/sprites.rst:30
msgid "Sprite Classes"
msgstr ""

#: ../../source/sprites.rst:36
msgid "Sprite Examples"
msgstr ""

#: ../../source/sprites.rst:38
msgid "The SnowBlossom class is an easy-to use way of placing falling things on the screen."
msgstr ""

#: ../../source/sprites.rst:46
msgid "This example shows how a SpriteManager can be used to create complex behaviors. In this case, it shows 400 particles, and has them avoid the mouse."
msgstr ""

