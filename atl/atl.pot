# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2020, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 7.3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-18 23:55+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/atl.rst:8
msgid "Animation and Transformation Language"
msgstr ""

#: ../../source/atl.rst:10
msgid "The Animation and Transformation Language (ATL) provides a high-level way of choosing a displayable to show, positioning it on the screen, and applying transformations such as rotation, zoom, and alpha-modification. These can be changed over time, and in response to events."
msgstr ""

#: ../../source/atl.rst:15
msgid "The Python equivalent of an ATL transform is the :func:`Transform` displayable. There is no way to create an ATL transform programmatically."
msgstr ""

#: ../../source/atl.rst:19
msgid "Ren'Py Script Statements"
msgstr ""

#: ../../source/atl.rst:21
msgid "ATL can be included as part of three Ren'Py script statements."
msgstr ""

#: ../../source/atl.rst:26
msgid "Transform Statement"
msgstr ""

#: ../../source/atl.rst:28
msgid "The ``transform`` statement creates a transform that can be supplied as part of an at clause. The syntax of the transform statement is:"
msgstr ""

#: ../../source/atl.rst:35
msgid "The transform statement  must be run at init time. If it is found outside an ``init`` block, then it is automatically placed inside an ``init`` block with a priority of 0. The transform may have a list of parameters, which must be supplied when it is called."
msgstr ""

#: ../../source/atl.rst:40
msgid "`Name` must be a Python identifier. The transform created by the ATL block is bound to this name.::"
msgstr ""

#: ../../source/atl.rst:51
msgid "Image Statement With ATL Block"
msgstr ""

#: ../../source/atl.rst:53
msgid "The second way to use ATL is as part of an ``image`` statement with ATL block. This binds an image name to the given transform. As there's no way to supply parameters to this transform, it's only useful if the transform defines an animation. The syntax for an image statement with ATL block is:"
msgstr ""

#: ../../source/atl.rst:73
msgid "Scene and Show Statements with ATL Block"
msgstr ""

#: ../../source/atl.rst:75
msgid "The final way to use ATL is as part of a ``scene`` or ``show`` statement. This wraps the image being shown inside an ATL transformation."
msgstr ""

#: ../../source/atl.rst:95
msgid "ATL Syntax and Semantics"
msgstr ""

#: ../../source/atl.rst:97
msgid "An ATL block consists of one or more logical lines, all at the same indentation, and indented relative to the statement containing the block. Each logical line in an ATL block must contain one or more ATL statements."
msgstr ""

#: ../../source/atl.rst:101
msgid "There are two kinds of ATL statements: simple and complex. Simple statements do not take an ATL block. A single logical line may contain one or more ATL statements, separated by commas. A complex statement contains a block, must be on its own line. The first line of a complex statement always ends with a colon ``:``."
msgstr ""

#: ../../source/atl.rst:107
msgid "By default, statements in a block are executed in the order in which they appear, starting with the first statement in the block. Execution terminates when the end of the block is reached. Time statements change this, as described in the appropriate section below."
msgstr ""

#: ../../source/atl.rst:112
msgid "Execution of a block terminates when all statements in the block have terminated."
msgstr ""

#: ../../source/atl.rst:115
msgid "If an ATL statement requires evaluation of an expression, such evaluation occurs when the transform is first added to the scene list. (Such as when using a ``show`` statement or ``ui`` function.)"
msgstr ""

#: ../../source/atl.rst:120
msgid "ATL Statements"
msgstr ""

#: ../../source/atl.rst:122
msgid "The following are the ATL statements."
msgstr ""

#: ../../source/atl.rst:125
msgid "Interpolation Statement"
msgstr ""

#: ../../source/atl.rst:127
msgid "The interpolation statement is the main way that ATL controls transformations."
msgstr ""

#: ../../source/atl.rst:137
msgid "The first part of the interpolation statement is used to select a function that time-warps the interpolation. (That is, a function from linear time to non-linear time.) This can either be done by giving the name of a warper registered with ATL, or by giving the keyword \"warp\" followed by an expression giving a function. Either case is followed by a number, giving the number of seconds the interpolation should take."
msgstr ""

#: ../../source/atl.rst:144
msgid "If no warp function is given, the interpolation is instantaneous. Otherwise, it persists for the amount of time given, and at least one frame."
msgstr ""

#: ../../source/atl.rst:147
msgid "The warper and duration are used to compute a completion fraction. This is done by dividing the time taken by the interpolation by the duration of the interpolation. This is clamped to the duration, and then passed to the warper. The result returned by the warper is the completion fraction."
msgstr ""

#: ../../source/atl.rst:152
msgid "The interpolation statement can then contain a number of other clauses. When a property and value are present, then the value is the value the property will obtain at the end of the statement. The value can be obtained in several ways:"
msgstr ""

#: ../../source/atl.rst:156
msgid "If the value is followed by one or two knots, then spline motion is used. The starting point is the value of the property at the start of the interpolation, the end point is the property value, and the knots are used to control the spline."
msgstr ""

#: ../../source/atl.rst:161
msgid "If the interpolation statement contains a \"clockwise\" or \"counterclockwise\" clause, circular motion is used, as described below."
msgstr ""

#: ../../source/atl.rst:164
msgid "Otherwise, the value is linearly interpolated between the start and end locations, using the completion fraction."
msgstr ""

#: ../../source/atl.rst:167
msgid "If a simple expression is present, it should evaluate to a transform with only a single interpolation statement, without a warper, splines, or circular motion. The properties from the transform are processed as if they were included in this statement."
msgstr ""

#: ../../source/atl.rst:172
msgid "Some sample interpolations are::"
msgstr ""

#: ../../source/atl.rst:198
msgid "An important special case is that the pause warper, followed by a time and nothing else, causes ATL execution to pause for that amount of time."
msgstr ""

#: ../../source/atl.rst:201
msgid "Some properties can have values of multiple types. For example, the :propref:`xpos` property can be an int, float, or absolute. The behavior is undefined when an interpolation has old and new property values of different types."
msgstr ""

#: ../../source/atl.rst:206
msgid "Time Statement"
msgstr ""

#: ../../source/atl.rst:208
msgid "The ``time`` statement is a simple control statement. It contains a single `simple_expression`, which is evaluated to give a time, expressed as seconds from the start of execution of the containing block."
msgstr ""

#: ../../source/atl.rst:215
msgid "When the time given in the statement is reached, the following statement begins to execute. This transfer of control occurs even if a previous statement is still executing, and causes any prior statement to immediately terminate."
msgstr ""

#: ../../source/atl.rst:220
msgid "Time statements are implicitly preceded by a pause statement with an infinite time. This means that if control would otherwise reach the time statement, it waits until the time statement would take control."
msgstr ""

#: ../../source/atl.rst:224
msgid "When there are multiple time statements in a block, they must strictly increase in order."
msgstr ""

#: ../../source/atl.rst:238
msgid "Expression Statement"
msgstr ""

#: ../../source/atl.rst:240
msgid "An expression statement is a simple statement that starts with a simple expression. It then contains an optional with clause, with a second simple expression."
msgstr ""

#: ../../source/atl.rst:247
msgid "There are three things the first simple expression may evaluate to:"
msgstr ""

#: ../../source/atl.rst:249
msgid "If it's a transform, that transform is executed. With clauses are ignored when a transform is supplied."
msgstr ""

#: ../../source/atl.rst:252
msgid "If it's an integer or floating point number,  it's taken as a number of seconds to pause execution for."
msgstr ""

#: ../../source/atl.rst:255
msgid "Otherwise, the expression is interpreted to be a displayable. This displayable replaces the child of the transform when this clause executes, making it useful for animation. If a with clause is present, the second expression is evaluated as a transition, and the transition is applied to the old and new displayables."
msgstr ""

#: ../../source/atl.rst:277
msgid "Pass Statement"
msgstr ""

#: ../../source/atl.rst:282
msgid "The ``pass`` statement is a simple statement that causes nothing to happen. This can be used when there's a desire to separate statements, like when there are two sets of choice statements that would otherwise be back-to-back."
msgstr ""

#: ../../source/atl.rst:287
msgid "Repeat Statement"
msgstr ""

#: ../../source/atl.rst:290
msgid "The ``repeat`` statement is a simple statement that causes the block containing it to resume execution from the beginning. If the expression is present, then it is evaluated to give an integer number of times the block will execute. (So a block ending with ``repeat 2`` will execute at most twice.)"
msgstr ""

#: ../../source/atl.rst:298
msgid "The repeat statement must be the last statement in a block.::"
msgstr ""

#: ../../source/atl.rst:308
msgid "Block Statement"
msgstr ""

#: ../../source/atl.rst:310
msgid "The ``block`` statement is a complex statement that contains a block of ATL statements. This can be used to group statements that will repeat."
msgstr ""

#: ../../source/atl.rst:329
msgid "Choice Statement"
msgstr ""

#: ../../source/atl.rst:331
msgid "The ``choice`` statement is a complex statement that defines one of a set of potential choices. Ren'Py will pick one of the choices in the set, and execute the ATL block associated with it, and then continue execution after the last choice in the choice set."
msgstr ""

#: ../../source/atl.rst:340
msgid "Choice statements are greedily grouped into a choice set when more than one choice statement appears consecutively in a block. If the `simple_expression` is supplied, it is a floating-point weight given to that block, otherwise 1.0 is assumed."
msgstr ""

#: ../../source/atl.rst:359
msgid "Parallel Statement"
msgstr ""

#: ../../source/atl.rst:361
msgid "The ``parallel`` statement is used to define a set of ATL blocks to execute in parallel."
msgstr ""

#: ../../source/atl.rst:368
msgid "Parallel statements are greedily grouped into a parallel set when more than one parallel statement appears consecutively in a block. The blocks of all parallel statements are then executed simultaneously. The parallel statement terminates when the last block terminates."
msgstr ""

#: ../../source/atl.rst:373
msgid "The blocks within a set should be independent of each other, and manipulate different properties. When two blocks change the same property, the result is undefined."
msgstr ""

#: ../../source/atl.rst:392
msgid "Event Statement"
msgstr ""

#: ../../source/atl.rst:394
msgid "The ``event`` statement is a simple statement that causes an event with the given name to be produced."
msgstr ""

#: ../../source/atl.rst:400
msgid "When an event is produced inside a block, the block is checked to see if an event handler for the given name exists. If it does, control is transferred to the event handler. Otherwise, the event propagates to any containing event handler."
msgstr ""

#: ../../source/atl.rst:406
msgid "On Statement"
msgstr ""

#: ../../source/atl.rst:408
msgid "The ``on`` statement is a complex statement that defines an event handler. On statements are greedily grouped into a single statement. On statement can handle a single event name, or a comma-separated list of event names."
msgstr ""

#: ../../source/atl.rst:416
msgid "The on statement is used to handle events. When an event is handled, handling of any other event ends and handing of the new event immediately starts. When an event handler ends without another event occurring, the ``default`` event is produced (unless were already handing the ``default`` event)."
msgstr ""

#: ../../source/atl.rst:421
msgid "Execution of the on statement will never naturally end. (But it can be ended by the time statement, or an enclosing event handler.)"
msgstr ""

#: ../../source/atl.rst:439
msgid "Contains Statement"
msgstr ""

#: ../../source/atl.rst:441
msgid "The ``contains`` statement sets the displayable contained by this ATL transform (the child of the transform). There are two variants of the contains statement."
msgstr ""

#: ../../source/atl.rst:445
msgid "The contains expression variant takes an expression, and sets that expression as the child of the transform. This is useful when an ATL transform wishes to contain, rather than include, a second ATL transform."
msgstr ""

#: ../../source/atl.rst:470
msgid "The contains block allows one to define an ATL block that is used for the child of this ATL transform. One or more contains block statements will be greedily grouped together, wrapped inside a :func:`Fixed`, and set as the child of this transform."
msgstr ""

#: ../../source/atl.rst:479
msgid "Each block should define a displayable to use, or else an error will occur. The contains statement executes instantaneously, without waiting for the children to complete. This statement is mostly syntactic sugar, as it allows arguments to be easily passed to the children."
msgstr ""

#: ../../source/atl.rst:500
msgid "Function Statement"
msgstr ""

#: ../../source/atl.rst:502
msgid "The ``function`` statement allows ATL to use Python functions to control the ATL properties."
msgstr ""

#: ../../source/atl.rst:508
msgid "The functions have the same signature as those used with :func:`Transform`:"
msgstr ""

#: ../../source/atl.rst:510
msgid "The first argument is a transform object. Transform properties can be set on this object."
msgstr ""

#: ../../source/atl.rst:513
msgid "The second argument is the shown timebase, the number of seconds since the function began executing."
msgstr ""

#: ../../source/atl.rst:516
msgid "The third argument is the the animation timebase, which is the number of seconds something with the same tag has been on the screen."
msgstr ""

#: ../../source/atl.rst:519
msgid "If the function returns a number, it will be called again after that number of seconds has elapsed. (0 seconds means to call the function as soon as possible.) If the function returns None, control will pass to the next ATL statement."
msgstr ""

#: ../../source/atl.rst:545
msgid "Warpers"
msgstr ""

#: ../../source/atl.rst:547
msgid "A warper is a function that can change the amount of time an interpolation statement considers to have elapsed. The following warpers are defined by default. They are defined as functions from t to t', where t and t' are floating point numbers, with t ranging from 0.0 to 1.0 over the given amount of time. (If the statement has 0 duration, then t is 1.0 when it runs.) t' should start at 0.0 and end at 1.0, but can be greater or less."
msgstr ""

#: ../../source/atl.rst:556
msgid "``pause``"
msgstr ""

#: ../../source/atl.rst:555
msgid "Pause, then jump to the new value. If t == 1.0, t = 1.0. Otherwise, t' = 0.0."
msgstr ""

#: ../../source/atl.rst:559
msgid "``linear``"
msgstr ""

#: ../../source/atl.rst:559
msgid "Linear interpolation. t' = t"
msgstr ""

#: ../../source/atl.rst:563
msgid "``ease``"
msgstr ""

#: ../../source/atl.rst:562
msgid "Start slow, speed up, then slow down. t' = .5 - math.cos(math.pi * t) / 2.0"
msgstr ""

#: ../../source/atl.rst:566
msgid "``easein``"
msgstr ""

#: ../../source/atl.rst:566
msgid "Start fast, then slow down. t' = math.cos((1.0 - t) * math.pi / 2.0"
msgstr ""

#: ../../source/atl.rst:569
msgid "``easeout``"
msgstr ""

#: ../../source/atl.rst:569
msgid "Start slow, then speed up. t' = 1.0 - math.cos(t * math.pi / 2.0)"
msgstr ""

#: ../../source/atl.rst:571
msgid "In addition, most of Robert Penner's easing functions are supported. To make the names match those above, the functions have been renamed somewhat. Graphs of these standard functions can be found at http://www.easings.net/."
msgstr ""

#: ../../source/inc/easings:1
msgid "Ren'Py Name"
msgstr ""

#: ../../source/inc/easings:1
msgid "easings.net Name"
msgstr ""

#: ../../source/inc/easings:1
msgid "ease_back"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeInOut_back"
msgstr ""

#: ../../source/inc/easings:1
msgid "ease_bounce"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeInOut_bounce"
msgstr ""

#: ../../source/inc/easings:1
msgid "ease_circ"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeInOut_circ"
msgstr ""

#: ../../source/inc/easings:1
msgid "ease_cubic"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeInOut_cubic"
msgstr ""

#: ../../source/inc/easings:1
msgid "ease_elastic"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeInOut_elastic"
msgstr ""

#: ../../source/inc/easings:1
msgid "ease_expo"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeInOut_expo"
msgstr ""

#: ../../source/inc/easings:1
msgid "ease_quad"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeInOut_quad"
msgstr ""

#: ../../source/inc/easings:1
msgid "ease_quart"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeInOut_quart"
msgstr ""

#: ../../source/inc/easings:1
msgid "ease_quint"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeInOut_quint"
msgstr ""

#: ../../source/inc/easings:1
msgid "easein_back"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeOut_back"
msgstr ""

#: ../../source/inc/easings:1
msgid "easein_bounce"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeOut_bounce"
msgstr ""

#: ../../source/inc/easings:1
msgid "easein_circ"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeOut_circ"
msgstr ""

#: ../../source/inc/easings:1
msgid "easein_cubic"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeOut_cubic"
msgstr ""

#: ../../source/inc/easings:1
msgid "easein_elastic"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeOut_elastic"
msgstr ""

#: ../../source/inc/easings:1
msgid "easein_expo"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeOut_expo"
msgstr ""

#: ../../source/inc/easings:1
msgid "easein_quad"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeOut_quad"
msgstr ""

#: ../../source/inc/easings:1
msgid "easein_quart"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeOut_quart"
msgstr ""

#: ../../source/inc/easings:1
msgid "easein_quint"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeOut_quint"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeout_back"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeIn_back"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeout_bounce"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeIn_bounce"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeout_circ"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeIn_circ"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeout_cubic"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeIn_cubic"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeout_elastic"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeIn_elastic"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeout_expo"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeIn_expo"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeout_quad"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeIn_quad"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeout_quart"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeIn_quart"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeout_quint"
msgstr ""

#: ../../source/inc/easings:1
msgid "easeIn_quint"
msgstr ""

#: ../../source/atl.rst:578
msgid "New warpers can be defined using the ``renpy.atl_warper`` decorator, in a ``python early`` block. It should be placed in a file that is parsed before any file that uses the warper. This looks like::"
msgstr ""

#: ../../source/atl.rst:591
msgid "List of Transform Properties"
msgstr ""

#: ../../source/atl.rst:593
msgid "The following transform properties exist."
msgstr ""

#: ../../source/atl.rst:595
msgid "When the type is given as position, it may be an int, ``renpy.absolute``, or float. If it's a float, it's interpreted as a fraction of the size of the containing area (for :propref:`pos`) or displayable (for :propref:`anchor`)."
msgstr ""

#: ../../source/atl.rst:599
msgid "Note that not all properties are independent. For example, :propref:`xalign` and :propref:`xpos` both update some of the same underlying data. In a parallel statement, only one block should adjust horizontal position, and one should adjust vertical positions. (These may be the same block.) The angle and radius properties set both horizontal and vertical positions."
msgstr ""

#: ../../source/atl.rst:607
#: ../../source/atl.rst:630
#: ../../source/atl.rst:813
msgid "(position, position)"
msgstr ""

#: ../../source/atl.rst:608
#: ../../source/atl.rst:631
msgid "(0, 0)"
msgstr ""

#: ../../source/atl.rst:610
msgid "The position, relative to the top-left corner of the containing area."
msgstr ""

#: ../../source/atl.rst:615
#: ../../source/atl.rst:623
#: ../../source/atl.rst:638
#: ../../source/atl.rst:646
#: ../../source/atl.rst:838
msgid "position"
msgstr ""

#: ../../source/atl.rst:616
#: ../../source/atl.rst:624
#: ../../source/atl.rst:639
#: ../../source/atl.rst:647
msgid "0"
msgstr ""

#: ../../source/atl.rst:618
msgid "The horizontal position, relative to the left side of the containing area."
msgstr ""

#: ../../source/atl.rst:626
msgid "The vertical position, relative to the top of the containing area."
msgstr ""

#: ../../source/atl.rst:633
msgid "The anchor position, relative to the top-left corner of the displayable."
msgstr ""

#: ../../source/atl.rst:641
msgid "The horizontal anchor position, relative to the left side of the displayable."
msgstr ""

#: ../../source/atl.rst:649
msgid "The vertical anchor position, relative to the top of the displayable."
msgstr ""

#: ../../source/atl.rst:654
#: ../../source/atl.rst:822
msgid "(float, float)"
msgstr ""

#: ../../source/atl.rst:655
#: ../../source/atl.rst:814
#: ../../source/atl.rst:823
msgid "(0.0, 0.0)"
msgstr ""

#: ../../source/atl.rst:657
msgid "Equivalent to setting pos and anchor to the same value."
msgstr ""

#: ../../source/atl.rst:661
#: ../../source/atl.rst:668
#: ../../source/atl.rst:675
#: ../../source/atl.rst:683
#: ../../source/atl.rst:692
#: ../../source/atl.rst:700
#: ../../source/atl.rst:740
#: ../../source/atl.rst:748
#: ../../source/atl.rst:757
#: ../../source/atl.rst:775
#: ../../source/atl.rst:787
#: ../../source/atl.rst:831
#: ../../source/atl.rst:909
msgid "float"
msgstr ""

#: ../../source/atl.rst:662
#: ../../source/atl.rst:669
#: ../../source/atl.rst:676
#: ../../source/atl.rst:684
#: ../../source/atl.rst:693
#: ../../source/atl.rst:701
#: ../../source/atl.rst:788
#: ../../source/atl.rst:910
msgid "0.0"
msgstr ""

#: ../../source/atl.rst:664
msgid "Equivalent to setting xpos and xanchor to this value."
msgstr ""

#: ../../source/atl.rst:671
msgid "Equivalent to setting ypos and yanchor to this value."
msgstr ""

#: ../../source/atl.rst:678
msgid "The number of pixels the displayable is offset by in the horizontal direction. Positive values offset toward the right."
msgstr ""

#: ../../source/atl.rst:686
msgid "The number of pixels the displayable is offset by in the vertical direction. Positive values offset toward the bottom."
msgstr ""

#: ../../source/atl.rst:695
msgid "Equivalent to setting xpos to the value of this property, and xanchor to 0.5."
msgstr ""

#: ../../source/atl.rst:703
msgid "Equivalent to setting ypos to the value of this property, and yanchor to 0.5."
msgstr ""

#: ../../source/atl.rst:708
msgid "float or None"
msgstr ""

#: ../../source/atl.rst:709
#: ../../source/atl.rst:766
#: ../../source/atl.rst:846
#: ../../source/atl.rst:868
#: ../../source/atl.rst:876
#: ../../source/atl.rst:884
#: ../../source/atl.rst:892
#: ../../source/atl.rst:927
#: ../../source/atl.rst:937
msgid "None"
msgstr ""

#: ../../source/atl.rst:711
msgid "If None, no rotation occurs. Otherwise, the image will be rotated by this many degrees clockwise. Rotating the displayable causes it to be resized, according to the setting of rotate_pad, below. This can cause positioning to change if xanchor and yanchor are not 0.5."
msgstr ""

#: ../../source/atl.rst:719
#: ../../source/atl.rst:731
#: ../../source/atl.rst:765
#: ../../source/atl.rst:859
#: ../../source/atl.rst:901
#: ../../source/atl.rst:917
msgid "boolean"
msgstr ""

#: ../../source/atl.rst:720
#: ../../source/atl.rst:918
msgid "True"
msgstr ""

#: ../../source/atl.rst:722
msgid "If True, then a rotated displayable is padded such that the width and height are equal to the hypotenuse of the original width and height. This ensures that the transform will not change size as its contents rotate. If False, the transform will be given the minimal size that contains the transformed displayable. This is more suited to fixed rotations."
msgstr ""

#: ../../source/atl.rst:732
#: ../../source/atl.rst:860
#: ../../source/atl.rst:902
msgid "False"
msgstr ""

#: ../../source/atl.rst:734
msgid "If true, the anchor point is located on the cropped child, and is scaled and rotated as the child is transformed. Effectively, this makes the anchor the point that the child is rotated and scaled around."
msgstr ""

#: ../../source/atl.rst:741
#: ../../source/atl.rst:749
#: ../../source/atl.rst:758
#: ../../source/atl.rst:776
msgid "1.0"
msgstr ""

#: ../../source/atl.rst:743
msgid "This causes the displayable to be zoomed by the supplied factor."
msgstr ""

#: ../../source/atl.rst:751
msgid "This causes the displayable to be horizontally zoomed by the supplied factor. A negative value causes the image to be flipped horizontally."
msgstr ""

#: ../../source/atl.rst:760
msgid "This causes the displayable to be vertically zoomed by the supplied factor. A negative value causes the image to be flipped vertically."
msgstr ""

#: ../../source/atl.rst:768
msgid "If True, the displayable and its children are drawn using nearest-neighbor filtering. If False, the displayable and its children are drawn using bilinear filtering. If None, this is inherited from the parent, or :var:`config.nearest_neighbor`, which defaults to False."
msgstr ""

#: ../../source/atl.rst:778
msgid "This controls the opacity of the displayable."
msgstr ""

#: ../../source/atl.rst:780
msgid "The alpha transform is applied to each image comprising the child of the transform independently. This can lead to unexpected results when the children overlap, such as as seeing a character through clothing. The :func:`Flatten` displayable can help with these problems."
msgstr ""

#: ../../source/atl.rst:790
msgid "This controls how much additive blending Ren'Py performs. When 1.0, Ren'Py draws using the ADD operator. When 0.0, Ren'Py draws using the OVER operator."
msgstr ""

#: ../../source/atl.rst:794
msgid "Additive blending is performed on each child of the transform independently."
msgstr ""

#: ../../source/atl.rst:796
msgid "Fully additive blending doesn't alter the alpha channel of the destination, and additive images may not be visible if they're not drawn directly onto an opaque surface. (Complex operations, like viewport, :func:`Flatten`, :func:`Frame`, and certain transitions may cause problems with additive blending.)"
msgstr ""

#: ../../source/atl.rst:803
msgid "Additive blending is only supported by hardware-based renderers, such as the OpenGL and DirectX/ANGLE renderers. The software renderer will draw additive images incorrectly."
msgstr ""

#: ../../source/atl.rst:807
msgid "Once the graphics system has started, ``renpy.get_renderer_info()[\"additive\"]`` will be true if additive blending is supported."
msgstr ""

#: ../../source/atl.rst:816
msgid "If not None, specifies the polar coordinate center, relative to the upper-left of the containing area. Setting the center using this allows for circular motion in position mode."
msgstr ""

#: ../../source/atl.rst:825
msgid "If not None, specifies the polar coordinate center, relative to the upper-left of the containing area. Setting the center using this allows for circular motion in align mode."
msgstr ""

#: ../../source/atl.rst:833
msgid "Get the angle component of the polar coordinate position. This is undefined when the polar coordinate center is not set."
msgstr ""

#: ../../source/atl.rst:840
msgid "Get the radius component of the polar coordinate position. This is undefined when the polar coordinate center is not set."
msgstr ""

#: ../../source/atl.rst:845
msgid "None or (int, int, int, int) or (float, float, float, float)"
msgstr ""

#: ../../source/atl.rst:848
msgid "If not None, causes the displayable to be cropped to the given box. The box is specified as a tuple of (x, y, width, height). If floats are given and ``crop_relative`` is true, the components are taken as a fraction of the width and hight of the source image. Otherwise, the components are considered to be an absolute number of pixels."
msgstr ""

#: ../../source/atl.rst:855
msgid "If corners and crop are given, crop takes priority over corners."
msgstr ""

#: ../../source/atl.rst:862
msgid "If True, float components of crop are take as a fraction of the width and height of the source image."
msgstr ""

#: ../../source/atl.rst:867
#: ../../source/atl.rst:875
#: ../../source/atl.rst:883
#: ../../source/atl.rst:891
msgid "None or (int, int)"
msgstr ""

#: ../../source/atl.rst:870
msgid "If not None, gives the upper-left corner of the crop box. Crop takes priority over corners."
msgstr ""

#: ../../source/atl.rst:878
msgid "If not None, gives the lower right corner of the crop box. Cropt takes priority over corners."
msgstr ""

#: ../../source/atl.rst:886
msgid "If not None, causes the displayable to be scaled to the given size."
msgstr ""

#: ../../source/atl.rst:894
msgid "If not None, causes the displayable to be scaled so that it fits within a box of this size, while preserving aspect ratio. (Note that this means that one of the dimensions may be smaller than the size of this box.)"
msgstr ""

#: ../../source/atl.rst:904
msgid "If True, causes things to be drawn on the screen using subpixel positioning."
msgstr ""

#: ../../source/atl.rst:912
msgid "If this transform is being used as a transition, then this is the duration of the transition."
msgstr ""

#: ../../source/atl.rst:920
msgid "If true, events are passed to the child of this transform. If false, events are blocked. (This can be used in ATL transforms to prevent events from reaching the old_widget.)"
msgstr ""

#: ../../source/atl.rst:926
#: ../../source/atl.rst:936
msgid "None or float"
msgstr ""

#: ../../source/atl.rst:929
msgid "If not None, this interpreted as an angle that is used to pan horizontally across a 360 degree panoramic image. The center of the image is used as the zero angle, while the left and right edges are -180 and 180 degrees, respectively."
msgstr ""

#: ../../source/atl.rst:939
msgid "If not None, this interpreted as an angle that is used to pan vertically across a 360 degree panoramic image. The center of the image is used as the zero angle, while the top and bottom edges are -180 and 180 degrees, respectively."
msgstr ""

#: ../../source/atl.rst:946
#: ../../source/atl.rst:954
msgid "int"
msgstr ""

#: ../../source/atl.rst:947
#: ../../source/atl.rst:955
msgid "1"
msgstr ""

#: ../../source/atl.rst:949
msgid "The number of times to tile the image horizontally. (This is ignored when xpan is given.)"
msgstr ""

#: ../../source/atl.rst:957
msgid "The number of times to tile the image vertically. (This is ignored when ypan is given.)"
msgstr ""

#: ../../source/atl.rst:960
msgid "These properties are applied in the following order:"
msgstr ""

#: ../../source/atl.rst:962
msgid "tile"
msgstr ""

#: ../../source/atl.rst:963
msgid "crop, corner1, corner2"
msgstr ""

#: ../../source/atl.rst:964
msgid "size, maxsize"
msgstr ""

#: ../../source/atl.rst:965
msgid "zoom, xzoom, yzoom"
msgstr ""

#: ../../source/atl.rst:966
msgid "pan"
msgstr ""

#: ../../source/atl.rst:967
msgid "rotate"
msgstr ""

#: ../../source/atl.rst:968
msgid "position properties"
msgstr ""

#: ../../source/atl.rst:972
msgid "Circular Motion"
msgstr ""

#: ../../source/atl.rst:974
msgid "When an interpolation statement contains the ``clockwise`` or ``counterclockwise`` keywords, the interpolation will cause circular motion. Ren'Py will compare the start and end locations and figure out the polar coordinate center. Ren'Py will then compute the number of degrees it will take to go from the start angle to the end angle, in the specified direction of rotation. If the circles clause is given, Ren'Py will ensure that the appropriate number of circles will be made."
msgstr ""

#: ../../source/atl.rst:982
msgid "Ren'Py will then interpolate the angle and radius properties, as appropriate, to cause the circular motion to happen. If the transform is in align mode, setting the angle and radius will set the align property. Otherwise, the pos property will be set."
msgstr ""

#: ../../source/atl.rst:988
msgid "External Events"
msgstr ""

#: ../../source/atl.rst:990
msgid "The following events can be triggered automatically:"
msgstr ""

#: ../../source/atl.rst:994
msgid "``start``"
msgstr ""

#: ../../source/atl.rst:993
msgid "A pseudo-event, triggered on entering an ``on`` statement, if no event of higher priority has happened."
msgstr ""

#: ../../source/atl.rst:998
msgid "``show``"
msgstr ""

#: ../../source/atl.rst:997
msgid "Triggered when the transform is shown using the show or scene statement, and no image with the given tag exists."
msgstr ""

#: ../../source/atl.rst:1002
msgid "``replace``"
msgstr ""

#: ../../source/atl.rst:1001
msgid "Triggered when transform is shown using the ``show`` statement, replacing an image with the given tag."
msgstr ""

#: ../../source/atl.rst:1010
msgid "``hide``"
msgstr ""

#: ../../source/atl.rst:1005
msgid "Triggered when the transform is hidden using the ``hide`` statement or its Python equivalent."
msgstr ""

#: ../../source/atl.rst:1008
msgid "Note that this isn't triggered when the transform is eliminated via the scene statement or exiting the context it exists in, such as when exiting the game menu."
msgstr ""

#: ../../source/atl.rst:1014
msgid "``replaced``"
msgstr ""

#: ../../source/atl.rst:1013
msgid "Triggered when the transform is replaced by another. The image will not actually hide until the ATL block finishes."
msgstr ""

#: ../../source/atl.rst:1019
msgid "``update``"
msgstr ""

#: ../../source/atl.rst:1017
msgid "Triggered when a screen is updated without being shown or replacing another screen. This happens in rare but possible cases, such as when the game is loaded and when styles or translations change."
msgstr ""

#: ../../source/atl.rst:1023
msgid "``hover``, ``idle``, ``selected_hover``, ``selected_idle``"
msgstr ""

#: ../../source/atl.rst:1022
msgid "Triggered when button containing this transform, or a button contained by this transform, enters the named state."
msgstr ""

