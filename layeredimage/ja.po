# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2018, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 7.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-09 13:27+0900\n"
"PO-Revision-Date: 2022-06-28 20:57+0900\n"
"Last-Translator: kyouryuukunn <akakyouryuu@gmail.com>\n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.2.4\n"

#: ../../source/layeredimage.rst:5
msgid "Layered Images"
msgstr "レイヤー画像"

#: ../../source/layeredimage.rst:7
msgid ""
"When a sprite-set gets to a certain level of complexity, defining every "
"possible combination may become unwieldy. For example, a sprite with 4 "
"outfits, 4 hairstyles, and 6 emotions already has 96 possible combinations. "
"Creating static images for each possible combination would consume a lot of "
"disk space and programmer time."
msgstr ""
"スプライトの組み合わせがある程度複雑になると、すべての可能な組み合わせの定義"
"は難しくなります。例えば4つの服装と4つの髪型、6つの表情のスプライトの組み合わ"
"せはすでに 96 組あります。すべての可能な組み合わせの静止画像作成は多くのディ"
"スクスペースとプログラマーの時間を消費します。"

#: ../../source/layeredimage.rst:13
msgid ""
"To address this use case, Ren'Py has a way of defining an image consisting "
"of multiple layers. (For the purpose of this, consider layers to be the "
"layers in a paint program like Photoshop or the GIMP, and not the layers "
"used elsewhere in Ren'Py.) Layers can be shown unconditionally, or can be "
"selected by attributes provided to the image or conditions that are "
"evaluated at runtime."
msgstr ""
"このような状況に対処するため、Ren'Py には複数レイヤーで構成される画像を定義す"
"る方法があります(ここで言うレイヤーは Photoshop やGIMP のようなペイントソフト"
"でのレイヤーであり、Ren'Py の他の場所で語られているようなレイヤーではありませ"
"ん)。レイヤーは無条件で表示される他、画像に提供された属性や実行時に評価される"
"条件によって選択されたりもできます。"

#: ../../source/layeredimage.rst:20
msgid ""
"To make defining layered images easier, Ren'Py has the ``layeredimage`` "
"statement, which introduces a domain-specific language that lets you define "
"a layered image. There's also the :func:`LayeredImage` object, which isn't "
"an image but can be assigned to an image statement and used like one."
msgstr ""
"レイヤー画像の定義をより簡単に定義するため、 Ren'Py には ``layerdimage`` ス"
"テートメントがあります。これはレイヤー画像の定義に使用される固有の言語を導入"
"します。画像ではありませんが、 image ステートメントに代入して画像のように使用"
"出来る :func:`LayerdImage` オブジェクトもあります。"

#: ../../source/layeredimage.rst:27
msgid "Defining Layered Images"
msgstr "レイヤー画像の定義"

#: ../../source/layeredimage.rst:29
msgid ""
"The layered image domain-specific language consists of only a few "
"statements, one of which is also a script language statement to introduce "
"the image, followed by statements to introduce the layers and groups of "
"layers."
msgstr ""
"レイヤー画像用の言語はほんの少数のステートメントで構成され、その1つは画像を導"
"入するステートメントで、続いてレイヤーやレイヤーのグループを導入するためのス"
"テートメントが続きます。"

#: ../../source/layeredimage.rst:33
msgid ""
"To introduce the language, here's a layered image that uses the available "
"features, with things that could be implied instead explicitly given. ::"
msgstr ""
"この言語の紹介のため、ここで利用可能な機能を使用したレイヤー画像を示しま"
"す。 ::"

#: ../../source/layeredimage.rst:83
msgid ""
"That is a large amount of script, but it's very regular, and below we'll "
"show how to simplify it."
msgstr ""
"長いスクリプトですが、かなり定型的なものです。以下でどのように簡略化している"
"かを述べます。"

#: ../../source/layeredimage.rst:86
msgid ""
"First off, the ``layeredimage`` statement introduces a layered image with "
"the name of the sprite. This statement is part of the Ren'Py script "
"language, and runs at init time."
msgstr ""
"最初に ``layerdimage`` ステートメントでそのスプライトの名前とともにレイヤー画"
"像を導入します。このステートメントは Ren'Py スクリプト言語の一部で初期化時に"
"実行されます。"

#: ../../source/layeredimage.rst:90
msgid ""
"The block of a layered image can contain always, group, and if statements. A "
"``group`` statement can take attributes. The ``always`` and ``if`` "
"statements must be supplied displayables, while the attribute statement can "
"optionally be supplied one. All statements can be supplied properties."
msgstr ""
"レイヤー画像のブロックには always と group, if ステートメントを含められま"
"す。 ``group`` ステートメントは属性を受け取れます。 ``always`` と ``if`` ス"
"テートメントには displayable が提供されなければなりませんが、 ``attribute`` "
"ステートメントへの提供は任意です。すべてのステートメントにはプロパティーが提"
"供出来ます。"

#: ../../source/layeredimage.rst:95
msgid ""
"The ``always`` statement declares a layer that is always displayed, like the "
"background of a sprite."
msgstr ""
"``always`` ステートメントはスプライトの背景のような常に表示されるレイヤーを宣"
"言します。"

#: ../../source/layeredimage.rst:98
msgid ""
"The ``group`` statement introduces a group of attributes, where only one of "
"the attributes can be displayed at a time. So this layered image can only "
"have one outfit, and one post for each of the eyes, eyebrows, and mouth. "
"Properties given to the group are passed on to the attributes, and a group "
"can automatically declare attributes."
msgstr ""
"``group`` ステートメントは一度にその属性のうちの1つだけが表示される属性グルー"
"プを導入します。これにより、このレイヤー画像は目、眉、口それぞれの位置で1つず"
"つ、服で1つしか出力されません。グループへのプロパティーはその属性に渡され、グ"
"ループでは自動的に属性を宣言できます。"

#: ../../source/layeredimage.rst:104
msgid ""
"The ``attribute`` statement introduces a layer that is displayed if an "
"attribute is supplied to the image. For example, \"augustina_outfit_dress\" "
"is only displayed if if the \"dress\" attribute is supplied. If given the "
"``default`` keyword, the attribute is displayed if no conflicting attributes "
"are provided; in this example, \"augustina_eyes_open\" is displayed unless "
"the unless the \"wink\" attribute is given."
msgstr ""
"``attribute`` ステートメントは画像にある属性が提供されると表示されるレイヤー"
"を導入します。例では \"dress\" 属性が提供されるときのみ "
"\"augustina_outfit_dress\" が表示されます。 ``default`` キーワードが属性に与"
"えられると、矛盾する属性が与えられなければ、その属性が表示されます。この例で"
"は \"wink\" 属性がなければ \"augustina_eyes_open\" が表示されます。"

#: ../../source/layeredimage.rst:111
msgid ""
"Finally, the ``if`` statement adds a layer that selects between displayables "
"using a Python statement. This is evaluated constantly, and the first "
"condition that evaluates to true is the one that's displayed."
msgstr ""
"最後に、 ``if`` ステートメントは Python ステートメントを使用して  "
"displayable を選択するレイヤーを追加します。これは毎回評価され、最初に True "
"と評価される条件が表示されます。"

#: ../../source/layeredimage.rst:115
msgid ""
"Properties consist of a property name and a simple expression, and can be "
"given to each layer. Some properties change the functioning of a statement. "
"If one or more :ref:`transform properties <transform-properties>` are given, "
"a :func:`Transform` is created that wraps the display. The at property can "
"be given a transform or list of transforms that also wrap the displayable. "
"For example, the pos property here creates a transform that moves the top-"
"left corner of each mouth image."
msgstr ""
"プロパティーはプロパティー名と単純式で構成され、各レイヤーに提供されます。ス"
"テートメントの機能を変更するプロパティーもあります。ひとつ以上の :ref:"
"`transform プロパティー <transform-properties>` があたえられると、 :func:"
"`Transform` が作成されて displayable をラップします。 at プロパティーには "
"displayable をラップする transform または transform リストも与えられます。例"
"えば、ここで pos プロパティーは各口の画像の左上端を移動する transform を作成"
"しています。"

#: ../../source/layeredimage.rst:123
msgid ""
"The resulting image is the size of the bounding box of all the layers, so it "
"probably makes sense to have one layer the full size of the image, which no "
"other layer goes outside of. The first layer is in the back of the image, "
"while the last is in front – in this example, the glasses will be on top of "
"the other layers. It's recommended to avoid properties that assume the size "
"of the containing image, like :propref:`xcenter` and :propref:`xalign`, as "
"these properties do not work well the when the image size is not known."
msgstr ""
"最終的な画像は全てのレイヤーの矩形領域の最大サイズとなるため、画像からはみ出"
"すレイヤーがない十分な大きさのレイヤーが1つあるとよいでしょう。最初のレイヤー"
"は画像の後ろに、最後のは前になります。この例では、眼鏡が他のレイヤーの上とな"
"ります。画像サイズが不明なとき正常に動作しないので :propref:`xcenter` や :"
"propref:`xalign` のような含む画像のサイズを仮定するプロパティーは避けましょ"
"う。"

#: ../../source/layeredimage.rst:131
msgid ""
"Groups and attributes may appear more than once in a layered image, with all "
"of the layers with an attribute being displayed."
msgstr ""
"group と attribute は表示される属性をもつ全てのレイヤーとともに layeredimage "
"に一回以上表れるでしょう。"

#: ../../source/layeredimage.rst:134
msgid ""
"With the exception of the condition in an ``if`` statement, all Python "
"expressions are evaluated at init time."
msgstr ""
"`if`` ステートメントの condition を除いて Python 式は初期化時にすべて評価され"
"ます。"

#: ../../source/layeredimage.rst:139
msgid "Using an Layered Image"
msgstr "レイヤー画像の使用"

#: ../../source/layeredimage.rst:141
msgid ""
"To use this (but not other) layered images, the evil variable must be given "
"a value, for example with::"
msgstr ""
"この例でのレイヤー画像を使用するには evil 変数に値を与えなければなりません。 "
"例 ::"

#: ../../source/layeredimage.rst:146
msgid ""
"Then the layered image can be shown like any other image. Almost certainly, "
"one of the outfits should be given – while Ren'Py doesn't enforce this, this "
"image requires one::"
msgstr ""
"これでレイヤー画像は他の画像のように表示出来ます。ほぼ確実に outfit のどれか"
"は与えられるでしょうが、 Ren'Py はこれを強制しないので、この画像はどれかを必"
"要とします。 ::"

#: ../../source/layeredimage.rst:152
msgid ""
"While a sprite is being shown, additional attributes will be added to those "
"already showing provided they do not conflict. (This is the case in all of "
"Ren'Py when an image being shown does not match one that's already defined, "
"something that is never the case with a layered image.) So, ::"
msgstr ""
"スプライトが表示されている間、衝突しなければ追加の属性は既に表示されているス"
"プライトに加えられます(これは表示されている画像が既に定義されている画像に一致"
"しないときにRen'Pyのどこででも起こりますが、レイヤー画像では起こりません)。そ"
"のため、次のコードでは ::"

#: ../../source/layeredimage.rst:159
msgid ""
"Will activate the layers associated with the wink attribute. We could stop "
"winking with::"
msgstr ""
"wink 属性と関連付けされたレイヤーをアクティベートします。開いた目はウィンクと"
"衝突するので次のようにしてウィンクを止められます。 ::"

#: ../../source/layeredimage.rst:164
msgid ""
"As the open eyes conflict with the winking eyes. Or we could simply remove "
"the wink attribute using::"
msgstr "もしくは単に wink 属性を次のようにして除去できます。 ::"

#: ../../source/layeredimage.rst:169
msgid ""
"Which would display the layer with the open attribute, as it is the default."
msgstr "これはデフォルトの open 属性で画像を表示します。"

#: ../../source/layeredimage.rst:172
msgid "Layered images can also be used with the scene statement."
msgstr "レイヤー画像は scene ステートメントでも使用できます。"

#: ../../source/layeredimage.rst:177
msgid "Automatic Attributes"
msgstr "自動属性"

#: ../../source/layeredimage.rst:179
msgid ""
"There's a lot of repetition our first example, when it comes to the "
"attribute names and the displayables that define the attribute. To save you "
"from having to do a lot of redundant typing, Ren'Py can automatically "
"determine a displayable name from the image name, group name, and attribute "
"name. This is done by combining the names with underscores."
msgstr ""
"最初の例では属性を定義する属性名と displayable で多くの繰り返しがあります。冗"
"長なタイピングを避けるため、 Ren'Py では画像名、グループ名、属性名から自動的"
"に displayable の名前を定義できます。これは名前とアンダースコアを組み合わせて"
"行います。"

#: ../../source/layeredimage.rst:185
msgid ""
"When doing this, you can also take advantage of another feature of "
"attributes – it's possible to add any properties to the first line and omit "
"the block entirely."
msgstr ""
"これには属性のもう一つの機能、プロパティーを最初の行に追加してブロックを完全"
"に省略できることを利用できます。"

#: ../../source/layeredimage.rst:189
msgid "Here's our example of having done that::"
msgstr "ここにこれを実行する例を示します。 ::"

#: ../../source/layeredimage.rst:218
msgid ""
"This example is equivalent to the first one (as we gave the same names for "
"the displayables in the first example). For example, the dress attribute in "
"the outfit group uses \"augustina_outfit_dress\" for the displayable, a "
"displayable that references the image with  that name."
msgstr ""
"(displayable に最初の例と同じ名前を与えているため)この例は最初の例と同じこと"
"をしています。例えば、 outfit グループの dress 属性は displayable に "
"\"augustina_outfit_dress\" を使用し、 displayable はその名前で画像を参照しま"
"す。"

#: ../../source/layeredimage.rst:223
msgid ""
"It's possible to go even further than this, by automatically defining the "
"attributes in a group. This is done by giving a group the `auto` keyword, "
"which causes the group to search for defined images that would match the "
"pattern, then define the attribute if it does not already exist."
msgstr ""
"自動的にグループの属性を定義して、さらに簡略化が可能です。これはグループに、"
"パターンにマッチする定義した画像を検索させ、衝突しなければその属性を定義する "
"`auto` キーワードを与えて実行されます。"

#: ../../source/layeredimage.rst:229
msgid ""
"As with ``attribute``, properties can be placed on the first line of the "
"group and the block omitted. The displayable and properties of the always "
"statement can be put on the first line the same way."
msgstr ""
"``attribute`` のように、プロパティーをグループの最初の行に配置してブロックを"
"省略できます。 always ステートメントの displayable と プロパティーも同様に最"
"初の行に配置できます。"

#: ../../source/layeredimage.rst:233
msgid "Here's an example of the final form::"
msgstr "最後の形式の例です。 ::"

#: ../../source/layeredimage.rst:257
msgid ""
"This is about as simply as we can define that image, without changing what "
"we define. The savings with auto-definition increases as we have more "
"attributes per group. We could also save lines if we didn't need default "
"attributes. In that case, all of the groups could be written on single lines."
msgstr ""
"これは画像を定義するのと同じぐらい簡単です。グループ毎により多くの属性があれ"
"ば、自動定義での節約はより増加します。デフォルト属性がいらなければ、更に行も"
"節約できます。その場合、全てのグループが1つの行で記述されます。"

#: ../../source/layeredimage.rst:263
msgid ""
"There's no way to omit the displayables from the ``always`` or ``if`` "
"statements, so this is as short as it gets – but with a few more images with "
"proper names, it's possible to use this to define thousands or even millions "
"of combinations of layers."
msgstr ""
"``always`` や ``if`` ステートメントでは、 displayable を省略できないため、(も"
"う少し適切な名前の画像がありますが)これが一番簡略です。これによって数千数万の"
"レイヤーの組み合わせさえ定義できます。"

#: ../../source/layeredimage.rst:270
msgid "Statement Reference"
msgstr "Statement"

#: ../../source/layeredimage.rst:272
msgid ""
"Note that with the exception of the conditions in the ``if`` statement, all "
"expressions are evaluated at init time, when the layered image is first "
"defined."
msgstr ""
"そのレイヤー画像が最初に定義される初期化時に ``if`` ステートメントの条件式以"
"外のすべての式が評価されることに注意してください。"

#: ../../source/layeredimage.rst:278
msgid "Layeredimage"
msgstr "Layeredimage"

#: ../../source/layeredimage.rst:280
msgid ""
"The ``layeredimage`` statement is a statement in the Ren'Py script language "
"that introduces a layered image. It starts with an image name, and takes a "
"block that can contain attribute, group, and if statements."
msgstr ""
"``layerdimage`` ステートメントはレイヤー画像を導入する Ren'Py スクリプト言語"
"のステートメントです。これは画像名で始まり、 attribute, group, if ステートメ"
"ントなどを含むブロックを含みます。"

#: ../../source/layeredimage.rst:284
msgid "Layeredimage takes the following properties:"
msgstr "layerdimage は次のプロパティーを受け取ります。 :"

#: ../../source/layeredimage.rst:291 ../../source/inc/li:114
#: ../../source/inc/li_ff:31
msgid "`image_format`"
msgstr "`image_format`"

#: ../../source/layeredimage.rst:287 ../../source/inc/li:110
msgid ""
"When a given image is a string, and this is supplied, the image name is "
"interpolated into `image_format` to make an image file. For example, "
"\"sprites/eileen/{image}.png\" will look for the image in a subdirectory of "
"sprites. (This is not used by auto groups, which look for images and not "
"image files.)"
msgstr ""
"文字列で画像が与えられており、かつこのプロパティーが与えられていると、"
"`image_format` にその画像名が補完され、画像ファイルになります。例えば、 "
"\"sprites/eileen/{image}.png\" ならsptritesのサブディレクトリーからその画像を"
"探します ( これは画像ファイルではなく画像を探す自動グループでは使用されませ"
"ん )。"

#: ../../source/layeredimage.rst:295 ../../source/inc/li:118
msgid "`format_function`"
msgstr "`format_function`"

#: ../../source/layeredimage.rst:294 ../../source/inc/li:117
msgid ""
"A function that is used instead of `layeredimage.format_function` to format "
"the image information into a displayable."
msgstr ""
"`layeredimage.format_function` の代わりに使用して画像の情報を displayable 形"
"式にする関数です。"

#: ../../source/layeredimage.rst:299 ../../source/layeredimage.rst:361
#: ../../source/layeredimage.rst:447 ../../source/layeredimage.rst:490
msgid ":ref:`transform properties <transform-properties>`"
msgstr ":ref:`transform プロパティー <transform-properties>`"

#: ../../source/layeredimage.rst:298
msgid ""
"If present, these are used to construct a :func:`Transform` that is applied "
"to the displayable."
msgstr ""
"与えられると、 displayable に適用される :func:`Transform` を構築するのに使わ"
"れます。"

#: ../../source/layeredimage.rst:302 ../../source/layeredimage.rst:364
#: ../../source/layeredimage.rst:450 ../../source/layeredimage.rst:493
#: ../../source/inc/li:30 ../../source/inc/li:81 ../../source/inc/li:103
msgid "`at`"
msgstr "`at`"

#: ../../source/layeredimage.rst:302
msgid ""
"A transform or list of transforms that are applied to the layered image."
msgstr "レイヤー画像へ適用される transform または transform のリストです。"

#: ../../source/layeredimage.rst:313 ../../source/inc/li:131
msgid "`offer_screen`"
msgstr "`offer_screen`"

#: ../../source/layeredimage.rst:305
msgid ""
"If this is True, the layeredimage will place its children, and size its "
"children with variable size, like it was given an area matching the whole "
"screen of the game. If it is False, the said behaviors will be done while "
"taking into account the available area, which for example will be smaller in "
"an hbox containing other elements, and the display of the layeredimage will "
"not be consistent every time it is shown."
msgstr ""
"これが True ならそのレイヤー画像はゲームの画面全体と一致する領域が与えられた"
"かのようにその子を配置し、可変サイズの子のサイズを合わせます。 False なら、利"
"用可能な領域を考慮しながらこれらの動作が行われ、例えば他の要素を含む hbox で"
"は小さくなり、レイヤー画像の表示は表示されるたびに一貫しなくなります。"

#: ../../source/layeredimage.rst:312
msgid ""
"If None, the default, falls back to :var:`config.layeredimage_offer_screen`, "
"which defaults to True."
msgstr ""
"None の場合、デフォルトの :var:`config.layeredimage_offer_screen` に戻りま"
"す。これはデフォルトでは True です。"

#: ../../source/layeredimage.rst:316
msgid "Attribute"
msgstr "Attribute"

#: ../../source/layeredimage.rst:318
msgid ""
"The ``attribute`` statement adds a layer that is displayed when the given "
"attribute is used to display the image. The same attribute can be used with "
"multiple layers, with all layers corresponding to the attribute being shown "
"(the `if_all`, `if_any`, and `if_not` properties can change this)."
msgstr ""
"``attribute`` ステートメントは特定の属性を使用して画像を表示するときに表示さ"
"れるレイヤーを追加します。同じ属性が複数のレイヤーに使用出来、その属性に対応"
"する全てのレイヤーが表示されます( `if_all`, `if_any`, `if_not` プロパティーで"
"これを変更出来ます)。"

#: ../../source/layeredimage.rst:323
msgid ""
"An attribute takes an attribute name. It can also take two keywords. The "
"``default`` keyword indicates that the attribute should be present by "
"default if no attribute in its group conflicts. The ``null`` keyword "
"prevents Ren'Py from automatically searching for a displayable corresponding "
"to this attribute, which is useful to have an attribute that is intended "
"solely for use with `if_all`, `if_any`, or `if_not`."
msgstr ""
"attribute は属性名を受け取り、さらに 2 つのキーワードも受け取れます。 "
"``default`` キーワードはそのグループの属性と衝突しなければデフォルトで与えら"
"れる属性を示します。 ``null`` キーワードは Ren'Py が自動的にこの属性に対応す"
"る displayable を検索しないようにするので、 `if_all` や `if_any`, `if_not` と"
"組み合わせての使用をのみ意図した属性を持つのに便利です。"

#: ../../source/layeredimage.rst:330
msgid ""
"If the displayable is not present, it will be computed from the name of the "
"layer, group, group variant, and attribute, by replacing all spaces with "
"underscores and using underscores to combine everything together. So if we "
"have an image named \"augustina\", the group \"eyes\" and the attribute "
"\"closed\", the image \"augustina_eyes_closed\" will be used. (The layered "
"image's format function is used to do this, defaulting to :func:"
"`layeredimage.format_function`.)"
msgstr ""
"displayable が与えられなければ、そのレイヤーやグループ、グループバリエーショ"
"ン、属性の名前から、すべてのスペースをアンダースコアで置き換え、さらにアン"
"ダースコアで全てを結合して推測します。つまり画像名 \"augustina\" , グループ "
"\"eyes\",  属性 \"closed\" があれば、  \"augustina_eyes_closed\" が使用されま"
"す( レイヤー画像のフォーマット関数がこれに使用され、デフォルトは :func:"
"`layeredimage.format_function` です)。"

#: ../../source/layeredimage.rst:337
msgid ""
"If an attribute is not inside a group, it's placed in a group with the same "
"name, but that group is not used to compute the displayable name. (So it "
"would look for \"image_attribute\", not \"image_attribute_attribute\")."
msgstr ""
"属性にグループがなければ、同じ名前のグループに配置されますが、そのグループは "
"displayable 名の推測に使用されません(つまり \"image_attribute_attribute\" で"
"はなく \"image_attribute\" を探します)。"

#: ../../source/layeredimage.rst:341
msgid "The attribute statement takes the following properties:"
msgstr "attribute ステートメントは次のプロパティーを受け取ります :"

#: ../../source/layeredimage.rst:346 ../../source/layeredimage.rst:433
#: ../../source/layeredimage.rst:475 ../../source/inc/li:34
#: ../../source/inc/li:69
msgid "`if_all`"
msgstr "`if_all`"

#: ../../source/layeredimage.rst:344 ../../source/layeredimage.rst:431
msgid ""
"A string or list of strings giving the names of attributes. If this is "
"present, this layer is only displayed if all of the named attributes are "
"present."
msgstr ""
"属性名の文字列または文字列リストです。これがあれば、このレイヤーはそのすべて"
"の属性名が与えられなければ表示されません。"

#: ../../source/layeredimage.rst:351 ../../source/layeredimage.rst:438
#: ../../source/layeredimage.rst:480 ../../source/inc/li:38
#: ../../source/inc/li:73
msgid "`if_any`"
msgstr "`if_any`"

#: ../../source/layeredimage.rst:349 ../../source/layeredimage.rst:436
msgid ""
"A string or list of strings giving the names of attributes. If this is "
"present, this layer is only displayed if any of the named attributes are "
"present."
msgstr ""
"属性名の文字列または文字列リストです。これがあれば、このレイヤーはその属性名"
"のどれかが与えられなければ表示されません。"

#: ../../source/layeredimage.rst:357 ../../source/layeredimage.rst:443
#: ../../source/layeredimage.rst:486 ../../source/inc/li:42
#: ../../source/inc/li:77
msgid "`if_not`"
msgstr "`if_not`"

#: ../../source/layeredimage.rst:354 ../../source/layeredimage.rst:441
msgid ""
"A string or list of strings giving the names of attributes. If this is "
"present, this layer is only displayed if none of the named attributes are "
"present."
msgstr ""
"属性名の文字列または文字列リストです。これがあれば、このレイヤーはその属性名"
"がすべて与えられなければ表示されます。"

#: ../../source/layeredimage.rst:360 ../../source/layeredimage.rst:446
#: ../../source/layeredimage.rst:489
msgid ""
"If present, these are used to construct a transform that is applied to the "
"layer."
msgstr ""
"与えられれば、レイヤーに適用される transform を構築するのに使用されます。"

#: ../../source/layeredimage.rst:364 ../../source/layeredimage.rst:450
#: ../../source/layeredimage.rst:493
msgid "A transform or list of transforms that are applied to the layer."
msgstr "レイヤーに適用される transform または transform のリストです。"

#: ../../source/layeredimage.rst:367
msgid "Group"
msgstr "Group"

#: ../../source/layeredimage.rst:369
msgid ""
"The ``group`` statement groups together alternative layers. When an "
"attribute is inside a group, it is an error to include any of the other "
"attributes in that group. (But it's fine to include the same attribute "
"twice. The ``multiple`` keyword removes this restriction.)"
msgstr ""
"``group`` ステートメントはレイヤーをグループ化します。ある属性がグループ内に"
"あるときに、そのグループの他の属性を含むのはエラーになります(同じ属性を 2 回"
"含むのは良いです。 ``multiple`` キーワードはこの制限をなくします)。"

#: ../../source/layeredimage.rst:374
msgid ""
"The ``group`` statement takes a name. The name isn't used for very much, but "
"is used to generate the default names of attributes inside the group."
msgstr ""
"``group`` ステートメントは名前を受け取ります。名前はあまり使用されませんが、"
"グループ内の属性のデフォルト名を生成するのに使われます。"

#: ../../source/layeredimage.rst:377
msgid ""
"The name may be followed by the ``auto`` keyword. If it's present, after any "
"attributes in the group have been declared, Ren'Py will scan its list of "
"images for those that match the group's pattern (see below). Any images that "
"are found that do not correspond to declared attributes are then added to "
"the group as if declared with the attribute statement."
msgstr ""
"``auto`` キーワードが名前に続くかもしれません。与えられればそのグループのその"
"後のどの属性も宣言され、 Ren'Py はその画像のリストをスキャンしてグループパ"
"ターン(下記参照)にマッチするものを探します。見つかった画像で、宣言された属性"
"に対応しないものは attribute ステートメントで宣言されたかのようにそのグループ"
"に追加されます。"

#: ../../source/layeredimage.rst:383
msgid ""
"This can be followed by the ``multiple`` keyword. If present, more than one "
"member of the group can be selected at the same time. This is useful to have "
"a group auto-define multiple attributes that are not exclusive. This "
"conflicts with the default keyword being given to one of the attributes."
msgstr ""
"``multiple`` キーワードも続けられます。与えられれば、グループのひとつ以上のメ"
"ンバーが同時に選択できます。これは排他的ではない複数の属性を自動定義するグ"
"ループに便利です。これは属性の1つに default キーワードが与えられていると衝突"
"します。"

#: ../../source/layeredimage.rst:388
msgid ""
"Properties can then be declared on the first line of the group, and it can "
"take a block that contains properties and attributes."
msgstr ""
"プロパティーはグループの最初の行で宣言でき、プロパティーや属性を含むブロック"
"をとられます。"

#: ../../source/layeredimage.rst:391
msgid "There are two properties that are specific to groups."
msgstr "グループに指定される 2 つのプロパティーがあります。"

#: ../../source/layeredimage.rst:396 ../../source/inc/li_ff:22
msgid "`variant`"
msgstr "`variant`"

#: ../../source/layeredimage.rst:394
msgid ""
"If given, this should be a string. If present, it adds a variant element "
"that becomes part of automatically-generated image names and the pattern "
"used to search for automatically-defined attributes."
msgstr ""
"指定されるならこれは文字列で、バリエーション要素として自動生成の画像名や自動"
"定義の属性の検索パターンの一部になります。"

#: ../../source/layeredimage.rst:402
msgid "`prefix`"
msgstr "`prefix`"

#: ../../source/layeredimage.rst:399
msgid ""
"If given, this is a prefix that is concatenated using an underscore with the "
"manually or automatically defined attribute names. So if prefix is \"leftarm"
"\", and the attribute name \"hip\" is encountered, the attribute "
"\"leftarm_hip\" is defined instead."
msgstr ""
"指定されるなら、手動または自動定義の属性名とアンダースコアで連結される接頭辞"
"です。つまり prefix が\"leftarm\" で、属性名が \"hip\" なら、属性 "
"\"leftarm_hip\" が代わりに定義されます。"

#: ../../source/layeredimage.rst:404
msgid ""
"The group statement also takes the same properties ``attribute`` does.  "
"Properties supplied to the group are passed to the attributes inside the "
"group, unless overridden by the same property of the attribute itself."
msgstr ""
"group ステートメントは ``attribute`` と同じプロパティーを受け取ります。グルー"
"プに提供されたプロパティーは、属性自身の同じプロパティーを上書きしない限りそ"
"のグループ内の属性に渡されます。"

#: ../../source/layeredimage.rst:408
msgid "**Pattern.** The image pattern used consists of:"
msgstr "**Pattern.** 使用される画像パターンは次で構成されます。 :"

#: ../../source/layeredimage.rst:410
msgid "The name of the image, with spaces replaced with underscores."
msgstr "スペースがアンダースコアで置換された画像の名前"

#: ../../source/layeredimage.rst:411
msgid "The name of the group, if the group is not ``multiple``."
msgstr "そのグループが ``multiple`` でなければグループ名"

#: ../../source/layeredimage.rst:412
msgid "The name of the variant, if there is one."
msgstr "あればバリエーションの名前"

#: ../../source/layeredimage.rst:413
msgid "The name of the attribute."
msgstr "属性の名前"

#: ../../source/layeredimage.rst:415
msgid ""
"all combined with underscores. For example, if we have a layered image with "
"the name \"augustina work\", and the group \"eyes\", this will match images "
"that match the pattern augustina_work_eyes\\_\\ `attribute`. With a "
"`variant` of `blue`, it would match the pattern augustina_work_eyes_blue\\_"
"\\ `attribute`."
msgstr ""
"すべてはアンダースコアで結合されます。例えば、レイヤー画像 \"augustina work"
"\" とグループ \"eyes\" があれば、これは augustina_work_eyes\\_\\ `attribute` "
"にマッチします。 `variant` が `bule` なら、 augustina_work_eyes_blue\\_\\ "
"`attribute` にマッチします。"

#: ../../source/layeredimage.rst:422
msgid "Always"
msgstr "Always"

#: ../../source/layeredimage.rst:424
msgid ""
"The ``always`` statement declares a layer that is always shown. It must be "
"supplied a displayable, and can take properties also. Both can be placed on "
"the same line or inside a block."
msgstr ""
"``always`` ステートメントは常に表示されるレイヤーを宣言します。 displayable "
"が与えられなければならず、プロパティーも受け取れます。両方を同じ行にもブロッ"
"ク内にも配置できます。"

#: ../../source/layeredimage.rst:428
msgid "The always statement takes the following properties:"
msgstr "always ステートメントは次のプロパティーを受け取ります。 :"

#: ../../source/layeredimage.rst:453
msgid "If"
msgstr "If"

#: ../../source/layeredimage.rst:455
msgid ""
"The ``if`` statement (or more fully the if-elif-else) statement allows you "
"to supply one or more conditions that are evaluated at runtime. Each "
"condition is associated with a layer, with the first true condition being "
"the one that is shown. If no condition is true, the ``else`` layer is shown "
"if present."
msgstr ""
"``if`` ステートメントには実行時に評価される 1 つ以上の条件を渡せられます。各"
"条件はレイヤーに関連付けられ、最初に True となる条件のものが表示されます。 "
"True となる条件がなく、 ``else`` レイヤーがあれば、それが表示されます。"

#: ../../source/layeredimage.rst:461
msgid "A more complete example of an ``if`` statement might look like::"
msgstr "``if`` ステートメントのより完全な例は次のようになります。 ::"

#: ../../source/layeredimage.rst:470
msgid ""
"Each layer must have a displayable given. It can also be given these "
"properties:"
msgstr ""
"各レイヤーには displayable が与えられなければならず、次のプロパティーも与えら"
"れます。 :"

#: ../../source/layeredimage.rst:473
msgid ""
"A string or list of strings giving the names of attributes. If this is "
"present, this condition is only considered if all of the named attributes "
"are present."
msgstr ""
"属性名の文字列または文字列のリストです。これがあれば、この条件はそのすべての"
"属性名が与えられなければ考慮されません。"

#: ../../source/layeredimage.rst:478
msgid ""
"A string or list of strings giving the names of attributes. If this is "
"present, this condition is only considered if any of the named attributes "
"are present."
msgstr ""
"属性名の文字列または文字列のリストです。これがあれば、この条件はその属性名の"
"どれかが与えられなければ考慮されません。"

#: ../../source/layeredimage.rst:483
msgid ""
"A string or list of strings giving the names of attributes. If this is "
"present, this condition is only considered if none of the named attributes "
"are present."
msgstr ""
"属性名の文字列または文字列のリストです。これがあれば、この条件はその属性名が"
"すべて与えられなければ考慮されます。"

#: ../../source/layeredimage.rst:495
msgid ""
"The ``if`` statement is transformed to a :func:`ConditionSwitch` when the "
"``layeredimage`` statement runs."
msgstr ""
"``if`` ステートメントは ``layerdimage`` ステートメント実行時に :func:"
"`ConditionSwitch` に変換されます。"

#: ../../source/layeredimage.rst:503
msgid ""
"When ``predict_all`` is not true, changing the condition of the if statement "
"should be avoided while the layered image is shown or about to be shown, as "
"it would lead to an unpredicted image load. It's intended for use for "
"character customization options that change rarely."
msgstr ""
"``predict_all`` が True でなければ、レイヤー画像が表示されている、またはまさ"
"に表示されるときは ``if`` ステートメントの条件の変更は避け、予測不能な画像の"
"読み込みを避けるべきです。これはめったに変更されない character のカスタマイズ"
"オプションでの使用を意図しています。"

#: ../../source/layeredimage.rst:509
msgid "Poses"
msgstr "Poses"

#: ../../source/layeredimage.rst:511
msgid ""
"It's possible to have a character that has sprites in multiple poses, where "
"everything – or at least everything of interest – is different. For example, "
"if a character has standing and sitting poses, all the image parts will be "
"in different places."
msgstr ""
"全て、または少なくとも興味がある全てが異なる複数のポーズのスプライトがある"
"キャラクターを持てます。例えばキャラクターに立ちポーズと座りポーズがあれば、"
"全ての画像のパーツは異なる場所にあるでしょう。"

#: ../../source/layeredimage.rst:516
msgid ""
"In that case, it makes sense to define multiple layered images for the same "
"image tag. The ``layeredimage`` statement makes this possible by allowing "
"you to include attributes as part of the image name. So we can have::"
msgstr ""
"その場合、同じ画像タグの複数のレイヤー画像の定義が役立ちます。 "
"``layerdimage`` ステートメントでは画像名の一部として属性を含められるので、こ"
"れが可能になります。"

#: ../../source/layeredimage.rst:526
msgid ""
"This is especially useful when using a layered image to compose a side "
"image, where the side images of different characters will have nothing to do "
"with each other. ::"
msgstr ""
"これは特にレイヤー画像を使用してサイドイメージを構成するのに便利です。別々の"
"キャラクターのサイドイメージは互いに影響しません。"

#: ../../source/layeredimage.rst:538
msgid "Advice"
msgstr "Advice"

#: ../../source/layeredimage.rst:540
msgid ""
"**Use underscores in image names.** By default, Ren'Py's layered images use "
"underscores to separate sections of image names. It might be tempting to use "
"images with spaces between sections, but that could lead to problems later "
"on."
msgstr ""
"**画像名でのアンダースコアの使用** デフォルトでは、 Ren'Py のレイヤー画像はア"
"ンダースコアで画像名をパーツに分割します。パーツ間にスペースがある画像の使用"
"は魅力的かもしれませんが、後述の問題に発展しかねません。"

#: ../../source/layeredimage.rst:545
msgid ""
"Ren'Py has a rule that if you show an image with the exact name as one "
"that's being shown, it's shown instead. This can bypass the layered image "
"you defined and show the layer directly, which can lead to weird problems "
"like a pair of eyes floating in space."
msgstr ""
"Ren'Py には既に表示されているものと正確に同じ名前の画像を表示するときは置き換"
"えて表示するルールがあります。これにより定義したレイヤー画像ではなく、直接レ"
"イヤーを表示できます。しかし、これはなにもない空間に目が浮かぶような妙な問題"
"に繋がる可能性があります。"

#: ../../source/layeredimage.rst:550
msgid ""
"By having each layer have a different tag from the main image, this is no "
"longer a problem."
msgstr ""
"各レイヤーがメインの画像と異なるタグを持てばこれは問題ではなくなります。"

#: ../../source/layeredimage.rst:553
msgid ""
"**Cropping layers isn't necessary.** Ren'Py optimizes images by cropping "
"them to the bounding box of the non-transparent pixels before loading them "
"into RAM. As a result, assuming the images are being predicted properly, it "
"generally won't improve performance or image size much to crop the images "
"yourself."
msgstr ""
"**レイヤーの切り取りは不要です** Ren'Py は画像を RAM に読み込む前に、不透明な"
"ピクセルの矩形領域に切り取って画像を最適化します。つまり画像が適切に予測され"
"れば、自分で画像を切り取ってもパフォーマンスや画像サイズは一般的にあまり改善"
"しません。"

#: ../../source/layeredimage.rst:559
msgid ""
"**Layered images shouldn't use data that changes at runtime.** With the "
"exception of the condition inside an if statement, all of the expressions in "
"a layered images are run at init time. The layered image will not pick up "
"changes in variables that occur after the game starts. (However, expressions "
"in ATL transforms will be run each time the image is show, as with other ATL "
"transforms.)"
msgstr ""
"**レイヤー画像では起動時に変化するデータを使用してはいけません** if ステート"
"メントの condition を除いて、レイヤー画像のすべての式は初期化時に実行され、"
"ゲーム開始後に起きた変数の変化を反映しません(ただし ATL transform の式は他の "
"ATL transform と同様に画像の表示ごとに実行されます)。"

#: ../../source/layeredimage.rst:569
msgid "Python"
msgstr "Python"

#: ../../source/layeredimage.rst:571
msgid ""
"Of course, the ``layeredimage`` statements have a Python equivalents. The "
"group statement does not – the group is supplied to ``attribute``, and the "
"auto functionality can be implemented using :func:`renpy.list_images`."
msgstr ""
"もちろん ``layerdimage`` ステートメントには相当する Python がありますが、 "
"group ステートメントは ``attribute`` に与えられるためありません。自動機能は :"
"func:`renpy.list_image` を使用して実装できます。"

#: ../../source/inc/li:5
msgid ""
"This is used to represent a layer of an LayeredImage that is controlled by "
"an attribute. A single attribute can control multiple layers, in which case "
"all layers corresponding to that attribute will be displayed."
msgstr ""
"これを使用して属性に制御される LayerdImage のレイヤーを表します。1つの属性で"
"複数のレイヤーを制御でき、この場合、その属性に対応する全てのレイヤーが表示さ"
"れます。"

#: ../../source/inc/li:13 ../../source/inc/li_ff:18
msgid "`group`"
msgstr "`group`"

#: ../../source/inc/li:11
msgid ""
"A string giving the group the attribute is part of. This may be None, in "
"which case a group with the same name as the attribute is created."
msgstr ""
"属性が加わるグループの文字列です。 None である場合、属性と同じ名前のグループ"
"が作成されます。"

#: ../../source/inc/li:16 ../../source/inc/li_ff:25
msgid "`attribute`"
msgstr "`attribute`"

#: ../../source/inc/li:16
msgid "A string giving the name of the attribute."
msgstr "属性の名前の文字列です。"

#: ../../source/inc/li:20 ../../source/inc/li:65 ../../source/inc/li_ff:28
msgid "`image`"
msgstr "`image`"

#: ../../source/inc/li:19
msgid ""
"If not None, this should be a displayable that is displayed when this "
"attribute is shown."
msgstr "これは None または、この属性が表示される displayable です。"

#: ../../source/inc/li:24
msgid "`default`"
msgstr "`default`"

#: ../../source/inc/li:23
msgid ""
"If True, and no other attribute for the group is selected, this attribute is."
msgstr ""
"True かつそのグループの他の属性が選択されていなければ、この属性となります。"

#: ../../source/inc/li:26
msgid "The following keyword arguments are also known:"
msgstr "次のキーワード引数もあります。 :"

#: ../../source/inc/li:29 ../../source/inc/li:80
msgid "A transform or list of transforms that are applied to the image."
msgstr "画像に適用される transform または transform のリストです。"

#: ../../source/inc/li:33
msgid ""
"An attribute or list of attributes. The displayable is only shown if all of "
"these are showing."
msgstr ""
"属性または属性のリストです。 displayable はこれらの全てがあるときだけ表示され"
"ます。"

#: ../../source/inc/li:37
msgid ""
"An attribute or list of attributes. if not empty, the displayable is only "
"shown if any of these are showing."
msgstr ""
"属性または属性のリストです。 displayable はこれらのどれかがあるときだけ表示さ"
"れます。"

#: ../../source/inc/li:41
msgid ""
"An attribute or list of attributes. The displayable is only shown if none of "
"these are showing."
msgstr ""
"属性または属性のリストです。 displayable はこれらの全てがないときだけ表示され"
"ます。"

#: ../../source/inc/li:44 ../../source/inc/li:83
msgid ""
"Other keyword arguments are interpreted as transform properties. If any are "
"present, a transform is created that wraps the image. (For example, "
"pos=(100, 200) can be used to offset the image by 100 pixels horizontally "
"and 200 vertically.)"
msgstr ""
"他のキーワード引数は transform プロパティーとして解釈されます。与えられると、"
"画像をラップする transform が作成されます(例えば、 pos=(100, 200) を使用し"
"て、画像を 100 ピクセル横に、 200 ピクセル縦にオフセットできます)。"

#: ../../source/inc/li:49
msgid ""
"If the `image` parameter is omitted or None, and the LayeredImage has been "
"given the `image_format` parameter, the image_format is used to generate an "
"image filename."
msgstr ""
"`image` パラメーターが省略されるか None であり、LayerdImage に "
"`image_format` パラメーターが与えられると、 image_format を使用して画像ファイ"
"ル名を生成します。"

#: ../../source/inc/li:55
msgid ""
"This is used to represent a layer of an LayeredImage that is controlled by a "
"condition. When the condition is true, the layer is displayed. Otherwise, "
"nothing is displayed."
msgstr ""
"これにより条件で制御される LayerdImage のレイヤーを表します。条件が True なら"
"レイヤーが表示され、そうでなければ表示されません。"

#: ../../source/inc/li:61
msgid "`condition`"
msgstr "`condition`"

#: ../../source/inc/li:60
msgid ""
"This should be a string giving a Python condition that determines if the "
"layer is displayed."
msgstr "レイヤーが表示されるかどうかを決定する Python  の条件の文字列です。"

#: ../../source/inc/li:64
msgid ""
"If not None, this should be a displayable that is displayed when the "
"condition is true."
msgstr "これは None または条件が True なら表示される displayable です。"

#: ../../source/inc/li:68
msgid ""
"An attribute or list of attributes. The condition is only evaluated if all "
"of these are showing."
msgstr ""
"属性または属性のリストです。これらのすべてがあるときのみ条件は評価されます。"

#: ../../source/inc/li:72
msgid ""
"An attribute or list of attributes. If not empty, the condition is only "
"evaluated if any of these are showing."
msgstr ""
"属性または属性のリストです。これらのどれかがあるときのみ条件は評価されます。"

#: ../../source/inc/li:76
msgid ""
"An attribute or list of attributes. The condition is only evaluated if none "
"of these are showing."
msgstr ""
"属性または属性のリストです。これらのすべてがないときのみ条件は評価されます。"

#: ../../source/inc/li:90
msgid ""
"This is an image-like object that, when shown with the proper set of "
"attributes, shows a displayable created by compositing together the "
"displayables associated with those attribute."
msgstr ""
"これは画像のようなオブジェクトで、適切な属性の組み合わせで表示されると、それ"
"らの属性と関連付けられた displayable を合成して作成した displayable を表示し"
"ます。"

#: ../../source/inc/li:99
msgid "`attributes`"
msgstr "`attributes`"

#: ../../source/inc/li:95
msgid ""
"This must be a list of Attribute objects. Each Attribute object reflects a "
"displayable that may or may not be displayed as part of the image. The items "
"in this list are in back-to-front order, with the first item further from "
"the viewer and the last closest."
msgstr ""
"これは Attribute オブジェクトのリストです。各 Attribute オブジェクトはその画"
"像の一部として表示され、またはされない displayable を反映します。このリストの"
"要素は後ろから前の順となり、プレイヤーから見て最初の要素は遠くに、最後のもの"
"は近くになります。"

#: ../../source/inc/li:102
msgid ""
"A transform or list of transforms that are applied to the displayable after "
"it is parameterized."
msgstr ""
"合成後に displayable に適用される transform または transform のリストです。"

#: ../../source/inc/li:107 ../../source/inc/li_ff:14
#: ../../source/inc/li_proxy:9
msgid "`name`"
msgstr "`name`"

#: ../../source/inc/li:106
msgid ""
"The name of the layeredimage. This is used as part of the names of image "
"components."
msgstr "レイヤー画像の名前で、画像要素の名前の一部として使用されます。"

#: ../../source/inc/li:125
msgid "`attribute_function`"
msgstr "`attribute_function`"

#: ../../source/inc/li:121
msgid ""
"If not None, a function that's called with a set of attributes supplied to "
"the image, and returns the set of attributes used to select layers. This is "
"called when determining the layers to display, after the attribute "
"themselves have been chosen. It can be used to express complex dependencies "
"between attributes or select attributes at random."
msgstr ""
"None を指定するか、画像に渡される属性の set で呼び出され、レイヤーの選択に使"
"用される属性の set を返す関数です。"

#: ../../source/inc/li:128
msgid ""
"Sets whether or not the available area is taken into account as for how "
"children are placed and how they are sized (when they have variable size). "
"If False, the available area is considered, and if True it is not. If None, "
"defaults to :var:`config.layeredimage_offer_screen`."
msgstr ""
"子の配置と (可変サイズである場合) サイズ合わせで利用可能な領域を考慮するかど"
"うか設定します。 False であれば利用可能な領域を考慮し、True であれば考慮しま"
"せん。 None の場合、デフォルトは :var:`config.layeredimage_offer_screen` で"
"す。"

#: ../../source/inc/li:133
msgid ""
"Additional keyword arguments may contain transform properties. If any are "
"present, a transform is created that wraps the result image. Remaining "
"keyword arguments are passed to a Fixed that is created to hold the layer. "
"Unless explicitly overridden, xfit and yfit are set to true on the Fixed, "
"which means it will shrink to the smallest size that fits all of the layer "
"images it is showing."
msgstr ""
"追加のキーワード引数には transofrm プロパティーが含められます。与えられれば "
"Transorm が作成され結果の画像をラップします。残りのキーワード引数はレイヤーを"
"貼り付けるために作成された Fixed に渡されます。明示的な上書きがなければ、 "
"xfit と yfit は Fixed で True に設定され、表示している全てのレイヤー画像に"
"フィットする最小サイズに縮みます。"

#: ../../source/inc/li:140
msgid ""
"A LayeredImage is not a displayable, and can't be used in all the places a "
"displayable can be used. This is because it requires an image name "
"(generally including image attributes) to be provided. As such, it should "
"either be displayed through a scene or show statement, or by an image name "
"string used as a displayable."
msgstr ""
"LayerdImage は displayable ではなく、 displayable が使用可能な全ての場所では"
"使用出来ません。これは (一般的に画像属性を含む) 画像名 の提供が必要なためで"
"す。そういうわけで、 LayerdImage は scene や show ステートメントか、 "
"displayable として使用される画像名の文字列から表示されるべきです。"

#: ../../source/layeredimage.rst:577
msgid ""
":func:`layeredimage.format_function` is a function that is used to format "
"attributes and displayables into image files. It's supplied so you can see "
"how it's documented, and the arguments it takes if you want to supply your "
"own `format_function` to replace it."
msgstr ""
":func:`layeredimage.format_function` は属性と displayable を画像ファイルに"
"フォーマットするための関数です。自身の `format_function` で置き換えたいなら、"
"これがどう記述されるかやどう引数をとるかを参照しましょう。"

#: ../../source/inc/li_ff:5
msgid ""
"This is called to format the information about an attribute or condition "
"into a displayable. This can be replaced by a creator, but the new function "
"should ignore unknown kwargs."
msgstr ""
"これを呼び出して属性や条件を displayable の情報にフォーマットします。制作者に"
"よって置き換えられますが、新しい関数は未知のキーワード引数を無視するはずで"
"す。"

#: ../../source/inc/li_ff:11
msgid "`what`"
msgstr "`what`"

#: ../../source/inc/li_ff:10
msgid ""
"A string giving a description of the thing being formatted, which is used to "
"create better error messages."
msgstr ""
"フォーマットされるものを記述する文字列で、よりよいエラーメッセージを作成する"
"ために使用されます。"

#: ../../source/inc/li_ff:14
msgid "The name of the layeredimage."
msgstr "レイヤー画像の文字列です。"

#: ../../source/inc/li_ff:17
msgid ""
"The group of an attribute, None if not supplied or if it's part of a "
"condition."
msgstr "属性のグループで、 提供されないか条件内での使用なら None になります。"

#: ../../source/inc/li_ff:21
msgid "The variant argument to the group, or None if it is not supplied."
msgstr "グループへのバリエーション引数で、提供されなければ None です。"

#: ../../source/inc/li_ff:25
msgid "The attribute itself."
msgstr "属性です。"

#: ../../source/inc/li_ff:28
msgid "Either a displayable or string."
msgstr "displayable または文字列です。"

#: ../../source/inc/li_ff:31
msgid "The image_format argument of the LayeredImage."
msgstr "LayerdImage の image_format 引数です。"

#: ../../source/inc/li_ff:33
msgid ""
"If `image` is None, then `name`, `group` (if not None), `variant` (if not "
"None), and `attribute` are combined with underscores to create `image`, "
"which will then be a string."
msgstr ""
"`image` が None なら、 `name` と (あれば) `group`,(あれば)  `variant`, "
"`attribute` がアンダースコアで結合され、 `image` の文字列になります。"

#: ../../source/inc/li_ff:37
msgid ""
"If `images` is a string, and `image_format` is not None, `image` is "
"formatted into the string to get the final displayable."
msgstr ""
"`images` が文字列で、 `image_format` が None でなければ、 `image` は最終的な "
"displayable を所得する文字列にフォーマットされます。"

#: ../../source/inc/li_ff:40
msgid ""
"So if `name` is \"eileen\", `group` is \"expression\", and `attribute` is "
"\"happy\", `image` would be set to \"eileen_expression_happy\". If "
"`image_format` is \"images/{image}.png\", the final image Ren'Py finds is "
"\"images/eileen_expression_happy.png\". But note that it would have found "
"the same image without the format argument."
msgstr ""
"つまり `name` が \"eileen\", `group` が \"expression\", `attribute` が "
"\"happy\" なら、 `image` は \"eileen_expression_happy\" に設定されます。 "
"`image_format` が \"images/{image}.png\" なら、Ren'Py が見つける最終的な画像"
"は \"images/eileen_expression_happy.png\" です。ただしフォーマット引数なしで"
"も同じ画像を見るので注意してください。"

#: ../../source/layeredimage.rst:585
msgid "Proxying Layered Images"
msgstr "Proxying Layered Images"

#: ../../source/layeredimage.rst:587
msgid ""
"Sometimes, it's necessary to proxy a layered image, to use the same layered "
"image in multiple places. One reason for this would be to have the same "
"sprite at multiple sizes, while another would be to use it as a side image."
msgstr ""
"レイヤー画像を代用して同じレイヤー画像を複数の場所で使用しなければならないと"
"きがあります。これは例えば、複数のサイズの同じスプライトを作ったり、サイドイ"
"メージとしてもう一つを使用するためです。"

#: ../../source/layeredimage.rst:592
msgid ""
"The :func:`LayeredImageProxy` object does this, taking one layered image and "
"duplicating it somewhere else."
msgstr ""
":func:`LayeredImageProxy` オブジェクトでこれを行います。レイヤー画像を1つ受け"
"取って複製します。"

#: ../../source/layeredimage.rst:595
msgid "For example::"
msgstr "例 ::"

#: ../../source/layeredimage.rst:599
msgid ""
"creates a duplicate of the image that can be displayed independently. This "
"also takes a transform argument that makes it useful to position a side "
"image, like this::"
msgstr ""
"独立して表示出来る画像の複製を作成します。これはこのように transform を引数に"
"受け取り、サイドイメージを配置するのに便利です。 ::"

#: ../../source/inc/li_proxy:5
msgid ""
"This is an image-like object that proxies attributes passed to it to another "
"layered image."
msgstr ""
"これは画像のようなオブジェクトです。渡される属性を他のレイヤー画像に中継しま"
"す。"

#: ../../source/inc/li_proxy:9
msgid "A string giving the name of the layered image to proxy to."
msgstr "中継するレイヤー画像の名前の文字列です。"

#: ../../source/inc/li_proxy:12
msgid "`transform`"
msgstr "`transform`"

#: ../../source/inc/li_proxy:12
msgid ""
"If given, a transform or list of transforms that are applied to the image "
"after it has been proxied."
msgstr ""
"与えるなら、中継先の画像に適用される transform または transform のリストで"
"す。"

#: ../../source/layeredimage.rst:608
msgid "Selecting attributes to display"
msgstr "表示する属性の選択"

#: ../../source/layeredimage.rst:610
msgid ""
"Several factors influence what gets displayed following a given ``show`` "
"instruction. To provide more clarity as to what happens in which order, this "
"section showcases the life of a set of attributes, from the show instruction "
"to the on-screen display."
msgstr ""
"指定された ``show`` 命令の後に何が表示されるかにはいくつかの要素が影響しま"
"す。どのような順番で何が起こるかをより明確にするために、このセクションでは "
"show 命令から画面上の表示まで、一連の属性の一生を紹介します。"

#: ../../source/layeredimage.rst:614
msgid ""
"The ``show`` statement provides the initial set of attributes, following the "
"image tag."
msgstr ""
"``show`` ステートメントは画像タグに続いて最初の属性のセットを提供します。"

#: ../../source/layeredimage.rst:616
msgid ""
"If a :var:`config.adjust_attributes` function exists to match the image tag, "
"it is called, and returns a potentially different set of attributes. If so, "
"it replaces the former set, which is forgotten."
msgstr ""
":var:`config.adjust_attributes` 関数があり、その画像タグに一致すれば呼び出さ"
"れて属性のセットを返します。これは変更された可能性があります。もしそうであれ"
"ば以前のセットは置き換えられ、忘れられます。"

#: ../../source/layeredimage.rst:619
msgid ""
"If a :var:`config.default_attribute_callbacks` function exists and if its "
"trigger conditions are met, it is called and potentially adds attributes to "
"the set."
msgstr ""
":var:`config.default_attribute_callbacks` 関数があって、その実行条件が満たさ"
"れていれば、呼び出されてそのセットに属性が追加される可能性があります。"

#: ../../source/layeredimage.rst:621
msgid ""
"The two previous stages are not specific to layeredimages, because it is "
"only after this stage that renpy determines which image or layeredimage will "
"be called to display. For that reason, the given set of attributes must lead "
"to one, and only one, defined image (or layeredimage, Live2D...), using the "
"behavior described in the :ref:`show statement section<show-statement>`."
msgstr ""
"前の2つの段階はレイヤー画像に限定されません。この後の段階で Ren'Py はどの画像"
"またはレイヤー画像を呼び出して表示するか決定します。そのために、与えられた属"
"性のセットは、 :ref:`show statement section<show-statement>` で説明されている"
"動作で、1つの、そして唯一の定義された画像 ( または layeredimage, Live2D...) "
"につながる必要があります。"

#: ../../source/layeredimage.rst:626
msgid ""
"Then, the provided attributes are combined with the attributes defined in "
"the layeredimage, discarding some previously shown attributes and conserving "
"others. This is also the point where unrecognized attributes are detected "
"and related errors are raised. If no such error is raised, the new "
"attributes, along with those which were not discarded, will be recognized by "
"renpy as the set of attributes associated with that image tag. This "
"computing takes some of the incompatibility constraints into account, but "
"not all. For instance incompatibilities due to attributes being in the same "
"non-multiple group will trigger at this point in time, but the if_any/if_all/"
"if_not clauses will not. That's why an attribute called but negated by such "
"a clause will be considered active by renpy, and will for example become "
"visible without having to be called again if at some point the condition of "
"the if\\_x clause is no longer fulfilled."
msgstr ""
"次に、提供された属性はレイヤー画像に定義された属性と結合され、先に表示されて"
"いた属性のいくつかは破棄され、他の属性は保存されます。認識されない属性はここ"
"で検出され、エラーが発生します。そのようなエラーが発生しなければ、新しい属性"
"と捨てられなかった属性が renpyによってその画像タグに関連する属性のセットとし"
"て認識されます。この計算では非互換性の制約のいくつかを考慮に入れていますが、"
"すべてではありません。例えば、属性が同じ非 multiple グループにあることによる"
"非互換性はこの時点で発生しますが、if_any/if_all/if_not 節ではエラーは発生しま"
"せん。そのため、このような節で否定された属性も renpy ではアクティブとみなさ"
"れ、例えば、 if\\_x 節の条件が満たされなくなった時点で再度呼び出されなくとも"
"表示されるようになるのです。"

#: ../../source/layeredimage.rst:638
msgid ""
"If an attribute_function has been provided to the layeredimage, it is called "
"with the set of remaining attributes. It returns a potentially different set "
"of attributes."
msgstr ""
"attribute_function がレイヤー画像に提供されている場合、残りの属性のセットで呼"
"び出されます。これは潜在的に異なる可能性のある属性のセットを返します。"

#: ../../source/layeredimage.rst:641
msgid ""
"This set is once again confronted with the incompatibility constraints of "
"the layeredimage, this time in full. That is the final stage, and remaining "
"attributes are called into display."
msgstr ""
"このセットは、もう一度レイヤーイメージの非互換性の制約に直面します。これが最"
"終段階であり、残っている属性が表示されます。"

#~ msgid "The name of the group."
#~ msgstr "グループの名前です。"
