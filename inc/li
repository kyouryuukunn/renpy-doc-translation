.. Automatically generated file - do not modify.

.. function:: Attribute(group, attribute, image=None, default=False, **kwargs)
    
    This is used to represent a layer of an LayeredImage that is
    controlled by an attribute. A single attribute can control
    multiple layers, in which case all layers corresponding to
    that attribute will be displayed.
    
    `group`
        A string giving the group the attribute is part of. This
        may be None, in which case a group with the same name as
        the attribute is created.
    
    `attribute`
        A string giving the name of the attribute.
    
    `image`
        If not None, this should be a displayable that is displayed when
        this attribute is shown.
    
    `default`
        If True, and no other attribute for the group is selected,
        this attribute is.
    
    The following keyword arguments are also known:
    
    `at`
        A transform or list of transforms that are applied to the
        image.
    
    `if_all`
        An attribute or list of attributes. The displayable is only shown
        if all of these are showing.
    
    `if_any`
        An attribute or list of attributes. if not empty, the displayable is only shown
        if any of these are showing.
    
    `if_not`
        An attribute or list of attributes. The displayable is only shown
        if none of these are showing.
    
    Other keyword arguments are interpreted as transform properties. If
    any are present, a transform is created that wraps the image. (For
    example, pos=(100, 200) can be used to offset the image by 100 pixels
    horizontally and 200 vertically.)
    
    If the `image` parameter is omitted or None, and the LayeredImage
    has been given the `image_format` parameter, the image_format is used
    to generate an image filename.

.. function:: Condition(condition, image, **kwargs)
    
    This is used to represent a layer of an LayeredImage that
    is controlled by a condition. When the condition is true,
    the layer is displayed. Otherwise, nothing is displayed.
    
    `condition`
        This should be a string giving a Python condition that determines
        if the layer is displayed.
    
    `image`
        If not None, this should be a displayable that is displayed when
        the condition is true.
    
    `if_all`
        An attribute or list of attributes. The condition is only evaluated
        if all of these are showing.
    
    `if_any`
        An attribute or list of attributes. If not empty, the condition is only evaluated
        if any of these are showing.
    
    `if_not`
        An attribute or list of attributes. The condition is only evaluated
        if none of these are showing.
    
    `at`
        A transform or list of transforms that are applied to the
        image.
    
    Other keyword arguments are interpreted as transform properties. If
    any are present, a transform is created that wraps the image. (For
    example, pos=(100, 200) can be used to offset the image by 100 pixels
    horizontally and 200 vertically.)

.. function:: LayeredImage(attributes, at=[], name=None, image_format=None, format_function=None, attribute_function=None, **kwargs)
    
    This is an image-like object that, when shown with the proper set of
    attributes, shows a displayable created by compositing together the
    displayables associated with those attribute.
    
    `attributes`
        This must be a list of Attribute objects. Each Attribute object
        reflects a displayable that may or may not be displayed as part
        of the image. The items in this list are in back-to-front order,
        with the first item further from the viewer and the last
        closest.
    
    `at`
        A transform or list of transforms that are applied to the displayable
        after it is parameterized.
    
    `name`
        The name of the attribute image. This is used as part of the names
        of image components.
    
    `image_format`
        When a given image is a string, and this is supplied, the image name
        is interpolated into `image_format` to make an image file. For example,
        "sprites/eileen/{image}.png" will look for the image in a subdirectory
        of sprites. (This is not used by auto groups, which look for images and
        not image files.)
    
    `format_function`
        A function that is used instead of `layeredimage.format_function` to format
        the image information into a displayable.
    
    `attribute_function`
        If not None, a function that's called with a set of attributes supplied to
        the image, and returns the set of attributes used to select layers. This is
        called when determining the layers to display, after the attribute themselves
        have been chosen. It can be used to express complex dependencies between attributes
        or select attributes at random.
    
    Additional keyword arguments are passed to a Fixed that is created to hold
    the layer. Unless explicitly overridden, xfit and yfit are set to true on
    the Fixed, which means it will shrink to the smallest size that fits all
    of the layer images it is showing.
    
    A LayeredImage is not a displayable, and can't be used in all the
    places a displayable can be used. This is because it requires an image
    name (generally including image attributes) to be provided. As such,
    it should either be displayed through a scene or show statement, or by
    an image name string used as a displayable.

