.. Automatically generated file - do not modify.

.. function:: Call(label, *args, **kwargs)
    
    Ends the current statement, and calls `label`. Arguments and
    keyword arguments are passed to :func:`renpy.call`.

.. function:: Hide(screen, transition=None)
    
    This causes the screen named `screen` to be hidden, if it is shown.
    
    `transition`
        If not None, a transition that occurs when hiding the screen.

.. function:: Jump(label)
    
    Causes control to transfer to `label`.

.. function:: NullAction(*args, **kwargs)
    
    Does nothing.
    
    This can be used to make a button responsive to hover/unhover events,
    without actually doing anything.

.. function:: Return(value=None)
    
    Causes the current interaction to return the supplied value, which
    must not be None. This is often used with menus and imagemaps, to
    select what the return value of the interaction is. If the screen
    was called using the ``call screen`` statement, the return value
    is placed in the `_return` variable.
    
    When in a menu, this returns from the menu. (The value should be
    None in this case.)

.. function:: Show(screen, transition=None, *args, **kwargs)
    
    This causes another screen to be shown. `screen` is a string
    giving the name of the screen. The arguments are
    passed to the screen being shown.
    
    If not None, `transition` is use to show the new screen.

.. function:: ShowTransient(screen, transition=None, *args, **kwargs)
    
    Shows a transient screen. A transient screen will be hidden when
    the current interaction completes. The arguments are
    passed to the screen being shown.
    
    If not None, `transition` is use to show the new screen.

.. function:: ToggleScreen(screen, transition=None, *args, **kwargs)
    
    This toggles the visibility of `screen`. If it is not currently
    shown, the screen is shown with the provided arguments. Otherwise,
    the screen is hidden.
    
    If not None, `transition` is use to show and hide the screen.

