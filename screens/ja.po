# Japanese translation for renpy-doc
# Copyright (c) 2013 Rosetta Contributors and Canonical Ltd 2013
# This file is distributed under the same license as the renpy-doc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: renpy-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-01 16:00+0900\n"
"PO-Revision-Date: 2025-03-01 16:22+0900\n"
"Last-Translator: kyouryuukunn <akakyouryuu@gmail.com>\n"
"Language-Team: Japanese <ja@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2014-06-21 06:27+0000\n"
"X-Generator: Poedit 2.2.4\n"

#: ../../source/screens.rst:5
msgid "Screens and Screen Language"
msgstr "スクリーンとスクリーン言語"

#: ../../source/screens.rst:7
msgid ""
"The things that a user sees when looking at a Ren'Py game can be divided "
"into images and user interface. Images are displayed to the user using the "
"scene, show, and hide statements, and are generally part of the story being "
"told. Everything else the user sees is part of the user interface, which is "
"customized using screens."
msgstr ""
"Ren'Py のゲームを見ると、ゲームを画像とユーザーインターフェイスの2つの部分に"
"分割できることに気づくでしょう。画像は scene、show、hide ステートメントを使っ"
"てユーザーに表示し、一般には進行中のストーリーの一部となっています。それ以外"
"の部分はユーザーインターフェイスの一部で、スクリーンを使ってカスタマイズしま"
"す。"

#: ../../source/screens.rst:13
msgid "Screens can be displayed in four ways:"
msgstr "スクリーンは4つの方法で表示できます:"

#: ../../source/screens.rst:15
msgid ""
"Implicitly, when script statements execute. For example, the say statement "
"will cause the `say` screen to be displayed."
msgstr ""
"スクリプトのステートメントが実行されるときに暗黙的に表示する。例えば、say ス"
"テートメントが実行されると、 `say` スクリーンが表示されます。"

#: ../../source/screens.rst:17
msgid ""
"Automatically. For example, Ren'Py will display the `main_menu` screen when "
"it starts running, or when the user returns to the main menu."
msgstr ""
"自動的に表示する。例えば Ren'Py はゲーム開始時やユーザーがメインメニューに戻"
"るとき、 `main_menu` スクリーンを表示します。"

#: ../../source/screens.rst:20
msgid ""
"As an action, associated with a button, mouse button, or keyboard key. By "
"default, the `save` screen is shown when the user right-clicks or presses "
"escape. It's also possible to define an on-screen button that shows the "
"`save` screen."
msgstr ""
"ボタン、マウスのボタン、キーボードのキーによるアクションで表示する。デフォル"
"トでは、ユーザーが右クリックするか、エスケープキーが押された時に `save` スク"
"リーンが表示されます。他にも、スクリーン上にボタンを定義して `save` スクリー"
"ンを表示も可能です。"

#: ../../source/screens.rst:24
msgid "Explicitly, using statements that cause screens to be shown."
msgstr "明示的に、ステートメントを使ってスクリーンを表示する。"

#: ../../source/screens.rst:26
msgid "More than one screen can be shown at a time."
msgstr "一度に複数のスクリーンを表示できます。"

#: ../../source/screens.rst:28
msgid ""
"Screens have two main functions. The first is to display information to the "
"user. Information can be displayed using text, bars, and images. Some of the "
"information displayed in this manner is vital to gameplay. The `say` screen, "
"for example, is used to display dialogue to the user, including the "
"character's name and what she is saying."
msgstr ""
"スクリーンには主に2つの機能があります。1つはユーザーへの情報掲示です。情報は"
"テキスト、バー、画像を使って示せます。ゲームのプレイにおいて、一部の情報のこ"
"のような形での掲示は重要です。 `say` スクリーンで例を挙げると、これを使用して"
"キャラクター名と彼女が話している内容を含んだダイアログをユーザーに表示しま"
"す。"

#: ../../source/screens.rst:34
msgid ""
"The other thing a screen can do is to allow the user to interact with the "
"game. Buttons and bars allow the user to invoke actions and adjust values. "
"Ren'Py includes a pool of pre-defined actions, allowing the user to advance "
"the game, control preferences, load and save games, and invoke many other "
"actions. A game-maker can also write new actions in Python."
msgstr ""
"他にスクリーンはユーザーからの入力を受け付けてゲームに反映できます。ボタンや"
"バーを使ってアクションを起こしたり値を調整したりできます。Ren'Py には事前に定"
"義されているアクションのプールがあり、ゲームを進められるようにしたり、設定を"
"調整したり、ゲームをロード・セーブしたり、その他多数のアクションを発生させた"
"りできます。ゲーム製作者も新しいアクションを Python で書けます。"

#: ../../source/screens.rst:41
msgid ""
"Screens are updated at the start of each interaction, and each time an "
"interaction is restarted. Note that a ``with None`` statement does not cause "
"an interaction to happen, and hence won't update a screen. A ``with "
"Pause(0)`` will be enough to trigger one, if necessary."
msgstr ""
"スクリーンはゲームがインタラクションを開始した時、及びインタラクションが再開"
"されるたびに更新されます。 ``with None`` ステートメントはインタラクションを発"
"生させず、スクリーンを更新させないので注意してください。必要であれば ``with "
"Pause(0)`` でスクリーンを更新します。"

#: ../../source/screens.rst:46
msgid ""
"A screen has a scope associated with it, giving values to some variables. "
"There are different kinds of variables, in screens, which are resolved as "
"shown in the following list:"
msgstr ""
"スクリーンはそれに関連付けられたスコープを持ち、変数に値を与えます。スクリー"
"ンには様々な種類の変数があり、次のリストに示すように名前解決されます。 :"

#: ../../source/screens.rst:49
msgid ""
"First are local variables. These only exist in a screen that is being "
"included in another with the :ref:`use <sl-use>` statement instead of being "
"shown (or called) on its own. They are very similar with screen variables "
"(see below), and created the same way, except that local variables can only "
"be accessed by the used screen. Those are set using :class:"
"`SetLocalVariable`, among other actions, or by a python block or line in the "
"used screen. Actions such as :class:`SetScreenVariable` will *not work* on "
"local variables."
msgstr ""
"最初はローカル変数です。これらは自身が表示(または呼び出し)される代わりに :"
"ref:`use <sl-use>` ステートメントで他の物に含まれて使用されいるスクリーンにの"
"みあります。それらは後述のスクリーン変数にかなりに類似しており、同様に作成さ"
"れますが、例外としてローカル変数は使用されているスクリーンからのみアクセス出"
"来ます。それらはその他のアクションの中からはとりわけ :class:"
"`SetLocalVariable` で、または使用されているスクリーン中の python ブロックや行"
"で設定されます。 :class:`SetScreenVariable` のようなアクションはローカル変数"
"に対しては *動作しません。*"

#: ../../source/screens.rst:56
msgid ""
"Local parameters are the parameters taken by the used screen. They live in "
"the same scope as local variables, and follow the same behavior and "
"constraints as screen parameters - see below."
msgstr ""
"ローカルパラメーターは使用されるスクリーンによって所得されるパラメーターで"
"す。それらはローカル変数と同じスコープにあり、スクリーンパラメーターと同じ動"
"作と制約に従います。下記参照"

#: ../../source/screens.rst:60
msgid ""
"If a name cannot be resolved among local variables - or if we are not in a "
"screen being :ref:`used <sl-use>` by another - the name is searched for in "
"screen variables. These are variables created with the in-screen :ref:`sl-"
"default` or :ref:`sl-python` statements, in the top-level screen. Screen "
"variables can be set through the :class:`SetScreenVariable` action, among "
"others, or by a python block or line in the top-level screen, or any used "
"screen if no local variable has the same name."
msgstr ""
"ローカル変数内で名前が解決できないまたは :ref:`use <sl-use>` により他のものに"
"使用されているスクリーンでなければ、その名前はスクリーン変数から探されます。"
"これらの変数は一番外側のスクリーン内で :ref:`sl-default` や :ref:`sl-python` "
"ステートメントにより作成されます。スクリーン変数はとりわけ :class:"
"`SetScreenVariable` アクションや、一番外側のスクリーンまたは同じ名前のローカ"
"ル変数がない使用されたスクリーンの python ブロックや行で設定されます。"

#: ../../source/screens.rst:67
msgid ""
"Screen parameters (that is, values defined and passed through the "
"parentheses of the screen statement) live in the same scope as screen "
"variables (that is, they can't have the same name), but they can't be set or "
"edited through actions, since they will be reset to their original value at "
"arbitrary times, including every time an action is executed. So, if their "
"value were edited through the :class:`SetScreenVariable` action (or any "
"other action really), it would be reset immediately afterwards. This is also "
"the case for variables defined in in-screen python blocks, since these "
"blocks are executed at arbitrary times, as opposed to the in-screen :ref:"
"`default <sl-default>` statement which executes only at the time the screen "
"gets shown."
msgstr ""
"スクリーンパラメータ（screen ステートメントの括弧の中で定義され、渡される値）"
"はスクリーン変数と同じスコープに存在します（つまり、同じ名前を持つことはでき"
"ません）が、アクションによって設定または編集できません。これはアクションが実"
"行されるたびを含め、任意の回数元の値にリセットされるためです。そのためもし :"
"class:`SetScreenVariable` アクション (または他のアクション) によって値が編集"
"された場合、その直後にリセットされるでしょう。これは、スクリーン内の Python "
"ブロックで定義された変数の場合もそれらのブロックが任意の回数実行されるため同"
"様です。対照的に、スクリーン内の :ref:`default <sl-default>` ステートメントは"
"スクリーンが表示される時にのみ実行されます。"

#: ../../source/screens.rst:77
msgid ""
"In last resort, a variable name is looked for in the general store, where "
"all of Ren'Py's global variables are. Such variables can be set through the :"
"class:`SetVariable` action, among others."
msgstr ""
"最後の場所として、一般的な store つまり Ren'Py のグローバル変数のすべてがある"
"場所から変数の名前を探します。そのような変数はとりわけ :class:`SetVariable` "
"アクションによって設定されます。"

#: ../../source/screens.rst:82
msgid ""
"If you want an action to set a variable inside a screen, and you want that "
"screen to be sometimes shown directly and sometimes used inside another, "
"use :class:`SetLocalVariable`. It will be far less efficient, but it will "
"work in both cases."
msgstr ""
"時に直接表示され、時に他のものに使用されるスクリーン内部の変数を設定するアク"
"ションが欲しければ、 :class:`SetLocalVariable` を使用してください。かなり非効"
"率的ですが、両方のケースで動作します。"

#: ../../source/screens.rst:86
msgid ""
"**Screens must not cause side effects that are visible from outside the "
"screen.** Ren'Py will run a screen multiple times, as it deems necessary. It "
"runs a screen as part of the image prediction process, before the screen is "
"first shown. As a result, if running a screen has side effects, those side "
"effects may occur at unpredictable times."
msgstr ""
"**スクリーンのコードはスクリーン外への副作用を起こしてはいけません** Ren'Py "
"はスクリーンが最初に表示される前に画像予測処理の一部として必要なら何度もスク"
"リーンのコードを実行します。結果としてスクリーンのコードが副作用を持つなら、"
"それが何回実行されるかはわかりません。"

#: ../../source/screens.rst:93
msgid ""
"**Using Python generators in screens may cause unpredictable results.** This "
"traces back to an issue with the way the Python interpreter compiles Python "
"source code that will be used in a screen context. Generators can be used in "
"Python functions called from a screen, but not in the screen itself."
msgstr ""
"**スクリーン内でのPython のジェネレーターの使用は予想外な結果になるかもしれま"
"せん** これは Python インタプリタがスクリーンコンテンツ内で使用される python "
"コードをコンパイルする方法による問題に由来します。スクリーンから呼び出される "
"Python 関数ではジェネレーターは使用可能ですが、スクリーン自体ではできません。"

#: ../../source/screens.rst:102
msgid "Screen Language"
msgstr "スクリーン言語"

#: ../../source/screens.rst:104
msgid ""
"The screen language is a mostly-declarative way of displaying screens. It "
"consists of a statement that declares a new screen, statements that add "
"displayables to that screen, and control statements."
msgstr ""
"スクリーン言語はほとんどが表示するスクリーンを宣言する方法であり、新しい "
"displayable の宣言、スクリーンへの  displayable の追加、ステートメントを制御"
"するステートメントで構成されます。"

#: ../../source/screens.rst:109
msgid "Here's an example of a screen::"
msgstr "ここにスクリーンの例があります。 ::"

#: ../../source/screens.rst:119
msgid ""
"The first line of this is a screen statement, a Ren'Py language statement "
"that's used to declare a screen. The name of the screen is `say`, so this is "
"the screen that's used to display dialogue. It takes two parameters, `who` "
"and `what`."
msgstr ""
"この最初の行は screen ステートメントで、スクリーンを宣言するために使用される "
"Ren'Py ステートメントです。スクリーンの名前は `say` なので、これは台詞を表示"
"するために使用されるスクリーンです。 2 つのパラメーター `who`, `what` を受け"
"取ります。"

#: ../../source/screens.rst:124
msgid ""
"The screen contains a window, which has been given the id of \"window\". "
"This window contains a vertical box, and the spacing inside that box is 10 "
"pixels. It contains two text fields, one displaying the name of the speaker, "
"and the displaying what is being spoken."
msgstr ""
"このスクリーンには「 window 」の id を持つウィンドウがあります。このウィンド"
"ウは縦長の箱を持ち、その中に 10 ピクセルの空白を含みます。さらにその箱には二"
"つのテキスト用の領域があり、一つは話し手の名前、もう一つは話している内容を表"
"示するものです。"

#: ../../source/screens.rst:130
msgid "Screen Language Syntax"
msgstr "スクリーン言語の構文"

#: ../../source/screens.rst:132
msgid ""
"Most screen language statements share a common syntax. (Some of the control "
"statements have other syntaxes.)  A statement starts at the beginning of a "
"line, with a keyword that introduces the statement."
msgstr ""
"ほとんどのスクリーン言語は共通の構文を持ちます ( 制御用ステートメントのいくつ"
"かは違う構文を持ちますが )。 ステートメントはステートメントを導入するキーワー"
"ドで行の最初から始まります。"

#: ../../source/screens.rst:136
msgid ""
"If a statement takes parameters, they immediately follow the keyword. The "
"parameters are space-separated simple expressions, unless otherwise noted."
msgstr ""
"ステートメントがパラメーターを受け取るなら、キーワードの直後に続きます。パラ"
"メーターはスペースで区切られた単純式で、そうでないなら記載します。"

#: ../../source/screens.rst:140
msgid ""
"The positional parameters are followed by a property list. A property "
"consists of the property name, followed by the value of that property. "
"Property values are simple expressions, unless otherwise noted. A property "
"list is a space-separated list of these properties."
msgstr ""
"位置パラメーターの後にはプロパティーリストが続きます。プロパティーはプロパ"
"ティーの名前とそれに続くそのプロパティーの値で構成されます。プロパティーの値"
"は特に記載がなければ単純式です。プロパティーリストはスペースで区切られた一連"
"のプロパティーです。"

#: ../../source/screens.rst:145
msgid ""
"If a statement ends with a colon ``:``, then it takes a block. Each line in "
"a block may be one of two things:"
msgstr ""
"ステートメントがコロン ``:`` で終るとその後にブロックが続きます。ブロックの各"
"行は以下の二つのどちらかです。 :"

#: ../../source/screens.rst:148
msgid "A property list."
msgstr "プロパティーリスト"

#: ../../source/screens.rst:149
msgid "A screen language statement."
msgstr "スクリーン言語のステートメント"

#: ../../source/screens.rst:154
msgid "Screen Statement"
msgstr "screen ステートメント"

#: ../../source/screens.rst:156
msgid ""
"The ``screen`` statement is a Ren'Py script language statement that is used "
"to declare a new screen. It is parsed using the screen language common "
"syntax."
msgstr ""
"`screen` ステートメントは新しいスクリーンを宣言するための Ren'Py のスクリプト"
"言語の一つで、スクリーン言語共通の文法で解釈されます。"

#: ../../source/screens.rst:160
msgid ""
"It takes one parameter, the name of the screen. This is a name, not an "
"expression. It takes the following properties:"
msgstr ""
"パラメーターを一つ受け取り、それはスクリーンの名前です。これは名前であって、"
"式ではありません。以下のプロパティーも受け取ります。 :"

#: ../../source/screens.rst:165
msgid ""
"If True, the screen is modal. A modal screen prevents the user from "
"interacting with displayables below it, except for the default keymap. This "
"is evaluated once, when the game starts."
msgstr ""
"True ならそのスクリーンはモーダルです。モーダルなスクリーンはデフォルトのキー"
"マップを除いて、ユーザーがその下にある displayable に作用できないようにしま"
"す。これはゲーム開始時に一度評価されます。"

#: ../../source/screens.rst:172
msgid ""
"An expression that determines whether the screen is sensitive or not. This "
"expression is evaluated at least once per interaction."
msgstr ""
"ボタンが有効かどうかを決定する式です。この式はインテラクション毎に少なくとも"
"一回評価されます。 "

#: ../../source/screens.rst:177
msgid ""
"Parsed as a name, not an expression. This specifies a tag associated with "
"this screen. Showing a screen replaces other screens with the same tag. This "
"can be used to ensure that only one screen of a menu is shown at a time, in "
"the same context."
msgstr ""
"式ではなく名前として解釈されます。これはこのスクリーンと関連づけられるタグを"
"指定します。スクリーンの表示は同じタグの他のスクリーンを置き換えます。これを"
"使用して一つのコンテキストには同時に一つのメニューのスクリーンのみが表示され"
"るようにできます。"

#: ../../source/screens.rst:184
msgid ""
"This controls how close to the user a screen is displayed. The larger the "
"number, the closer the screen is displayed to the user. It defaults to 0."
msgstr ""
"これはスクリーンがどれぐらいユーザーに近いかを制御します。数字が大きいほどス"
"クリーンはユーザーの近くに表示されます。デフォルトでは 0 です。"

#: ../../source/screens.rst:190
msgid ""
"If present, this should be a string or list of strings giving the variant of "
"screen to be defined. See :ref:`screen-variants`."
msgstr ""
"与えられるならこれは定義されるスクリーン variant 名の文字列または文字列のリス"
"トです。 :ref:`screen-variants` を参照してください。"

#: ../../source/screens.rst:195
msgid ""
"A string that's used to provide a prefix for the style for the children of "
"this screen, as :ref:`described below <style-prefix>`."
msgstr ""
":ref:`後述のように <style-prefix>` このスクリーンの子のスタイルに接頭辞を与え"
"る文字列です。"

#: ../../source/screens.rst:200
msgid ""
"A string giving the name of the layer the screen is shown on by default."
msgstr "そのスクリーンが表示されるデフォルトのレイヤー名の文字列です。"

#: ../../source/screens.rst:205
msgid ""
"If true, roll forward will be enabled when the screen is used in a ``call "
"screen`` statement. If false, roll forward is disabled, and if None or not "
"given, the value of :var:`config.call_screen_roll_forward` is used."
msgstr ""
"True なら、そのスクリーンが ``call screen`` ステートメントで呼び出されたとき"
"ロールフォワードが有効化されます。 False なら無効、 None または未指定ならば :"
"var:`config.call_screen_roll_forward` の値が使用されます。"

#: ../../source/screens.rst:210
msgid ""
"When roll forwarding from a ``call screen`` statement, return values and "
"terminal jumps are preserved, but other side effects will not occur. This "
"means that if the screen only contains :func:`Jump` and :func:`Return` "
"actions, it's safe to enable `roll_forward`. Other actions may have side-"
"effects that will not occur during the roll_forward."
msgstr ""
"``call screen`` ステートメントからロールフォワードする場合、戻り値やターミナ"
"ルジャンプは保持されますが、その他の副作用は発生しません。つまり、スクリーン"
"が :func:`Jump` と :func:`Return` アクションのみで構成されている場合には、 "
"`roll_forward` を有効しても安全です。その他のアクションは副作用を持つかもしれ"
"ませんが、 `roll_forward` 中は発生しません。"

#: ../../source/screens.rst:225
msgid "A screen can take a parameter list::"
msgstr "スクリーンはパラメーターリストも受け取れます。 ::"

#: ../../source/screens.rst:230
msgid ""
"If a screen has no parameters, it still should be given empty parentheses. "
"If any other screen ``use``\\ s a screen with no parentheses, the difference "
"in behavior are described in the section concerning :ref:`the use statement "
"<sl-use>`. If no other screen ``use`` a given screen, not giving parentheses "
"to that screen leads to pure inefficiency in the way Ren'py works "
"internally, see the :doc:`screen optimization section <screen_optimization>` "
"concerning parameters."
msgstr ""
"もしスクリーンにパラメータがなくても空の括弧を与えるべきです。他のスクリーン"
"が括弧のないスクリーンを ``use`` で使用したときの動作の違いは :ref:`use ス"
"テートメント <sl-use>` に関するセクションで説明されています。他のスクリーン"
"が ``use`` で使用しなくても、そのスクリーンに括弧を与えないと、 Ren'Pyの内部"
"で動作する方法において、純粋に非効率になります。パラメータに関する :doc:`スク"
"リーン言語の最適化 <screen_optimization>` セクションを参照してください。"

#: ../../source/screens.rst:241
msgid "User Interface Statements"
msgstr "ユーザーインターフェイス・ステートメント"

#: ../../source/screens.rst:243
msgid ""
"The user interface statements create displayables and add them either to the "
"screen, or to an enclosing displayable. They allow the user to display "
"information, allow the user to interact with the game, or allow the game to "
"react to various events."
msgstr ""
"ユーザーインターフェイスステートメントは displayable を作成してそれをスクリー"
"ンか、これを含めるdisplayable に追加します。ユーザーに情報を表示してゲームに"
"作用したり、ゲームが様々なイベントに反応できるようにします。"

#: ../../source/screens.rst:250
msgid "All user interface statements take the following common properties:"
msgstr ""
"すべてのユーザーインターフェイスステートメントは以下の共通のプロパティーを受"
"け取ります。 :"

#: ../../source/screens.rst:254
msgid ""
"This can be a transform, or a list of transforms, or an anonymous transform "
"(a transform that is defined directly in at) ::"
msgstr ""
"これは transform または transform のリスト、無名の transform ( at 節で直接定"
"義された transform )です。 ::"

#: ../../source/screens.rst:267
msgid ""
"This transforms are used to wrap this displayable. The show, hide, replace, "
"and replaced external events are delivered to a transform if and only if it "
"is added directly to the screen."
msgstr ""
"この transform を使用してこの displayable をラップします。show や hide, "
"replace, replaced の外部イベントは直接スクリーンに加えられた場合のみ が"
"transform に送られます。"

#: ../../source/screens.rst:271
msgid ""
"For example, if a vbox is wrapped in a transform, and added directly to the "
"screen, then events are delivered to that transform. But if a transform "
"wraps a textbutton that is added to the vbox, this second transform is not "
"given events."
msgstr ""
"例えば vbox に transform が適用されて、直接スクリーンに追加されているとイベン"
"トはその transform に送られます。しかしある transform が vbox に追加されてい"
"るテキストボタンに適用されていると、この第二の transform にはイベントが送られ"
"ません。"

#: ../../source/screens.rst:276
msgid ""
"It's possible for a single statement to have both an `at` property and an "
"``at transform``. The property must come first, and is applied first. ::"
msgstr ""
"1つのステートメントが `at` プロパティーと ``at transform`` の両方を持てます。"
"プロパティーは最初にこなければならず、先に適用されます。 ::"

#: ../../source/screens.rst:292
msgid ""
"If given and true, the displayable is focused by default. When multiple "
"displayables have this, the values are compared and the displayable with the "
"greatest default focus becomes the default."
msgstr ""
"True を与えるとその displayable はデフォルトでフォーカスを持つようになりま"
"す。複数の displayable がこれを持つときは、その値が比較されて最大のものをも"
"つ displayable がデフォルトフォーカスを持ちます。"

#: ../../source/screens.rst:296
msgid ""
"The default focus is only used when the last interaction was not a mouse "
"click, mouse movement, or touch."
msgstr ""
"デフォルトフォーカスは最後のインタラクションがマウスクリックやマウスの動き、"
"タッチでないときのみ使用されます。"

#: ../../source/screens.rst:301
msgid ""
"This is used to specify extra alt text for :doc:`self_voicing`. If defined, "
"the extra alt text is spoken to the player when the '?' key is pressed, and "
"self-voicing ie enabled."
msgstr ""
"これを使用して :doc:`self_voicing` 用に extra alt テキストを指定します。定義"
"されていいればセルフボイシングが有効になっているときに '?' キーが押される"
"と、 extra alt テキストがプレイヤーに読み上げられます。"

#: ../../source/screens.rst:305
msgid ""
"The ``extra_alt`` is inherited by all children of the displayable, unless "
"they have a more specific ``extra_alt`` set."
msgstr ""
"この ``extra_alt`` は子に対して ``extra_alt`` が指定されていない限りその "
"displayable のすべての子に継承されます。"

#: ../../source/screens.rst:308
msgid ""
"Extra alt text is intended to provide vision-impaired players with "
"additional information about groups of displayables."
msgstr ""
"extra alt テキストは視覚障害のあるプレーヤーに Displayable のグループに対する"
"追加情報の提供を目的としています。"

#: ../../source/screens.rst:313
msgid ""
"Takes a string or integer, and gives a name to the displayable for focus "
"purposes. Ren'Py looks for structural similarity between focus names when "
"deciding with displayable to give focus to at the start of an interaction. "
"If a box is given a focus name, and the third button in that box is focused "
"at the end of an interaction, the third button of a box with the same will "
"be highlighted at the start of the next interaction."
msgstr ""
"文字列か整数を受け取って displayable にフォーカス用の名前を与えます。Ren'Py "
"はインタラクションの開始時にフォーカスを与える displayable を決定するとき、"
"フォーカスの名前の間に構造的な類似点を探します。例えばある box にフォーカス名"
"が与えられていてその box の三つ目のボタンがインタラクションの最後にフォーカス"
"を所得していれば、同じフォーカス名を持つ box の三つ目のボタンが次のインタラク"
"ションの開始時にハイライトされるます。"

#: ../../source/screens.rst:323
msgid ""
"This is used to specify a group prefix for :doc:`self_voicing`. When self-"
"voicing is enabled, a group prefix is spoken the first time a displayable "
"with the same group prefix is focused, but will not be spoken again until a "
"displayable with a different group prefix is focused."
msgstr ""
"これを使用して :doc:`self_voicing` のグループ接頭辞を指定します。セルフボイシ"
"ングが有効な場合、同じグループ接頭辞の Displayable が最初にフォーカスされると"
"グループ接頭辞が朗読されま、異なるグループ接頭辞を持つ Displayable がフォーカ"
"スされるまで再度朗読されることはありません。"

#: ../../source/screens.rst:328
msgid ""
"The ``group_alt`` is inherited by all children of the displayable, unless "
"they have a more specific ``group_alt`` set."
msgstr ""
"``group_alt`` は、子に指定されていなければすべてのその Displayable の子に継承"
"されます。"

#: ../../source/screens.rst:333
msgid ""
"An identifier for the user-interface statement. When a screen is shown, "
"property values can be supplied for the displayables with a given "
"identifier. Some screens will require that a displayable with a given "
"identifier is created."
msgstr ""
"ユーザーインターフェイスステートメント用の識別子です。スクリーン表示時に、指"
"定された id を持つ displayable にプロパティーの値を渡せます。いくつかのスク"
"リーンでは指定された id を持つ displayable 作成が必要とされます。"

#: ../../source/screens.rst:338
msgid ""
"When a displayable is created with an id, the id is stored as a string ion a "
"attribute named id on the Displayable object."
msgstr ""
"displayable が id 指定で作成されると、その id はその Displayable オブジェクト"
"の id という名前の属性に文字列として格納されます。"

#: ../../source/screens.rst:343
msgid ""
"If true, when a property is provided by both the screen and a displayble "
"identifier, the screen property is used. If false, the default, the "
"displayable property is used. (This can be used to decide if the screen "
"overrides properties set by a Character.)"
msgstr ""
"True なら、スクリーンと Displayable の識別子がプロパティーに同時に与えられた"
"とき、スクリーンのプロパティーが使用されます。デフォルトは False であり "
"Displayable のプロパティーが使用されます(これを使用してスクリーンが "
"Character から渡されるプロパティーを上書きするか決められます)。"

#: ../../source/screens.rst:350
msgid ""
"A string giving the name of the style applied to this displayable. The style "
"gives default values for style properties."
msgstr ""
"この displayable に適用されるスタイルの名前です。そのスタイルはスタイルプロパ"
"ティーにデフォルトの値を与えます。"

#: ../../source/screens.rst:357
msgid ""
"Provides a prefix to the style of this displayable and all of its children, "
"unless those children have a more specific style or style prefix set."
msgstr ""
"より限定的なスタイルやスタイル接頭辞がこの displayable とその子になければ、そ"
"のすべての子のスタイルに接頭辞を与えます"

#: ../../source/screens.rst:361
msgid ""
"The style name is created by concatenating a style prefix, underscore, and a "
"style suffix. The style suffix is either specified using `style_suffix`, or "
"determined by the displayable."
msgstr ""
"スタイル名はスタイル接頭辞とアンダースコア、スタイル接尾辞を繋げて作られま"
"す。スタイル接尾辞は `style_suffix` から指定されるか、 displayable によって決"
"定されます。"

#: ../../source/screens.rst:365
msgid ""
"For example, if a vbox has a style prefix of ``\"pref\"``, the vbox will be "
"given the style ``\"pref_vbox\"``. Unless a more specific style or style "
"prefix is set, a button inside the vbox will have the style ``\"pref_button"
"\"``."
msgstr ""
"例えば vbox がスタイル接頭辞「 pref 」を持っていると、 vbox にはスタイル"
"「 pref_vbox 」が指定されます。より限定的なスタイルやスタイル接頭辞が指定され"
"ていなければ、その vbox 内のボタンはスタイル「 pref_button 」を持ちます。"

#: ../../source/screens.rst:370
msgid ""
"Styles accessed in this way are automatically created, if the style does not "
"exist. Setting a prefix of ``None`` removes the prefix from this displayable "
"and its children."
msgstr ""
"このようにアクセスされるスタイルは、もしなければ作成されます。接頭辞を "
"``None`` に設定するとこの displayable とその子から接頭辞がなくなります。"

#: ../../source/screens.rst:376
msgid "An alias for `style_prefix`, used in older versions of Ren'Py."
msgstr ""
"`style_prefix` のエイリアスで、古いバージョンの Ren'Py で使用されます。"

#: ../../source/screens.rst:380
msgid ""
"Specifies the suffix that is combined with the `style_prefix` to generate a "
"style name. If this is ``\"small_button\"`` and the style prefix is ``\"pref"
"\"``, the style ``\"pref_small_button\"`` is used."
msgstr ""
"`style_prefix` と結合してスタイル名になる接尾辞を指定します。これが ``"
"\"small_button\"`` でスタイル接頭辞が ``\"pref\"`` なら、スタイルは ``"
"\"pref_small_button\"`` が使用されます。"

#: ../../source/screens.rst:385
msgid ""
"If no style prefix is in use, this is used directly as the name of the "
"style. A style suffix applies to a single displayable only, not a "
"displayable and all children."
msgstr ""
"スタイル接頭辞がなければ、これはスタイル名が直接使用されます。スタイル接尾辞"
"は単独の displayable のみに適用され、 displayable の子には適用されません。"

#: ../../source/screens.rst:391
msgid ""
"Assigns a tooltip to this displayable. When the displayable gains focus, the "
"value of this property will be made available from the :func:`GetTooltip` "
"function. See the :ref:`tooltips` section for more details."
msgstr ""
"tooltip をこの dispalyable に代入します。displayable がフォーカスを得ると、こ"
"のプロパティーの値が :func:`GetTooltip` 関数から利用可能になります。詳細は :"
"ref:`tooltips` を参照してください。"

#: ../../source/screens.rst:396
msgid ""
"Objects passed to tooltip must support equality. If equality is not "
"supported, an infinite loop may occur."
msgstr ""
"tooltip に渡されるオブジェクトは等号をサポートしなければなりません。そうでな"
"ければ、無限ループが発生します。"

#: ../../source/screens.rst:401
msgid ""
"A tuple or list containing additional positional arguments that are given to "
"the displayable."
msgstr "displayable に与えられる追加の位置引数のタプルやリストです。"

#: ../../source/screens.rst:406
msgid "A dictionary containing additional properties given to the displayable."
msgstr "displayable に与えられる追加のプロパティーを含む辞書です。"

#: ../../source/screens.rst:409
msgid ""
"Many user interface statements take classes of style properties, or "
"transform properties. These properties can have a style prefix associated "
"with them, that determines when they apply. For example, if text is given "
"the ``hover_size`` property, it sets the text size when the text is hovered."
msgstr ""
"多くのユーザーインターフェイスステートメントはスタイルプロパティーや "
"transform プロパティーの類いを受け取ります。これらのプロパティーには対応する"
"スタイル接頭辞を持たせて、いつそれらが適用されるか決められます。例えばテキス"
"トに ``hover_size`` プロパティーが与えられるとそれはテキストの上にマウスがあ"
"るときのテキストの大きさを設定します"

#: ../../source/screens.rst:415
msgid ""
"User interface statements take an ``as`` clause, which takes a variable "
"name, without any quotes. The displayable that the statement creates is "
"assigned to the variable. (An example can be found in :ref:`the drag and "
"drop documentation <as-example>`.)"
msgstr ""
"ユーザーインターフェースステートメントは ``as`` 節を受け取り、それは引用符な"
"しで変数名を受け取ります。ステートメントが作成する displayable がその変数に代"
"入されます(:ref:`the drag and drop documentation <as-example>` で例が見られま"
"す)。"

#: ../../source/screens.rst:423
msgid "Bar"
msgstr "Bar"

#: ../../source/screens.rst:425
msgid ""
"Creates a horizontally-oriented bar that can be used to view or adjust data. "
"It takes the following properties:"
msgstr ""
"データを閲覧したり調整するための水平方向のバーを作成します。以下のプロパ"
"ティーを受け取ります。"

#: ../../source/screens.rst:430
msgid ""
"The current value of the bar. This can be either a :ref:`bar value <bar-"
"values>` object, or a number."
msgstr ""
"バーの現在の値です。これは :ref:`bar value <bar-values>` オブジェクトか数字に"
"なります。"

#: ../../source/screens.rst:435 ../../source/screens.rst:1925
msgid "The maximum value of the bar. This is required if `value` is a number."
msgstr "バーの最大値です。これは `value` が数字なら必要です。"

#: ../../source/screens.rst:440 ../../source/screens.rst:1930
msgid "A :func:`ui.adjustment` object that this bar adjusts."
msgstr "このバーを調整する :func:`ui.adjustment` オブジェクトです。"

#: ../../source/screens.rst:444
msgid ""
"If given, this should be a Python function. The function is called with the "
"value of the adjustment when the adjustment is changed."
msgstr ""
"与えるならこれは python 関数であるべきです。関数は adjustment が変更されると"
"その adjustment の value を引数に呼び出されます。"

#: ../../source/screens.rst:449
msgid "An action to run when the bar gains focus."
msgstr "バーがフォーカスを所得したときのアクションです。"

#: ../../source/screens.rst:453
msgid "An action to run when the bar loses focus."
msgstr "バーがフォーカスを失うときのアクションです。"

#: ../../source/screens.rst:457
msgid ""
"An action to run when the bar button is released. This will be invoked even "
"if the bar has not changed its value."
msgstr ""
"バーが離されると実行されるアクションです。これはバーが変化していなくても実行"
"されます。"

#: ../../source/screens.rst:460 ../../source/screens.rst:1932
msgid ""
"One of `value` or `adjustment` must be given. In addition, this function "
"takes:"
msgstr ""
"`value` か `adjustment` のどちらかは与えられなければなりません。さらにこの機"
"能は以下を受け取ります。 :"

#: ../../source/screens.rst:463 ../../source/screens.rst:534
#: ../../source/screens.rst:578 ../../source/screens.rst:621
#: ../../source/screens.rst:650 ../../source/screens.rst:693
#: ../../source/screens.rst:721 ../../source/screens.rst:825
#: ../../source/screens.rst:936 ../../source/screens.rst:1012
#: ../../source/screens.rst:1057 ../../source/screens.rst:1137
#: ../../source/screens.rst:1242 ../../source/screens.rst:1279
#: ../../source/screens.rst:1311 ../../source/screens.rst:1387
#: ../../source/screens.rst:1446 ../../source/screens.rst:1480
#: ../../source/screens.rst:1616 ../../source/screens.rst:1679
#: ../../source/screens.rst:1721 ../../source/screens.rst:1836
#: ../../source/screens.rst:1898 ../../source/screens.rst:1935
#: ../../source/screens.rst:2026 ../../source/screens.rst:2040
#: ../../source/screens.rst:2054
msgid ":ref:`Common Properties <common-properties>`"
msgstr ":ref:`共通のプロパティー <common-properties>`"

#: ../../source/screens.rst:464 ../../source/screens.rst:535
#: ../../source/screens.rst:622 ../../source/screens.rst:651
#: ../../source/screens.rst:694 ../../source/screens.rst:722
#: ../../source/screens.rst:826 ../../source/screens.rst:937
#: ../../source/screens.rst:1013 ../../source/screens.rst:1058
#: ../../source/screens.rst:1138 ../../source/screens.rst:1243
#: ../../source/screens.rst:1280 ../../source/screens.rst:1312
#: ../../source/screens.rst:1388 ../../source/screens.rst:1481
#: ../../source/screens.rst:1617 ../../source/screens.rst:1680
#: ../../source/screens.rst:1722 ../../source/screens.rst:1837
msgid ":ref:`position-style-properties`"
msgstr ":ref:`position-style-properties`"

#: ../../source/screens.rst:465 ../../source/screens.rst:1936
msgid ":ref:`bar-style-properties`"
msgstr ":ref:`bar-style-properties`"

#: ../../source/screens.rst:467 ../../source/screens.rst:1938
msgid "This does not take children."
msgstr "これは子は受け取りません。"

#: ../../source/screens.rst:482
msgid "Button"
msgstr "Button"

#: ../../source/screens.rst:484
msgid ""
"Creates an area of the screen that can be activated to run an action. A "
"button takes no parameters, and the following properties."
msgstr ""
"スクリーンのあるエリアを、アクティベートしてアクションを実行できるようにしま"
"す。ボタンはパラメーターを受け取らず以下のプロパティーを受け取ります。"

#: ../../source/screens.rst:489
msgid ""
"The action to run when the button is activated. A button is activated when "
"it is clicked, or when the player selects it and hits enter on the keyboard. "
"This also controls if the button is sensitive if `sensitive` is not provided "
"or None, and if the button is selected if `selected` is not provided or None."
msgstr ""
"ボタンがアクティベートされると実行するアクションです。ボタンはクリックされる"
"か、プレイヤーが選択してキーボードのエンターを押すかするとアクティベートされ"
"ます。これは `sensitive` が指定されないか None ならばボタンが有効かどうか"
"の、 `selected` が指定されないか None ならば選択されているかどうかの制御もし"
"ます。"

#: ../../source/screens.rst:497 ../../source/screens.rst:788
#: ../../source/screens.rst:1339
msgid ""
"An action that is run if the button is activated in an alternate manner. "
"Alternate activation occurs when the player right-clicks on the button on a "
"mouse-based platform, or when the player long presses the button on a touch-"
"based platform."
msgstr ""
"ボタンが代替方法でアクティベートされると実行される代替アクションです。代替方"
"法はプレイヤーがマウスベースのプラットフォームでボタン上で右クリックするか、"
"タッチベースのプラットフォームで長押しすると発生します。"

#: ../../source/screens.rst:504 ../../source/screens.rst:795
#: ../../source/screens.rst:1346 ../../source/screens.rst:1868
msgid "An action to run when the button gains focus."
msgstr "ボタンがフォーカスを所得するときのアクションです。"

#: ../../source/screens.rst:508 ../../source/screens.rst:799
#: ../../source/screens.rst:1350 ../../source/screens.rst:1872
msgid "An action to run when the button loses focus."
msgstr "ボタンがフォーカスを失うときのアクションです。"

#: ../../source/screens.rst:512 ../../source/screens.rst:803
#: ../../source/screens.rst:1354 ../../source/screens.rst:1876
msgid ""
"An expression that determines whether the button is selected or not. This "
"expression is evaluated at least once per interaction. If not provided or "
"None, the action will be used to determine selectedness."
msgstr ""
"ボタンが選択されているかどうかを決定する式です。この式はインテラクション毎に"
"少なくとも一回評価されます。 指定されないか None ならば、アクションが選択状態"
"決定に使用されます。"

#: ../../source/screens.rst:518 ../../source/screens.rst:809
#: ../../source/screens.rst:1360 ../../source/screens.rst:1882
msgid ""
"An expression that determines whether the button is sensitive or not. This "
"expression is evaluated at least once per interaction. If not provided or "
"None, the action will be used to determine sensitivity."
msgstr ""
"ボタンが有効かどうかを決定する式です。この式はインテラクション毎に少なくとも"
"一回評価されます。 指定されないか None ならば、アクションが有効無効決定に使用"
"されます。"

#: ../../source/screens.rst:524 ../../source/screens.rst:815
#: ../../source/screens.rst:1366 ../../source/screens.rst:1888
msgid ""
"A string giving a :doc:`keysym <keymap>` describing a keyboard key that, "
"when pressed, invokes the action of this button."
msgstr ""
"押すとこのボタンのアクションを実行するキーボードのキーを表わす :doc:`キーシン"
"ボル <keymap>` の文字列です。"

#: ../../source/screens.rst:529 ../../source/screens.rst:820
#: ../../source/screens.rst:1371 ../../source/screens.rst:1893
msgid ""
"A string giving a :doc:`keysym <keymap>` describing a keyboard key that, "
"when pressed, invokes the alternate action of this button."
msgstr ""
"押すとこのボタンの代替アクションを実行するキーボードのキーを表わす :doc:"
"`keysym <keymap>` の文字列です。"

#: ../../source/screens.rst:532 ../../source/screens.rst:576
#: ../../source/screens.rst:691 ../../source/screens.rst:823
#: ../../source/screens.rst:934 ../../source/screens.rst:1010
#: ../../source/screens.rst:1055 ../../source/screens.rst:1135
#: ../../source/screens.rst:1240 ../../source/screens.rst:1385
#: ../../source/screens.rst:1896
msgid "It also takes:"
msgstr "以下も受け取ります。 :"

#: ../../source/screens.rst:536 ../../source/screens.rst:652
#: ../../source/screens.rst:827 ../../source/screens.rst:1014
#: ../../source/screens.rst:1389 ../../source/screens.rst:1723
msgid ":ref:`window-style-properties`"
msgstr ":ref:`window-style-properties`"

#: ../../source/screens.rst:537 ../../source/screens.rst:828
#: ../../source/screens.rst:1390 ../../source/screens.rst:1899
msgid ":ref:`button-style-properties`"
msgstr ":ref:`button-style-properties`"

#: ../../source/screens.rst:539
msgid ""
"It takes one child. If zero, two, or more children are supplied, they are "
"implicitly added to a fixed, which is added to the button."
msgstr ""
"これは子を一つ受け取ります。 ゼロまたは二つ以上の子が指定されるとそれらは暗黙"
"のうちに fixed に追加され、それがボタンに追加されます。"

#: ../../source/screens.rst:546
msgid "Dismiss"
msgstr "Dismiss"

#: ../../source/screens.rst:548
msgid ""
"The dismiss statement creates the highly specialized dismiss displayable, "
"which gains focus when no other displayable has focus, and runs an action "
"when it's activated. In this regard, it works very similarly to the behavior "
"of the say statement."
msgstr ""
"dismiss ステートメントは、非常に特殊な dismiss displayable を作成します。これ"
"は他の displayable にフォーカスがないときにフォーカスを獲得し、それがアクティ"
"ベートされたときにアクションを実行します。この点では、say ステートメントの動"
"作と非常によく似ています。"

#: ../../source/screens.rst:553
msgid ""
"This is rarely used, and mostly to allow a modal frame to be dismissed when "
"the player clicks outside it, as might be the case with a popup window."
msgstr ""
"これはめったに使用されず、主にポップアップ ウィンドウのように、プレイヤーが"
"モーダルフレームの外側をクリックすると、モーダルフレームが解除されるようにす"
"るために使用されます。"

#: ../../source/screens.rst:557
msgid "This takes the following properties:"
msgstr "これは以下のプロパティーを受け取ります。 :"

#: ../../source/screens.rst:561
msgid ""
"The action performed when the dismiss is activated. This property is "
"required."
msgstr ""
"dismiss がアクティベートされたときに処理されるアクションです。このプロパ"
"ティーは必ず必要です。"

#: ../../source/screens.rst:566
msgid ""
"A string giving a :doc:`keysym <keymap>` describing a key that, when "
"pressed, invokes the action of this dismiss. This replaces the default "
"\"dismiss\" keysym."
msgstr ""
"押すとこの dissmiss のアクションを実行するキーボードのキーを表わす :doc:`キー"
"シンボル <keymap>` の文字列です。"

#: ../../source/screens.rst:572
msgid ""
"By default, the dismiss is modal, preventing events from being processed by "
"displayables \"behind\" it."
msgstr ""
"dimiss はデフォルトではモーダルであり、その「後ろ」の displayable によってイ"
"ベントが処理されるのを防ぎます。"

#: ../../source/screens.rst:579
msgid ""
"The :propref:`hover_sound` and :propref:`activate_sound` style properties."
msgstr ""
":propref:`hover_sound` と :propref:`activate_sound` スタイルプロパティー"

#: ../../source/screens.rst:581
msgid "Here's an example of dismiss being used::"
msgstr "ここに dismiss の使用例があります。 ::"

#: ../../source/screens.rst:604
msgid ""
"See also how dismiss is used in conjunction with :ref:`nearrect <sl-"
"nearrect>`."
msgstr ""
"dismiss と :ref:`nearrect <sl-nearrect>` の組み合わせの使用方法も参照してくだ"
"さい。"

#: ../../source/screens.rst:609
msgid "Fixed"
msgstr "Fixed"

#: ../../source/screens.rst:611
msgid ""
"This creates an area to which children can be added. By default, the fixed "
"expands to fill the available area, but the :propref:`xmaximum` and :propref:"
"`ymaximum` properties can change this."
msgstr ""
"これは子を追加可能な領域を作成します。デフォルトでは fixed は利用可能な領域を"
"すべて使用しますが、 :propref:`xmaximum` や :propref:`ymaximum` プロパティー"
"を使用すればこれを変更できます。"

#: ../../source/screens.rst:615
msgid ""
"The children are laid out according to their position style properties. They "
"can overlap if not positioned properly."
msgstr ""
"子はそれぞれの位置スタイルプロパティーに従って配置されます。適切に位置が指定"
"されていないと、これらは重なり合ってしまうかもしれません。"

#: ../../source/screens.rst:618
msgid ""
"The fixed statement takes no parameters, and the following groups of "
"properties:"
msgstr ""
"fixed ステートメントはパラメーターは受け取らず、以下のプロパティーを受け取り"
"ます。 :"

#: ../../source/screens.rst:623 ../../source/screens.rst:1838
msgid ":ref:`fixed-style-properties`"
msgstr ":ref:`fixed-style-properties`"

#: ../../source/screens.rst:625
msgid "This takes any number of children, which are added to the fixed."
msgstr "これは fixed に追加されるすべての子を受け取ります。"

#: ../../source/screens.rst:627
msgid ""
"It's often unnecessary to explicitly create a fixed displayable. Each screen "
"is contained within a fixed displayable, and many screen language statements "
"automatically create a fixed displayable if they have two or more children."
msgstr ""
"fixed displayable を明示的に作成する必要はほとんどありません。各スクリーンは "
"fixed displayable に含まれており、多くのスクリーン言語は二つ以上の子を持つと"
"自動的に fixed を生成します。"

#: ../../source/screens.rst:644
msgid "Frame"
msgstr "Frame"

#: ../../source/screens.rst:646
msgid ""
"A frame is a window that contains a background that is intended for "
"displaying user-interface elements like buttons, bars, and text. It takes "
"the following groups of properties:"
msgstr ""
"frame はユーザーインターフェイスを表示するための背景を含むウィンドウで、以下"
"のプロパティーを受け取ります。 :"

#: ../../source/screens.rst:654 ../../source/screens.rst:1619
#: ../../source/screens.rst:1725
msgid ""
"It takes one child. If zero, two, or more children are supplied, then a "
"fixed is created to contain them."
msgstr ""
"これは一つの子を受け取ります。 0 か 2 以上の子が指定されると、それらを含める"
"ために fixed が作成されます。"

#: ../../source/screens.rst:675
msgid "Grid"
msgstr "Grid"

#: ../../source/screens.rst:677
msgid ""
"This displays its children in a grid. Each child is given an area of the "
"same size, the size of the largest child."
msgstr ""
"これはその子をグリッドに表示します。各子には最大のサイズの子と同じサイズの領"
"域が与えられます。"

#: ../../source/screens.rst:680
msgid ""
"It takes two parameters. The first is the number of columns in the grid, and "
"the second is the number of rows in the grid. If the grid is not full, the "
"remaining cells are filled with the ``null`` displayable."
msgstr ""
"二つのパラメーターを受け取ります。最初の要素はグリッドの縦の列の数で、第二要"
"素はグリッドの横の列の数です。グリッドが満たされなければ、残りのセルは "
"``null`` Displayable で埋められます。"

#: ../../source/screens.rst:684
msgid "Grid takes one property:"
msgstr "Grid は 1 つのプロパティーを受け取ります。 :"

#: ../../source/screens.rst:688
msgid ""
"If False (the default), rows are filled before columns. If True, then "
"columns are filled before rows."
msgstr ""
"デフォルトは False で、横の列が縦の列より先に埋められます。 True なら縦の列が"
"横の列より先に埋められます。"

#: ../../source/screens.rst:695 ../../source/screens.rst:1681
msgid ":ref:`grid-style-properties`"
msgstr ":ref:`grid-style-properties`"

#: ../../source/screens.rst:697
msgid ""
"This must be given (columns * rows) children. Giving it a different number "
"of children is an error."
msgstr ""
"これには縦x横だけの子が指定される必要があり、違う数の子が指定されるとエラーに"
"なります。"

#: ../../source/screens.rst:716
msgid "Hbox"
msgstr "Hbox"

#: ../../source/screens.rst:718
msgid ""
"This displays its children side by side, in an invisible horizontal box. It "
"takes no parameters, and the following groups of properties:"
msgstr ""
"これはその子を透明な横長の箱に左から見に並べて表示します。これはパラメーター"
"を受け取らず、以下のプロパティーを受け取ります。 :"

#: ../../source/screens.rst:723 ../../source/screens.rst:1482
msgid ":ref:`box-style-properties`"
msgstr ":ref:`box-style-properties`"

#: ../../source/screens.rst:725 ../../source/screens.rst:1484
msgid "UI displayable children are added to the box."
msgstr "UI displayable の子はボックスに追加されます。"

#: ../../source/screens.rst:738
msgid "Imagebutton"
msgstr "Imagebutton"

#: ../../source/screens.rst:740
msgid ""
"Creates a button consisting of images, that change state when the user "
"hovers over them. This takes no parameters, and the following properties:"
msgstr ""
"その上にマウスがあると状態が変化する画像で構成されるボタンを作成します。これ"
"はパラメーターを受け取らず、以下のプロパティーを受け取ります。 :"

#: ../../source/screens.rst:746
msgid ""
"Used to automatically define the images used by this button. This should be "
"a string that contains %s in it. If it is, and one of the image properties "
"is omitted, %s is replaced with the name of that property, and the value is "
"used as the default for that property."
msgstr ""
"このボタンに使用する画像を自動的に定義するために使用されます。これは %s を含"
"む文字列であるべきです。これが指定されて、画像のプロパティーの一部が省略され"
"ていると %s をそのプロパティーの名前で置き換えて、その値をそのプロパティーの"
"デフォルトとして使用します。"

#: ../../source/screens.rst:752
msgid ""
"For example, if `auto` is \"button_%s.png\", and `idle` is omitted, then "
"idle defaults to \"button_idle.png\". Similarly, if `auto` is \"button %s\", "
"the ``button idle`` image is used."
msgstr ""
"例えば `auto` が \"button_%s.png\" で `idle` が省略されると、 idle はデフォル"
"トで \"button_idle.png\" になります。同様に `auto` が \"button %s\" なら "
"``button idle`` 画像が使用されます。"

#: ../../source/screens.rst:756 ../../source/screens.rst:1791
msgid ""
"The behavior of `auto` can be customized by changing :var:`config."
"imagemap_auto_function`."
msgstr ""
"`auto` の動作は :var:`config.imagemap_auto_function` を変更してカスタマイズで"
"きます。"

#: ../../source/screens.rst:762
msgid "The image used when the button is insensitive."
msgstr "ボタンが無効の時使用される画像です。"

#: ../../source/screens.rst:766
msgid "The image used when the button is not focused."
msgstr "ボタンがフォーカスを持っていない時使用される画像です。"

#: ../../source/screens.rst:770
msgid "The image used when the button is focused."
msgstr "ボタンがフォーカスを持っている時使用される画像です。"

#: ../../source/screens.rst:774
msgid "The image used when the button is selected and idle."
msgstr "ボタンが選択されアイドル状態の時使用される画像です。"

#: ../../source/screens.rst:778
msgid "The image used when the button is selected and hovered."
msgstr "ボタンが選択されフォーカスを持っている状態の時使用される画像です。"

#: ../../source/screens.rst:782 ../../source/screens.rst:1333
msgid ""
"The action to run when the button is activated. This also controls if the "
"button is sensitive if `sensitive` is not provided or None, and if the "
"button is selected if `selected` is not provided or None."
msgstr ""
"ボタンがアクティベートされると実行されるアクションです。これは `sensitive` が"
"ないか None ならばボタンが有効かどうかの、 `selected` がないか None ならば選"
"択されているかどうかの制御もします。"

#: ../../source/screens.rst:830
msgid "This takes no children."
msgstr "これは子を受け取りません。"

#: ../../source/screens.rst:845
msgid "Input"
msgstr "Input"

#: ../../source/screens.rst:847
msgid ""
"Creates a text input area, which allows the user to enter text. When the "
"user presses return, the text will be returned by the interaction. (When the "
"screen is invoked through ``call screen``, the result will be placed in the "
"``_return`` variable.)"
msgstr ""
"テキスト入力をする領域を作成し、ユーザーがテキストを入力できるようにします。"
"ユーザーが Enter を押すと、テキストがインタラクションから返されます (``call "
"screen`` からスクリーンを呼び出したときは ``_return`` 変数に結果が代入されま"
"す) 。"

#: ../../source/screens.rst:852
msgid ""
"Due to limitations in supporting libraries, on Android and the web platform "
"the input displayable is limited to alphabetic characters."
msgstr ""
"Android や ウェブプラットフォームではサポートするライブラリーの制限により、 "
"input Displayable はアルファベット文字に制限されます(訳注 `こちら <https://"
"akakyouryuu.com/%e9%85%8d%e5%b8%83%e7%89%a9/renpy/>`_ にカナ漢字変換対応のス"
"クリーンキーボードを用意しました。)。"

#: ../../source/screens.rst:855
msgid "The input statement takes no parameters, and the following properties:"
msgstr ""
"input ステートメントはパラメーターを受け取らず、以下のプロパティーを受け取り"
"ます。 :"

#: ../../source/screens.rst:859
msgid ""
"An :ref:`input value <input-values>` object that this input uses. InputValue "
"objects determine where the default value is taken from, what happens when "
"the text is changed, what happens when enter is pressed, and if the text is "
"editable by default."
msgstr ""
"この input が使用する :ref:`input value <input-values>` オブジェクトです。 "
"InputValue オブジェクトはデフォルト値、テキスト変更、エンター押下時の動作、テ"
"キストがデフォルトで変更可能かどうかを決定します。"

#: ../../source/screens.rst:864
msgid "This should not be given at the same time as `default` and `changed`."
msgstr "これは `default` や `changed` と同時に指定してはいけません。"

#: ../../source/screens.rst:868
msgid "The default text in this input."
msgstr "入力されるデフォルトのテキストです。"

#: ../../source/screens.rst:872
msgid "The maximum length of the text in this input."
msgstr "入力されるテキストの最大の長さです。"

#: ../../source/screens.rst:876
msgid ""
"The maximum pixel width of the input. If typing a character would cause the "
"input to exceed this width, the keypress is ignored."
msgstr ""
"入力の最大ピクセル幅です。入力した文字がこの幅を越えると、そのキー入力は無視"
"されます。"

#: ../../source/screens.rst:881
msgid ""
"A string containing characters that are allowed to be typed into this input. "
"(By default, allow all characters.)"
msgstr ""
"入力できる文字を含む文字列です (デフォルトではすべての文字が許可されます )。"

#: ../../source/screens.rst:886
msgid ""
"A string containing characters that are disallowed from being typed into "
"this input. (By default, \"{}\".)"
msgstr "入力出来ない文字を含む文字列です。 (デフォルトでは「{}」です。 )"

#: ../../source/screens.rst:891
msgid ""
"If True, it becomes possible to copy and paste into this input. (By default, "
"disabled.)"
msgstr ""
"True なら、この入力へのコピーとペーストが可能になります(デフォルトでは無効で"
"す)。"

#: ../../source/screens.rst:896
msgid "An immutable string to prepend to what the user has typed."
msgstr "ユーザーが入力したテキストの先頭に追加される文字列です。"

#: ../../source/screens.rst:900
msgid "An immutable string to append to what the user has typed."
msgstr "ユーザーが入力したテキストの末尾に追加される文字列です。"

#: ../../source/screens.rst:904
msgid ""
"A Python function that is called with what the user has typed, when the "
"string changes."
msgstr ""
"ユーザーが入力した文字列を引数に、文字列が変更したときに呼ばれる python 関数"
"です。"

#: ../../source/screens.rst:909
msgid ""
"If given, a string that replaces each displayable character in the text. "
"This can be used to mask out a password."
msgstr ""
"テキストに表示される各文字を置き換える文字列です。これはパスワードのマスクに"
"使用されます。"

#: ../../source/screens.rst:914
msgid ""
"If not False, the blinking period of the default caret. Overrides :var:"
"`config.input_caret_blink`."
msgstr ""
"False またはデフォルトキャレットの点滅期間です。 :var:`config."
"input_caret_blink` を上書きします。"

#: ../../source/screens.rst:919
msgid ""
"If true, it becomes possible to move caret on the next line using keyboard "
"(Shift+Enter by default, can be changed by modifying config."
"keymap['input_next_line'])."
msgstr ""
"True なら、キーボードを使用してキャレットを次の行に移動できます (デフォルトで"
"は Shift+Enter であり、 config.keymap['input_next_line'] で変更できます )。"

#: ../../source/screens.rst:925
msgid ""
"If not None, an action that is run when enter is pressed and the input is "
"active. This overrides the default action of returning the input value."
msgstr ""
"None でない場合、inputがアクティブなときにenter キーが押されると実行されるア"
"クションです。これは、入力された値を返すデフォルトのアクションを上書きしま"
"す。"

#: ../../source/screens.rst:929
msgid ""
"Generally, this is is used with a `value` that stores the input into a "
"variable, so the action can access it."
msgstr ""
"通常、これは入力を変数に格納する `value` とともに使用されるので、そのアクショ"
"ンは変数にアクセスできます。"

#: ../../source/screens.rst:938 ../../source/screens.rst:1313
msgid ":ref:`text-style-properties`"
msgstr ":ref:`text-style-properties`"

#: ../../source/screens.rst:940 ../../source/screens.rst:1962
msgid "This does not take any children."
msgstr "これは子を受け取りません。"

#: ../../source/screens.rst:955
msgid "Key"
msgstr "Key"

#: ../../source/screens.rst:957
msgid ""
"This creates a keybinding that runs an action when a key is pressed, or one "
"of the keys in a given list. Key is used in a loose sense here, as it also "
"allows joystick and mouse events."
msgstr ""
"これはあるキー、または指定したリストのどれかのキーが押されるとあるアクション"
"を実行するキーバインドを作成します。 キーはここではジョイスティックやマウスイ"
"ベントも含む大まかな意味で使用されています。"

#: ../../source/screens.rst:961
msgid ""
"Key takes one positional parameter, a string giving the key to bind. See "
"the :doc:`keymap` section for a description of available keysyms. It takes "
"two properties:"
msgstr ""
"key はパラメーターを一つ受け取り、それは関連づけるキーの文字列です。利用可能"
"なキーについては :doc:`keymap` の章を参照してください。これは1つのプロパ"
"ティーを受け取ります:"

#: ../../source/screens.rst:967
msgid ""
"This gives an action that is run when the key is pressed. This property is "
"mandatory."
msgstr ""
"これはキーが押されると実行されるアクションを与えます。このプロパティーは必ず"
"必要です。"

#: ../../source/screens.rst:972
msgid ""
"If true, the default, the event will capture, and will not be processed by "
"other displayables. If false and the action does not end the interaction, "
"the event will be processed by other displayables."
msgstr ""
"デフォルトでは True で、そのイベントは捕捉され、他の Displayable には渡されま"
"せん。 False かつアクションがインタラクションを終えなければ、そのイベントは他"
"の Displayable に渡されます。"

#: ../../source/screens.rst:977
msgid "It takes no children."
msgstr "これは子を受け取りません。"

#: ../../source/screens.rst:990
msgid "Label"
msgstr "Label"

#: ../../source/screens.rst:992
msgid ""
"Creates a window in the label style, and then places text inside that "
"window. Together, this combination is used to label things inside a frame."
msgstr ""
"ラベルスタイルのウィンドウを作成し、その内側にテキストを置きます。同時にこの"
"連携はフレーム内部にラベルを貼るために使用されます。"

#: ../../source/screens.rst:996
msgid ""
"It takes one positional argument, the text of the label. It takes the "
"property:"
msgstr ""
"位置引数を一つ持ち、それはラベルの文字列です。以下のプロパティーも受け取りま"
"す。 :"

#: ../../source/screens.rst:1001 ../../source/screens.rst:1376
msgid ""
"The name of the style to use for the button text. If not supplied, and the "
"`style` property is a string, then ``\"_text\"`` is appended to that string "
"to give the default text style."
msgstr ""
"ボタンテキストに使用されるスタイルの名前です。これが指定されず、さらに "
"`style` プロパティーが文字列なら、「 _text 」がその文字列に追加されてデフォル"
"トのテキストスタイルになります。"

#: ../../source/screens.rst:1007 ../../source/screens.rst:1382
msgid ""
"Other properties prefixed with text_ have this prefix stripped, and are then "
"passed to the text displayable."
msgstr ""
"text_ を接頭辞に持つその他のプロパティーは、この接頭辞を取り除いてテキスト "
"displayable に渡されます。"

#: ../../source/screens.rst:1016 ../../source/screens.rst:1060
#: ../../source/screens.rst:1245 ../../source/screens.rst:1315
#: ../../source/screens.rst:1392
msgid "It does not take children."
msgstr "子は受け取りません。"

#: ../../source/screens.rst:1033
msgid "Mousearea"
msgstr "Mousearea"

#: ../../source/screens.rst:1035
msgid ""
"A mouse area is an area of the screen that can react to the mouse entering "
"or leaving it. Unlike a button, a mouse area does not take focus, so it's "
"possible to have a mouse area with buttons inside it. The ``mousearea`` "
"statement takes no parameters, and the following properties:"
msgstr ""
"マウスエリアはマウスの出入りに反応できるスクリーンの領域です。ボタンと違って"
"マウスエリアはフォーカスを受け取らないので、その内部にボタンを持つマウスエリ"
"アも可能です。 ``mousearea`` ステートメントはパラメーターを受け取らず、以下の"
"プロパティーを受け取ります。 :"

#: ../../source/screens.rst:1042
msgid "An action to run when the mouse enters the mouse area."
msgstr "マウスエリアにマウスが入ると実行されるアクション"

#: ../../source/screens.rst:1046
msgid "An action to run when the mouse leaves the mouse area."
msgstr "マウスエリアからマウスが出ると実行されるアクション"

#: ../../source/screens.rst:1050
msgid ""
"The :propref:`focus_mask` style property, which may be a Displayable or "
"None. If a displayable, the mousearea will only be hovered if the mouse is "
"over an opaque portion of the displayable. (The displayable is not shown to "
"the user.)"
msgstr ""
":propref:`focus_mask` スタイルプロパティーで、 displayable か None です。"
"displayable ならマウスがその displayable の不透明な領域上にあるときのみマウス"
"エリアはフォーカスを持ちます ( displayable はユーザーには表示されません )。"

#: ../../source/screens.rst:1062
msgid ""
"Usually, a mousearea statement is given the :propref:`area` style property, "
"which controls the size and position of the mouse area. Without some way of "
"controlling its size, the mouse area would take up the entire screen, a less "
"useful behavior."
msgstr ""
"通常 mouseare ステートメントは :propref:`area` スタイルプロパティーを受け取っ"
"てマウスエリアのサイズや位置を制御します。そのサイズを制御しないとマウスエリ"
"アは画面全体になり、かなり不便です。"

#: ../../source/screens.rst:1069
msgid ""
"Since Ren'Py games can be played using the keyboard and joystick, it often "
"makes sense to duplicate mousearea functionality by some other means."
msgstr ""
"Ren'Py のゲームはキーボードとジョイスティックでもプレイ出来るので、他の方法で"
"もマウスエリアの機能を再現してください。"

#: ../../source/screens.rst:1094
msgid "Nearrect"
msgstr "Nearrect"

#: ../../source/screens.rst:1096
msgid ""
"The ``nearrect`` statement takes a single child, and lays that child out at "
"a location near a rectangle. Usually, this is a rectangle focus captured "
"using the :func:`CaptureFocus` action. This can be used for tooltips and "
"dropdown or pulldown menus."
msgstr ""
"``nearrect`` ステートメントは子オブジェクトをひとつ受け取り、その子オブジェク"
"トをある矩形に近い位置に配置します。通常これは :func:`CaptureFocus` アクショ"
"ンを使用して保存された、フォーカスされた矩形です。これは、ツールチップやド"
"ロップダウンメニュー、プルダウンメニューに使用できます。"

#: ../../source/screens.rst:1101
msgid "Nearrect takes the following properties:"
msgstr "Nearrect は次のプロパティーを受け取ります :"

#: ../../source/screens.rst:1105
msgid ""
"If given, this should be an (x, y, w, h) rectangle that the child is "
"positioned relative to, as described below."
msgstr ""
"指定するならばこれは後述するように (x, y, w, h) の形の矩形であるべきす。これ"
"に対し、その子が相対指定で配置されます。"

#: ../../source/screens.rst:1110
msgid ""
"If given, this should be a string. This string is passed to the equivalent "
"of :func:`GetFocusRect` to find the rectangle. If a focus rectangle with "
"that name is found, the child is rendered."
msgstr ""
"指定するならこれは文字列であるべきです。この文字列は :func:`GetFocusRect` に"
"相当する物に渡され、その矩形を探します。その名前のフォーカスされた矩形が見つ"
"かれば、子が描画されます。"

#: ../../source/screens.rst:1114
msgid ""
"Passing \"tooltip\" to this uses the location of the last displayable that "
"was focused while displaying a tooltip."
msgstr ""
"これに \"tooltip\" を渡せば、ツールチップを表示している間中、最後にフォーカス"
"された位置を使用します。"

#: ../../source/screens.rst:1117
msgid "If present, overrides `rect`"
msgstr "あれば `rect` を上書きします。"

#: ../../source/screens.rst:1121
msgid ""
"One of ``\"left\"``, ``\"top\"``, ``\"right\"``, ``\"bottom\"`` to prefer "
"that position for the nearrect. If there is not room on one side, the "
"opposite side is used. By default, the preferred side is \"bottom\"."
msgstr ""
"``\"left\"``, ``\"top\"``, ``\"right\"``, ``\"bottom\"`` の内の1つであり、 "
"nearrect に対してその位置を優先します。片側に空きがなければ、反対側を使用しま"
"す。デフォルトで優先されるのは \"bottom\" 側です。"

#: ../../source/screens.rst:1127
msgid "Deprecated. Equivalent to ``preferred_side \"top\"``"
msgstr "廃止されました。 ``preferred_side`` を ``top`` にするのと同じです。"

#: ../../source/screens.rst:1131
msgid ""
"If True and there isn't enough space on the preferred side, multiply xoffset "
"and yoffset by -1 since the child will be on the opposite side of the "
"rectangle. False by default."
msgstr ""
"True かつ優先側に十分なスペースがなければ、子が矩形の反対側にあるため、 "
"xoffset と yoffset に -1 を掛けます。デフォルトでは False です。"

#: ../../source/screens.rst:1141
msgid ""
"Nearrect differs from the other layouts in that it positions its child near "
"the given rectangle, rather than inside it. For a `preferred_side` of ``\"top"
"\"`` or ``\"bottom\"`` (resp. ``\"left\"``, ``\"right\"``), the child is "
"first rendered with the full width (resp. height) available, and the maximum "
"of the height (resp. width) above and below the rectangle. The y position "
"(resp. x position) is then computed as followed."
msgstr ""
"Nearrect は他のレイアウトと異なり、その子をその内部ではなく指定の矩形の近くに"
"配置します。 ``\"top\"`` または ``\"bottom\"`` (`\"left\"`` または ``\"right"
"\"``)の `preferred_side` に対して、その子はまずは利用可能な幅(高さ)全体とその"
"矩形の上または下の高さ(左または右の幅)の最大値で描画されます。 y 座標 ( x 座"
"標)は次のように算出されます。"

#: ../../source/screens.rst:1148
msgid ""
"If the child will fit on the `preferred_side` of the rectangle, the child is "
"positioned directly adjacent to the rectangle."
msgstr ""
"その子が矩形の `preferred_side` におさまれば、子はその矩形のすぐ隣に配置され"
"ます。"

#: ../../source/screens.rst:1150
msgid ""
"Otherwise, if the child can fit opposite the `preferred_side` of the "
"rectangle, it's positioned there."
msgstr ""
"そうではなく、子が矩形の `preferred_side` の反対に収まれば、そこに配置されま"
"す。"

#: ../../source/screens.rst:1152
msgid ""
"Otherwise, the child is positioned directly adjacent to the rectangles's "
"`preferred_side`."
msgstr "それ以外の場合、子は矩形の `preferred_side` にすぐ隣に配置されます。"

#: ../../source/screens.rst:1155
msgid ""
"The x positioning (resp. y position) is computed using the normal rules, "
"using the :propref:`xpos` and :propref:`xanchor` properties (resp. :propref:"
"`ypos`, :propref:`yanchor`) of the child, and properties that set them, such "
"as :propref:`xalign`. The pos properties are relative to the x coordinate "
"(resp. y coordinate) of the rectangle, and in the case of a floating point "
"number, the width (resp. height)."
msgstr ""
"x 座標(y 座標)は通常の規則で計算され、子の :propref:`xpos` と :propref:"
"`xanchor` (:propref:`ypos` と :propref:`yanchor` )プロパティー、および :"
"propref:`xalign` (:propref:`yalign`)のようにそれらを設定するプロパティーが使"
"用されます。 位置プロパティーは矩形の x 座標( y 座標)に対する相対値であり、浮"
"動小数点の場合は幅(高さ)に対する割合です。"

#: ../../source/screens.rst:1162
msgid ""
"At the end of positioning, the :propref:`xoffset` and :propref:`yoffset` "
"properties are applied as normal."
msgstr ""
"最後に、 :propref:`xoffset` と :propref:`yoffset` プロパティーは通常通り適用"
"されます。"

#: ../../source/screens.rst:1165
msgid ""
"If the child of the nearrect is a transform, the transform is given ``show`` "
"and ``hide`` events. However, the position will change instantly. Nearrect "
"works best on the top of a screen, with transforms and positioning applied "
"to its child, rather the nearrect."
msgstr ""
"nearrect の子が transform だった場合、その transform には ``show`` と "
"``hide`` イベントが与えられますが、位置は即座に変更されます。 nearrect は画面"
"の一番上で最適に動作し、 transforms と 配置は nearrect ではなくその子に適用さ"
"れます。"

#: ../../source/screens.rst:1170
msgid "One use of nearrect is for dropdown menus::"
msgstr "nearrect の使用の 1 つはドロップダウンメニューです。 ::"

#: ../../source/screens.rst:1220
msgid "Dropdowns may benefit from improved styling, which isn't done here."
msgstr ""
"ドロップダウンではスタイルを改善した方がよいかもしれませんが、ここでは述べま"
"せん。"

#: ../../source/screens.rst:1226
msgid "Null"
msgstr "Null"

#: ../../source/screens.rst:1228
msgid ""
"The null statement inserts an empty area on the screen. This can be used to "
"space things out. The null statement takes no parameters, and the following "
"properties:"
msgstr ""
"null ステートメントはスクリーンに空白の領域を挿入します。これは間を開けるため"
"に使用されます。 null ステートメントはパラメーターは受け取らず、以下のプロパ"
"ティーを受け取ります。 :"

#: ../../source/screens.rst:1234
msgid "The width of the empty area, in pixels."
msgstr "ピクセル数での空白の幅です。"

#: ../../source/screens.rst:1238
msgid "The height of the empty area, in pixels."
msgstr "ピクセル数での空白の高さです。"

#: ../../source/screens.rst:1259
msgid "Side"
msgstr "Side"

#: ../../source/screens.rst:1261
msgid ""
"This positions displayables in the corners or center of a grid. It takes a "
"single parameter, string containing a space-separated list of places to "
"place its children. Each component of this list should be one of:"
msgstr ""
"これはグリッドの中心か端に displayable を配置します。これはパラメーターを一つ"
"受け取り、それはスペースで区切られたその子を配置する場所のリストです。このリ"
"ストの各要素は次のうちの一つです。 :"

#: ../../source/screens.rst:1266
msgid "'c', 't', 'b', 'l', 'r', 'tl', 'tr', 'bl', 'br'"
msgstr "'c', 't', 'b', 'l', 'r', 'tl', 'tr', 'bl', 'br'"

#: ../../source/screens.rst:1268
msgid "'c' means center, 't' top, 'tl' top left, 'br' bottom right, and so on."
msgstr ""
"「c」は中心、「t」は上端、「tl」は左上端、「br」は右下などのように表わしてい"
"ます。"

#: ../../source/screens.rst:1270
msgid "A side takes the following properties:"
msgstr "side は以下のプロパティーを受け取ります。 :"

#: ../../source/screens.rst:1274
msgid "The spacing between the rows and columns of the grid."
msgstr "グリッドの縦横の列の間のスペース"

#: ../../source/screens.rst:1277
msgid "A side takes the following property groups:"
msgstr "side は以下の種類のプロパティーも受け取ります。 :"

#: ../../source/screens.rst:1282
msgid ""
"When being rendered, this first sizes the corners, then the sides, then the "
"center. The corners and sides are rendered with an available area of 0, so "
"it may be necessary to supply them a minimum size (using :propref:`xminimum` "
"or :propref:`yminimum`) to ensure they render at all. The order of placing "
"children is controlled from top to bottom when adding them (i.e. also in the "
"order of substrings in the argument), the latter will be the highest. This "
"is may be disabled by :var:`config.keep_side_render_order`."
msgstr ""
"レンダリング時に、これは最初に角を、次に側面、最後に中心のサイズを決定しま"
"す。角と側面は利用可能な領域を 0 としてレンダリングされるので、それらに最小の"
"サイズを与えて (  :propref:`xminimum` または  :propref:`yminimum` を使用し"
"て ) すべてが描画される保証をする必要があります。子は上から下(つまり引数の文"
"字列順)へ順に配置され、最後が最も高くなります。これは :var:`config."
"keep_side_render_order` によって無効化されます。"

#: ../../source/screens.rst:1292
msgid ""
"Children correspond to entries in the places list, so this must have the "
"same number of children as there are entries in the places list."
msgstr ""
"位置リストのすべてに対応する子があるので、これは位置リストに登録されているの"
"と同じ数の子を持たなければなりません。"

#: ../../source/screens.rst:1306
msgid "Text"
msgstr "Text"

#: ../../source/screens.rst:1308
msgid ""
"The text statement displays text. It takes a single parameter, the text to "
"display. It also takes the following groups of properties:"
msgstr ""
"text ステートメントはテキストを表示します。これはパラメーターを一つ受け取り、"
"それは表示するテキストです。以下のプロパティーも受け取ります。 :"

#: ../../source/screens.rst:1325
msgid "Textbutton"
msgstr "Textbutton"

#: ../../source/screens.rst:1327
msgid ""
"Creates a button containing a text label. The button takes a single "
"parameter, the text to include as part of the button. It takes the following "
"properties:"
msgstr ""
"テキストラベル付きのボタンを作成します。ボタンはパラメーターを一つ受け取り、"
"それはボタンの一部として含まれるテキストです。以下のプロパティーを受け取りま"
"す。 :"

#: ../../source/screens.rst:1405
msgid "Timer"
msgstr "Timer"

#: ../../source/screens.rst:1407
msgid ""
"This creates a timer that runs an action when time runs out. It takes one "
"positional parameter, giving the timeout time, in seconds. It takes the "
"properties:"
msgstr ""
"これは時間が来るとアクションを実行するタイマーを作成します。これは位置パラ"
"メーターを一つ受け取り、それは秒数です。以下のプロパティーも受け取ります。 :"

#: ../../source/screens.rst:1413
msgid ""
"This gives an action that is run when the timer expires. This property is "
"mandatory."
msgstr ""
"時間が来ると実行するアクションを指定します。このプロパティーは必須です。"

#: ../../source/screens.rst:1418
msgid "If True, the timer repeats after it times out."
msgstr "True ならその時間が経つ度にタイマーが繰り返し実行されます。"

#: ../../source/screens.rst:1422
msgid ""
"If True, the timer will not fire if it is blocked by a modal screen. If "
"false or not given, the timer will fire even if it is blocked by a modal "
"screen."
msgstr ""
"True なら、モーダルスクリーンによりブロックされるとそのタイマーは動作しませ"
"ん。 False または指定されないと、タイムーはモーダルスクリーンでブロックされて"
"も動作します。"

#: ../../source/screens.rst:1427
msgid "Timer takes no children."
msgstr "Timer は子を受け取りません。"

#: ../../source/screens.rst:1441
msgid "Transform"
msgstr "Transform"

#: ../../source/screens.rst:1443
msgid ""
"Applies a transform to its child. This takes no parameters, and the "
"following property groups:"
msgstr ""
"transform をその子に適用します。これはパラメーターを受け取らず、以下のプロパ"
"ティーグループを受け取ります。 :"

#: ../../source/screens.rst:1447
msgid ":ref:`Transform Properties <transform-properties>`"
msgstr ":ref:`transform プロパティー <transform-properties>`"

#: ../../source/screens.rst:1449
msgid "This should take a single child."
msgstr "これは子を一つは受け取る必要があります。"

#: ../../source/screens.rst:1455
msgid "Vbar"
msgstr "Vbar"

#: ../../source/screens.rst:1457
msgid ""
"The vertically oriented equivalent of `bar`_. Properties are the same as "
"`bar`."
msgstr "横向きになった `bar`_ です。プロパティーは `bar` と同じです。"

#: ../../source/screens.rst:1474
msgid "Vbox"
msgstr "Vbox"

#: ../../source/screens.rst:1476
msgid ""
"This displays its children one above the other, in an invisible vertical "
"box. It takes no parameters, and the following groups of properties:"
msgstr ""
"これはその子を透明な縦長の箱に縦に並べて表示します。これはパラメーターを受け"
"取らず、以下のプロパティーを受け取ります。 :"

#: ../../source/screens.rst:1497
msgid "Viewport"
msgstr "Viewport"

#: ../../source/screens.rst:1499
msgid ""
"A viewport is area of the screen that can be scrolled by dragging, with the "
"mouse wheel, or with scrollbars. It can be used to display part of something "
"that is bigger than the screen. It takes the following properties:"
msgstr ""
"viewport はドラッグやマウスホイールまたはスクロールバーでスクロール可能なスク"
"リーンの領域です。画面より大きいものを表示するために使用され、以下のプロパ"
"ティーを受け取ります。 :"

#: ../../source/screens.rst:1506
msgid ""
"The size that is offered to the child for rendering. An (`xsize`, `ysize`) "
"tuple. This can usually be omitted, when the child can compute it's own "
"size. If either component is None, the child's size is used."
msgstr ""
"レンダリングのために子に指定されるサイズで、 (`xsize`, `ysize`) のタプルで"
"す。子が自身のサイズを算出できるとき、これは通常省略されます。どちらかの要素"
"が None なら子のサイズが使用されます。"

#: ../../source/screens.rst:1513
msgid "This should be one of:"
msgstr "これはつぎのうちの一つです"

#: ../../source/screens.rst:1515
msgid "False"
msgstr "False"

#: ../../source/screens.rst:1516
msgid "To ignore the mousewheel. (The default.)"
msgstr "マウスホイールを無視します (デフォルト)。"

#: ../../source/screens.rst:1517
msgid "True"
msgstr "True"

#: ../../source/screens.rst:1518
msgid "To scroll vertically."
msgstr "縦にスクロールします。"

#: ../../source/screens.rst:1519
msgid "\"horizontal\""
msgstr "\"horizontal\""

#: ../../source/screens.rst:1520
msgid "To scroll horizontally."
msgstr "水平にスクロールします。"

#: ../../source/screens.rst:1526
msgid "\"change\""
msgstr "\"change\""

#: ../../source/screens.rst:1522
msgid ""
"To scroll the viewport vertically, only if doing so would cause the viewport "
"to move. If not, the mousewheel event is passed to the rest of the "
"interface. (For example, if change is given, placing ``key "
"\"viewport_wheeldown\" action Return()`` before the viewport will cause the "
"screen to return if the viewport scrolls past the bottom.)"
msgstr ""
"viewport が動くときのみ、viewport を縦にスクロールします。そうでないなら、マ"
"ウスホイールイベントは残りのインターフェースに渡されます(例えば、changeが指定"
"されていて、 ``key \"viewport_wheeldown\" action Return()`` がviewportの前に"
"記述されていれば、 viewport が下端に達しているならそのスクリーンに処理を返さ"
"せるようにできます)。"

#: ../../source/screens.rst:1528
msgid "\"horizontal-change\""
msgstr "\"horizontal-change\""

#: ../../source/screens.rst:1529
msgid "Combines horizontal scrolling with change mode."
msgstr "Change モードと水平スクロールを組み合わせます。"

#: ../../source/screens.rst:1533
msgid ""
"If True, dragging the mouse will scroll the viewport. This can also be a :"
"ref:`variant <screen-variants>`, in which case the viewport will be "
"draggable if the variant is in place. (For example, ``draggable \"touch\"``.)"
msgstr ""
"True なら、マウスのドラッグが viewport をスクロールします。これには :ref:"
"`variant <screen-variants>` も指定出来、その場合、 viewport はその variant が"
"有効なら draggable となります(例 ``draggable \"touch\"``) 。"

#: ../../source/screens.rst:1539
msgid ""
"Controlls scrolling when the mouse reaches the edge of the viewport. If not "
"None, this should be a two- or three-element tuple:"
msgstr ""
"マウスが viewport の端に到達するとスクロールします。 None を設定するか、2要素"
"か3要素のタプルを設定します :"

#: ../../source/screens.rst:1543
msgid ""
"The first element in the tuple is the distance from the edge of the viewport "
"that edgescrolling begins to take effect, in pixels."
msgstr ""
"タプルの最初の要素は viewport の端からのピクセル数での距離であり、その距離か"
"らエッジスクロールが開始されます。"

#: ../../source/screens.rst:1547
msgid "The second element is the maximum scrolling rate, in pixels per second."
msgstr "第二要素は一秒ごとに何ピクセルスクロールするかの最大値です。"

#: ../../source/screens.rst:1550
msgid ""
"If present, the third element is a function that adjusts the scrolling "
"speed, based on how close to the pointer is to an edge. The function should "
"take a number between -1.0 and 1.0, and return a number in the same range. "
"The default function returns its input, and implements proportional "
"scrolling.  A function that returned -1.0 or 1.0 based on the sign of its "
"input would implement constant-speed scrolling."
msgstr ""
"与えられるなら三番目の要素はスクロールのスピードをマウスポインターと端との距"
"離に基づいて調整する関数です。関数は -0.0 から 1.0 までの範囲の数字を引数に受"
"け取り、同じ範囲の数字を返すべきです。デフォルトの関数では入力をそのまま返"
"し、端との近さに比例してスクロールを加速させます。関数が入力された符号に基づ"
"き 1.0 か -1.0 を返すと一定の速度のスクロールになります。"

#: ../../source/screens.rst:1560
msgid ""
"The :func:`ui.adjustment` used for the x-axis of the viewport. When omitted, "
"a new adjustment is created."
msgstr ""
":func:`ui.adjustment` が viewport の x 軸に使用されます。省略されると新しい "
"adjustment が作成されます。"

#: ../../source/screens.rst:1565
msgid ""
"The :func:`ui.adjustment` used for the y-axis of the viewport. When omitted, "
"a new adjustment is created."
msgstr ""
":func:`ui.adjustment` が viewport の y 軸に使用されます。省略されると新しい "
"adjustment が作成されます。"

#: ../../source/screens.rst:1570
msgid ""
"The initial horizontal offset of the viewport. This may be an integer giving "
"the number of pixels, or a float giving a fraction of the possible offset."
msgstr ""
"viewport の初期の水平位置のオフセットです。これはピクセル数の整数か、可能なオ"
"フセットの割合の小数です。"

#: ../../source/screens.rst:1576
msgid ""
"The initial vertical offset of the viewport. This may be an integer giving "
"the number of pixels, or a float giving a fraction of the possible offset."
msgstr ""
"viewport の初期の垂直位置のオフセットです。これはピクセル数の整数か、可能なオ"
"フセットの割合の小数です。"

#: ../../source/screens.rst:1582
msgid ""
"If not None, scrollbars are added along with this viewport. This works by "
"creating a side layout, and placing the created viewport in the center of "
"the side. If `scrollbars` is \"horizontal\", a horizontal scrollbar is "
"placed beneath the viewport. If `scrollbars` is \"vertical\", a vertical "
"scrollbar is placed to the right of the viewport. If `scrollbars` is \"both"
"\", both horizontal and vertical scrollbars are created."
msgstr ""
"None でなければスクロールバーがこの viewport に追加されます。これは side レイ"
"アウトを作成し、その sideの中心に viewport を作成した viewport を置いて動作し"
"ます。 `scrollbars` が \"horizontal\"  なら水平なスクロールバーが viewport の"
"下に追加され、 `scrollbars` が \"vertical\" なら垂直なスクロールバーが "
"viewport の右に追加されます。 `scrollbars` が \"both\" なら水平垂直両方のスク"
"ロールバーが作成されます。"

#: ../../source/screens.rst:1590
msgid ""
"When `scrollbars` is not None, the `viewport` takes prefixed properties:"
msgstr ""
"`scrollbars` が None でなければ、 `viewport` は次の接頭辞のプロパティーを受け"
"取ります :"

#: ../../source/screens.rst:1592
msgid "Properties beginning with ``viewport_`` are passed to the viewport."
msgstr "``viewport_`` で始まるプロパティーは viewport に渡されます。"

#: ../../source/screens.rst:1593
msgid "Properties beginning with ``side_`` are passed to the side."
msgstr "``side_`` で始まるプロパティーは side に渡されます。"

#: ../../source/screens.rst:1594
msgid ""
"Properties beginning with ``scrollbar_`` are passed to the horizontal "
"scrollbar, if it exists."
msgstr ""
"``scrollbar_`` で始まるプロパティーはあれば水平スクロールバーに渡されます。"

#: ../../source/screens.rst:1595
msgid ""
"Properties beginning with ``vscrollbar_`` are passed to the vertical "
"scrollbar, if it exists."
msgstr ""
"``vscrollbar_`` で始まるプロパティーがあれば、垂直スクロールバーに渡されま"
"す。"

#: ../../source/screens.rst:1597
msgid ""
"Unprefixed properties are also accepted. :ref:`position-style-properties` "
"are passed to the side, while other unprefixed properties are supplied to "
"the viewport."
msgstr ""
"接頭辞のないプロパティーも受け取られます。 :ref:`position-style-properties` "
"は side に渡され、他は viewport に渡されます。"

#: ../../source/screens.rst:1603
msgid ""
"If true, the viewport can be scrolled with the left, right, up, and down "
"arrow keys. This takes precedence over the usual function of these keys, "
"which is changing focus. However, the arrow keys will change focus when the "
"viewport reaches its limits."
msgstr ""
"True なら viewport は上下左右の矢印キーでスクロール可能です。これはフォーカス"
"を変更する通常のこれらのキーの機能に優先します。しかし、viewportが端に到達す"
"ると矢印キーはフォーカスを変更します。"

#: ../../source/screens.rst:1610
msgid ""
"If true, the viewport can be scrolled up and down by the pageup and pagedown "
"keys. This disables the usual functionality of these keys, which is to cause "
"rollback and rollforward."
msgstr ""
"True なら viewport はページアップ/ダウンキーで上下にスクロール可能です。これ"
"はロールバック/フォワードを起こす通常のこれらのキーの機能を無効にします。"

#: ../../source/screens.rst:1614
msgid "In addition, it takes the following groups of style properties:"
msgstr "さらにこれは以下のスタイルプロパティーを受け取ります。 :"

#: ../../source/screens.rst:1622
msgid ""
"To make a viewport scrollable, it's often best to assign an id to it, and "
"then use :func:`XScrollValue` and :func:`YScrollValue` with that id."
msgstr ""
"viewport のスクロールバーを作成するためにはそれに id を与えて、その id を引数"
"に :func:`XScrollValue` と :func:`YScrollValue` を使用するのが最適です。"

#: ../../source/screens.rst:1644
msgid "Vpgrid"
msgstr "Vpgrid"

#: ../../source/screens.rst:1646
msgid ""
"A vpgrid (viewport grid) combines a viewport and grid into a single "
"displayable. The vpgrid takes multiple children (like a grid) and is "
"optimized so that only the children being displayed within the viewport are "
"rendered."
msgstr ""
"vpgrid (viewport grid) は viewport と grid を一つの displayable に結合しま"
"す。 vpgrid は grid のように複数の子を受け取り、それらの子のレンダリングは最"
"適化され、 viewport 内に表示されている子のみがレンダリングされます。"

#: ../../source/screens.rst:1651
msgid ""
"A vpgrid assumes that all children are the same size, the size being taken "
"from the dimensions of the first child. If a vpgrid appears to be rendering "
"incorrectly, please ensure that all children are of the same size."
msgstr ""
"vpgrid はすべてのセルが同じサイズで、最初の子のサイズであると想定します。 "
"vpgrid が誤ってレンダリングされたら、すべての子が同じサイズであるか確認してく"
"ださい。"

#: ../../source/screens.rst:1655
msgid ""
"A vpgrid must be given at least one of the `cols` and `rows` properties. If "
"one is omitted or None, the other is automatically determined from the size, "
"spacing, and number of children. If a row or column would be underfull, "
"``null`` displayable are used to fill the remaining space."
msgstr ""
"vpgrid には `col` か `rows` の少なくとも一つのプロパティーが指定されなければ"
"いけません。一つが省略されるか None であれば、サイズと spacing, 子の数から自"
"動的に決定されます。 row または column が満たされていなければ、 ``null`` "
"Displayable を使用して残りのスペースを埋めます。"

#: ../../source/screens.rst:1660
msgid "Vpgrids take the following properties:"
msgstr "Vgrids は以下のプロパティーを受け取ります。 :"

#: ../../source/screens.rst:1664
msgid "The number of columns in the grid."
msgstr "グリッドの行数"

#: ../../source/screens.rst:1668
msgid "The number of rows in the grid."
msgstr "グリッドの列数"

#: ../../source/screens.rst:1672
msgid ""
"If true, columns are filled before rows. The default of this depends on the "
"`cols` and `rows` properties. If `cols` is given, columns are filled before "
"rows, otherwise rows are filled before columns."
msgstr ""
"True なら列の前に行が埋められます。これのデフォルトは `cols` と `rows` プロパ"
"ティーに依存します。 `cols` が与えられたなら、行が列の前に埋められ、そうでな"
"ければ列が行の前に埋められます。"

#: ../../source/screens.rst:1676
msgid ""
"In addition, a vpgrid takes all properties a :ref:`viewport <sl-viewport>` "
"can, and the following groups of style properties:"
msgstr ""
"さらに vpgrid は :ref:`viewport <sl-viewport>` が可能なすべてのプロパティーと"
"以下のスタイルプロパティーを受け取ります。 :"

#: ../../source/screens.rst:1683
msgid ""
"When the `scrollbar` property is given, prefixed properties are passed to "
"the vpgrid in the same way as they are with viewports. (Properties prefixed "
"with ``viewport_`` are passed to the vpgrid itself.)"
msgstr ""
"`scrollbar` プロパティーが指定されると、接頭辞つきのプロパティーは viewport "
"同様に vpgrid に渡されます (``viewport_`` は vpgrid 自体に渡されます)。"

#: ../../source/screens.rst:1715
msgid "Window"
msgstr "Window"

#: ../../source/screens.rst:1717
msgid ""
"A window is a window that contains a background that is intended for "
"displaying in-game dialogue. It takes the following groups of properties:"
msgstr ""
"widow はゲーム内の台詞を表示するための背景を含むウィンドウのことです。これは"
"以下のプロパティーを受け取ります。 :"

#: ../../source/screens.rst:1740
msgid "Imagemap Statements"
msgstr "Imagemap ステートメント"

#: ../../source/screens.rst:1742
msgid ""
"A convenient way of creating a screen, especially for those who think "
"visually, is to create an imagemap. When creating an imagemap, the imagemap "
"statement is used to specify up to six images. The hotspot and hotbar images "
"are used to carve rectangular areas out of the image, and apply actions and "
"values to those areas."
msgstr ""
"スクリーン、特に視覚的なものを作成する便利な方法は imagemap を使用することで"
"す。 imagemap を作成するときに imagemap ステートメントは 6 つの画像を指定する"
"ために使用されます。hotspot と hotbar の画像はその画像の長方形の領域を切り"
"取って、アクションと value をそれらの領域に適用するために使用されます。"

#: ../../source/screens.rst:1748
msgid "Here's an example of a preferences screen that uses imagemaps."
msgstr "ここに imagemap を使用した preferences スクリーンの例があります。"

#: ../../source/screens.rst:1774
msgid "Imagemap"
msgstr "Imagemap"

#: ../../source/screens.rst:1776
msgid ""
"The imagemap statement is used to specify an imagemap. It takes no "
"parameters, and the following properties:"
msgstr ""
"imagemap ステートメントは画像を指定するために使用されます。これはパラメーター"
"は受け取らず、以下のプロパティーを受け取ります。 :"

#: ../../source/screens.rst:1781
msgid ""
"Used to automatically define the images used by this imagemap. This should "
"be a string that contains %s in it. If it is, and one of the image "
"properties is omitted, %s is replaced with the name of that property, and "
"the value is used as the default for that property."
msgstr ""
"この imagemap に使用する画像を自動的に定義するために使用されます。これは %s "
"を含む文字列であるべきです。これが与えられて、画像のプロパティーの一部が省略"
"されていると %s をそのプロパティーの名前で置き換えて、その値をそのプロパ"
"ティーのデフォルトとして使用します。"

#: ../../source/screens.rst:1787
msgid ""
"For example, if `auto` is \"imagemap_%s.png\", and `idle` is omitted, then "
"idle defaults to \"imagemap_idle.png\". If `auto` is \"imagemap %s\", the "
"``imagemap idle`` image is used."
msgstr ""
"例えば `auto` が \"imagemap_%s.png\" で `idle` が省略されると、 idle はデフォ"
"ルトで \"imagemap_idle.png\" になります。同様に `auto` が \"imagemap %s\" な"
"ら ``imagemap idle`` 画像が使用されます。"

#: ../../source/screens.rst:1796
msgid ""
"The image used for portions of the imagemap that are not part of a hotspot "
"or hotbar."
msgstr "hotspot や hotbar の一部ではない画像を配置するために使用される画像"

#: ../../source/screens.rst:1801
msgid "The image used when a hotspot or hotbar is insensitive."
msgstr "hotspot や hotbar が無効の時に使用される画像"

#: ../../source/screens.rst:1805
msgid ""
"The image used when a hotspot is not selected and not focused, and for the "
"empty portion of unfocused hotbars."
msgstr ""
"hotspot が選択されておらず、フォーカスを持たないとき、また hotbar がフォーカ"
"スを持たずバーが空のときに使用される画像"

#: ../../source/screens.rst:1810
msgid ""
"The image used when a hotspot is not selected and focused, and for the empty "
"portion of focused hotbars."
msgstr ""
"hotspot が選択されておらず、フォーカスを持つとき、また hotbar がフォーカスを"
"持ちバーが空のときに使用される画像"

#: ../../source/screens.rst:1815
msgid ""
"The image used when a hotspot is selected and not focused, and for the full "
"portion of unfocused hotbars."
msgstr ""
"hotspot が選択され、フォーカスを持たないとき、また hotbar がフォーカスを持た"
"ずバーが満タンのときに使用される画像"

#: ../../source/screens.rst:1820
msgid ""
"The image used when a hotspot is selected and focused, and for the full "
"portion of focused hotbars."
msgstr ""
"hotspot が選択され、フォーカスを持つとき、また hotbar がフォーカスを持ちバー"
"が満タンのときに使用される画像"

#: ../../source/screens.rst:1825
msgid ""
"If true, the default, a hotspot only gains focus when the mouse is in an "
"area of the hover image that is opaque. If false, the hotspot gains focus "
"whenever the mouse is within its rectangular boundary."
msgstr ""
"これはデフォルトでは True で、 hotspot はマウスが画像の不透明な領域上にあると"
"きだけフォーカスを持ちます。 False なら hotspot はマウスが長方形の領域上にあ"
"るとフォーカスを持ちます。"

#: ../../source/screens.rst:1831
msgid ""
"If true, the default, hotspot data is cached in to improve performance at "
"the cost of some additional disk space."
msgstr ""
"これはデフォルトでは True で、 hotspot のデータをキャッシュして追加のディスク"
"消費の代わりにパフォーマンスを改善します。"

#: ../../source/screens.rst:1834
msgid "It takes the following groups of properties:"
msgstr "以下のプロパティーを受け取ります。 :"

#: ../../source/screens.rst:1840
msgid ""
"An imagemap creates a fixed, allowing any child to be added to it (not just "
"hotspots and hotbars)."
msgstr ""
"imagemap は fixed を作成し、 ( hotspot と hotbar だけでなく ) すべての子をそ"
"こに追加します。"

#: ../../source/screens.rst:1847
msgid "Hotspot"
msgstr "Hotspot"

#: ../../source/screens.rst:1849
msgid ""
"A hotspot is a button consisting of a portion of the imagemap that contains "
"it. It takes a single parameter, a (x, y, width, height) tuple giving the "
"area of the imagemap that makes up the button. It also takes the following "
"properties:"
msgstr ""
"hotspot は画像で構成されるボタンです。ボタンを作成する imagemap の領域を与え"
"るタプル (x, y, width, height) をパラメーターとして一つ受け取ります。これは以"
"下のプロパティー受け取ります。 :"

#: ../../source/screens.rst:1856
msgid ""
"The action to run when the button is activated. This also controls if the "
"button is sensitive, and if the button is selected."
msgstr ""
"ボタンがアクティベートされると実行されるアクションです。これはボタンが有効"
"か、選択されているかどうかの制御もします。"

#: ../../source/screens.rst:1861
msgid ""
"An action that is run if the hotspot is activated in an alternate manner. "
"Alternate activation occurs when the player right-clicks on the hotspot on a "
"mouse-based platform, or when the player long presses the hotspot on a touch-"
"based platform."
msgstr ""
"ボタンが代替方法でアクティベートされると実行される代替アクションです。代替方"
"法はプレイヤーがマウスベースのプラットフォームでホットスポットを右クリックす"
"るか、タッチベースのプラットフォームで長押しすると発生します。"

#: ../../source/screens.rst:1901
msgid ""
"A hotspot creates a fixed, allowing children to be added to it. The fixed "
"has an area that is the same size as the hotspot, meaning that the children "
"will be positioned relative to the hotspot."
msgstr ""
"hotspot は fixed を作成し、そこに子を追加出来るようにします。 fixed は "
"hotspot と同じ大きさの領域を持つので、子は hotspot に対する相対距離で配置され"
"ます。"

#: ../../source/screens.rst:1905
msgid ""
"Hotspots should be given the ``alt`` style property to allow Ren'Py's self-"
"voicing feature to work."
msgstr ""
"hotspot に ``alt`` スタイルプロパティーを指定すると Ren'Py のセルフボイシング"
"機能が動くようになります。"

#: ../../source/screens.rst:1911
msgid "Hotbar"
msgstr "Hotbar"

#: ../../source/screens.rst:1913
msgid ""
"A hotbar is a bar that consists of a portion of the imagemap that contains "
"it. It takes a single parameter, a (x, y, width, height) tuple giving the "
"area of the imagemap that makes up the button. It also takes the following "
"properties:"
msgstr ""
"hotbar は画像で構成されるバーです。バーを作成する imagemap の領域を与えるタプ"
"ル (x, y, width, height) をパラメーターとして一つ受け取ります。これは以下のプ"
"ロパティー受け取ります。 :"

#: ../../source/screens.rst:1920
msgid ""
"The current value of the bar. This can be either a :ref:`bar value <input-"
"values>` object, or a number."
msgstr ""
"バーの現在の値。これは :ref:`bar value <input-values>` オブジェクトか数字で"
"す。"

#: ../../source/screens.rst:1940
msgid ""
"Hotbars should be given the ``alt`` style property to allow Ren'Py's self-"
"voicing feature to work."
msgstr ""
"hotbar に ``alt`` スタイルプロパティーを指定すると、Ren'Py のセルフボイシング"
"機能が動くようになります。"

#: ../../source/screens.rst:1944
msgid "Add Statement"
msgstr "Add ステートメント"

#: ../../source/screens.rst:1946
msgid ""
"The add statement is a bit special, as it adds an already-exising displayble "
"to the screen. As a result, it doesn't take the properties common to the "
"user interface statements."
msgstr ""
"add ステートメントは少し特殊で、すでに存在する Displayable をスクリーンに追加"
"します。結果としてユーザーインターフェースステートメントへの共通のプロパ"
"ティーを受け取りません。"

#: ../../source/screens.rst:1953
msgid "Add"
msgstr "Add"

#: ../../source/screens.rst:1955
msgid ""
"Adds an image or other displayable to the screen. This optionally takes :ref:"
"`transform properties <transform-properties>`. If at least one transform "
"property is given, a :class:`Transform` is created to wrap the image, and "
"the properties are given to the transform."
msgstr ""
"画像やその他の displayable をスクリーンに追加します。これは任意で :ref:"
"`transform プロパティー <transform-properties>` を受け取ります。少なくとも一"
"つ transform プロパティーが与えられると、 :class:`Transform` が作成され、その"
"画像をラップして、その transform に渡します。"

#: ../../source/screens.rst:1960
msgid "If the displayable is None, nothing is added to the screen."
msgstr "displayable が None ならスクリーンには何も追加されません。"

#: ../../source/screens.rst:1973
msgid "Advanced Displayables"
msgstr "Advanced Displayables"

#: ../../source/screens.rst:1975
msgid ""
"In addition to the commonly-used statements, the screen language has "
"statements that correspond to advanced displayables. The mapping from "
"displayable to statement is simple. Positional parameters of the "
"displayables become positional parameters of the statement. Keyword "
"arguments and the relevant style properties become screen language "
"properties."
msgstr ""
"よく使用されるステートメントに加えてスクリーン言語は高度な displayable に対応"
"するステートメントを持ちます。displayable とステートメントの対応は単純です。"
"displayable の位置パラメーターはそのステートメントの位置パラメーターになり、"
"キーワード引数およびスタイルプロパティーはスクリーン言語のプロパティーになり"
"ます。"

#: ../../source/screens.rst:1982
msgid "The advanced displayable statements are:"
msgstr "高度な displayable のステートメントは次になります。 :"

#: ../../source/screens.rst:1987
msgid "Areapicker"
msgstr "Areapicker"

#: ../../source/screens.rst:1989
msgid ""
"Intended for use in development tools, this lets the user select a "
"rectangular area on the screen. It takes the following properties:"
msgstr ""
"開発ツールでの使用が意図されたもので、ユーザーがスクリーン上に矩形領域を選択"
"できます。以下のプロパティーを受け取ります。 :"

#: ../../source/screens.rst:1994
msgid ""
"If not None, the defaut, this divides the screen up into a grid with this "
"many columns."
msgstr ""
"デフォルトではNone であり、 None でなければ、スクリーンをこの行の数のグリッド"
"に分割します。"

#: ../../source/screens.rst:1999
msgid ""
"If not None, the defaut, this divides the screen up into a grid with this "
"many rows."
msgstr ""
"デフォルトではNone であり、 None でなければスクリーンをこの列の数のグリッドに"
"分割します。"

#: ../../source/screens.rst:2004
msgid ""
"If not None, the default, this is a function called with the x and y "
"coordinates of the location the user first clicked, rounded to the grid."
msgstr ""
"デフォルトではNone であり、 None でなければ、これはユーザーが最初にクリックし"
"たグリッドで丸められた x, y 座標で呼び出される関数です。"

#: ../../source/screens.rst:2010
msgid ""
"This is called with the rectangle, an (x, y, width, height) tuple, whenever "
"the user changes the selected area."
msgstr ""
"ユーザーが選択領域を変更するたび、 (x, y, width, height) タプルで表現される矩"
"形で呼び出されます。"

#: ../../source/screens.rst:2015
msgid ""
"This is called with the rectangle, an (x, y, width, height) tuple, when the "
"user finishes selecting an area."
msgstr ""
"ユーザーが領域の選択を終えると (x, y, width, height) タプルで表現される矩形で"
"呼び出されます。"

#: ../../source/screens.rst:2020
msgid ""
"If true, the child will be shown in the selected area when the selection is "
"complete. If false, the default, the child will be hidden once the selection "
"is complete."
msgstr ""
"True なら選択が完了されるとその選択領域に子が表示されます。デフォルトでは "
"False であり子は一旦選択が完了されると非表示されます。"

#: ../../source/screens.rst:2024
msgid "It takes the following group of properties:"
msgstr "以下のグループのプロパティーを受け取ります。 :"

#: ../../source/screens.rst:2028
msgid ""
"An areapicker takes one child. The child is displayed on the screen in the "
"selected area."
msgstr ""
"areapicker は子を1つ受け取ります。その子はスクリーン上の選択された領域に表示"
"されます。"

#: ../../source/screens.rst:2032
msgid "Drag"
msgstr "Drag"

#: ../../source/screens.rst:2034
msgid ""
"Creates a :class:`Drag` that can be dragged around the screen. With the "
"exception of `d`, which is supplied by the screen language, this takes all "
"properties defined in that class."
msgstr ""
"そのスクリーン周りでドラッグできる :class:`Drag` を作成します。スクリーン言語"
"に提供される `d` を除き、これはそのクラスで定義されたすべてのプロパティーを受"
"け取ります。"

#: ../../source/screens.rst:2038
msgid "It also takes the following properties:"
msgstr "次のプロパティーも受け取ります。 :"

#: ../../source/screens.rst:2041
msgid ""
"The :propref:`hover_sound` and :propref:`activate_sound` style properties"
msgstr ""
" :propref:`hover_sound` と :propref:`activate_sound` スタイルプロパティー"

#: ../../source/screens.rst:2043
msgid "The :propref:`focus_mask` style_property."
msgstr ":propref:`focus_mask` スタイルプロパティー"

#: ../../source/screens.rst:2045
msgid ""
"A drag takes one child, or the :propref:`child` style property can be used "
"to supply the child and its focused variants."
msgstr ""
"drag に子を 1 つ与えるか、 :propref:`child` スタイルプロパティーを使用して子"
"や、それがフォーカスを所得した場合のバージョンを提供できます。"

#: ../../source/screens.rst:2049
msgid "Draggroup"
msgstr "Draggroup"

#: ../../source/screens.rst:2051
msgid ""
"Creates a :class:`DragGroup`.  This takes the same properties as :class:"
"`DragGroup`, and also takes the following properties:"
msgstr ""
":class:`DragGroup` を作成します。これは :class:`DragGroup` と同じプロパティー"
"と、次のプロパティーも 受け取ります。 :"

#: ../../source/screens.rst:2056
msgid ""
"A drag group may have zero or more drags as its children. It may also have "
"non-drags as children, in which case it functions like fixed."
msgstr ""
"ドラッググループは子として 0 以上の Drag を受け取ります。 drag でないものも子"
"として受け取れ、その場合、 fixed のように機能します。"

#: ../../source/screens.rst:2063
msgid "Has Statement"
msgstr "Has ステートメント"

#: ../../source/screens.rst:2065
msgid ""
"The has statement allows you to specify a container to use, instead of "
"fixed, for statements that take only one child. The has statement may only "
"be used inside a statement that takes one child. The keyword ``has`` is "
"followed (on the same line) by another statement, which must be a statement "
"that creates a container displayable, one that takes more than one child."
msgstr ""
"has ステートメントは子を一つだけ受け取るステートメントのために使用するコンテ"
"ナを、 fixed の代わりに指定できるようにします。 has ステートメントはおそらく"
"一つの子のみを受け取るステートメントの内部で使用されるでしょう。キーワード引"
"数 ``has`` の (同じ行の) 後にはもう一つのステートメントが続き、それは一つ以上"
"の子を受け取るコンテナの displayable を作成するステートメントでなければなりま"
"せん。"

#: ../../source/screens.rst:2072
msgid ""
"The has statement changes the way in which the block that contains it is "
"parsed. Child displayables created in that block are added to the container, "
"rather than the parent displayable. Keyword arguments to the parent "
"displayable are not allowed after the has statement. Multiple has statements "
"can be used in the same block."
msgstr ""
"has ステートメントはそれを含むブロックの解釈を変更しします。そのブロックで作"
"成された子の displayable は親の displayable ではなくそのコンテナに追加されま"
"す。親の displayable に対するキーワード引数は has ステートメントの後は許可さ"
"れません。複数の has ステートメントが同じブロックで使用可能です。"

#: ../../source/screens.rst:2078
msgid ""
"The has statement can be supplied as a child of the following statements:"
msgstr "has ステートメントは以下のステートメントの子として提供されます。"

#: ../../source/screens.rst:2081
msgid "button"
msgstr "button"

#: ../../source/screens.rst:2082
msgid "frame"
msgstr "frame"

#: ../../source/screens.rst:2083
msgid "window"
msgstr "window"

#: ../../source/screens.rst:2085
msgid "The has statement can be given the following statements as a container."
msgstr "has ステートメントには以下のステートメントが入れ物として与えられます。"

#: ../../source/screens.rst:2088
msgid "fixed"
msgstr "fixed"

#: ../../source/screens.rst:2089
msgid "grid"
msgstr "grid"

#: ../../source/screens.rst:2090
msgid "hbox"
msgstr "hbox"

#: ../../source/screens.rst:2091
msgid "side"
msgstr "side"

#: ../../source/screens.rst:2092
msgid "vbox"
msgstr "vbox"

#: ../../source/screens.rst:2106
msgid "Control Statements"
msgstr "制御用のステートメント"

#: ../../source/screens.rst:2108
msgid ""
"The screen language includes control statements for conditional execution, "
"iteration, including other screens, executing actions when events occur, and "
"executing arbitrary Python."
msgstr ""
"スクリーン言語には、条件実行や反復、他のスクリーンを含んだり、イベントによる"
"アクションや任意の python コードを実行したりするための制御用ステートメントが"
"あります。"

#: ../../source/screens.rst:2115
msgid "Default"
msgstr "Default"

#: ../../source/screens.rst:2117
msgid ""
"The ``default`` statement sets the default value of a variable, if it is not "
"passed as an argument to the screen, or inherited from a screen that calls "
"us using the use statement."
msgstr ""
"``default`` ステートメントは変数がスクリーンの引数として渡されなかったり、 "
"use ステートメントを使用してそのスクリーンを呼び出しているスクリーンから継承"
"されなければ変数のデフォルトの値を設定します。"

#: ../../source/screens.rst:2137
msgid "For"
msgstr "For"

#: ../../source/screens.rst:2139
msgid ""
"The ``for`` statement is similar to the Python ``for`` statement, except "
"that it does not support the ``else`` clause (it does, however, support the "
"``continue`` and ``break`` statements). It supports assignment to "
"(optionally nested) tuple patterns, as well as variables."
msgstr ""
"``for`` ステートメントは python の ``for`` ステートメントに相当しますが、"
"``else`` 節をサポートしていません( ``continue`` と ``break` ステートメントは"
"サポートします)。変数同様に(任意にネストされた)タプルへの代入もサポートしてい"
"ます。"

#: ../../source/screens.rst:2154
msgid "The for statement takes an index clause::"
msgstr "for ステートメントは index 節を受け取ります。 ::"

#: ../../source/screens.rst:2162
msgid ""
"If given, the ``index`` clause should consist of an expression that returns "
"a hashable and comparable value that is unique for each row in the list. "
"Ren'Py uses this value to make sure that transforms and other state wind up "
"associated with the correct iteration. If you're seeing weird behavior when "
"elements are added to or removed from a list you're iterating over, you "
"might want to use an index clause."
msgstr ""
"``index`` 節があれば、そのリストの各行に対してユニークである、ハッシュがあり"
"比較出来る値を返す式で構成されるべきです。Ren'Py はこの値を使用して "
"transform とその他の状態を確認します。Ren'Py はこの値を使用して transform や"
"その他の状態が適切な反復をするようにします。繰り返し処理するリストに要素が追"
"加または除去されるときの奇妙な振る舞いを見たなら、 index 節が使いたくなるで"
"しょう。"

#: ../../source/screens.rst:2173
msgid "If"
msgstr "If"

#: ../../source/screens.rst:2175
msgid ""
"The screen language ``if`` statement is the same as the Python/Ren'Py ``if`` "
"statement. It supports the ``if``, ``elif``, and ``else`` clauses."
msgstr ""
"スクリーン言語の ``if`` ステートメントは Python/Ren'Py の ``if`` ステートメン"
"トと同様です。 ``if``, ``elif``, ``else`` 節をサポートしています。"

#: ../../source/screens.rst:2189
msgid "On"
msgstr "On"

#: ../../source/screens.rst:2191
msgid ""
"The ``on`` statement allows the screen to execute an action when an event "
"occurs. It takes one parameter, a string giving the name of an event. This "
"should be one of:"
msgstr ""
"``on`` ステートメントはイベントによってスクリーンがアクションを実行できるよう"
"にします。パラメーターを一つ受け取り、それはイベントの名前です。これは以下の"
"うち一つであるべきです。 :"

#: ../../source/screens.rst:2195
msgid "``\"show\"``"
msgstr "``\"show\"``"

#: ../../source/screens.rst:2196
msgid "``\"hide\"``"
msgstr "``\"hide\"``"

#: ../../source/screens.rst:2197
msgid "``\"replace\"``"
msgstr "``\"replace\"``"

#: ../../source/screens.rst:2198
msgid "``\"replaced\"``"
msgstr "``\"replaced\"``"

#: ../../source/screens.rst:2200
msgid ""
"It then takes an action property, giving an action to run if the event "
"occurs."
msgstr "イベント時に実行するアクションを指定するプロパティーを受け取ります。"

#: ../../source/screens.rst:2220
msgid "Use"
msgstr "Use"

#: ../../source/screens.rst:2222
msgid ""
"The ``use`` statement allows a screen to include another. The use statement "
"takes the name of the screen to use. This can optionally be followed by an "
"argument list, in parenthesis."
msgstr ""
"``use`` ステートメントはスクリーンに他のスクリーンを含めるようにします。 use "
"ステートメントは使用するスクリーンの名前を受け取ります。これには任意で括弧で"
"囲まれた引数リストが続きます。"

#: ../../source/screens.rst:2226
msgid ""
"If the used screen has no parentheses, it has read and write access to the "
"scope of the current screen, updated with any keyword arguments passed via "
"the ``use`` statement. Otherwise, its scope is initialized to the result of "
"assigning the arguments to those parameters. ::"
msgstr ""
"使用されるスクリーンに括弧がなければ、現在のスクリーンのスコープに読み込み書"
"き込みでき、 ``use`` ステートメントで渡されたキーワード引数で更新されます。そ"
"うでなければそのスコープは引数をそれらのパラメーターに割り当てた結果で初期化"
"されます。 ::"

#: ../../source/screens.rst:2249
msgid ""
"The use statement may take one property, ``id``, which must be placed after "
"the parameter list if present. This screen is only useful when two screens "
"with the same tag use the same screen. In this case, when one screen "
"replaces the other, the state of the used screen is transfered from old to "
"new."
msgstr ""
"use ステートメントは必要ならプロパティー ``id`` をパラメーターリストの後に 1 "
"つ受け取れます。このスクリーンは同じタグを持つ 2 つのスクリーンが同じスクリー"
"ンを使用するときのみ有用です。この場合、あるスクリーンが他方のスクリーンを置"
"き換えると、使用されたスクリーンの状態は以前のスクリーンから新しいスクリーン"
"へ譲渡されます。"

#: ../../source/screens.rst:2281
msgid ""
"Instead of the name of the screen, the keyword ``expression`` can be given, "
"followed by an expression giving the name of the screen to use. If "
"parameters are required, the ``pass`` keyword must be given to separate them "
"from the expression."
msgstr ""
"スクリーン名の代わりに、キーワード引数 ``expression`` も指定でき、使用するス"
"クリーン名を指定する式が続きます。スクリーンに引数が必要なら、 ``pass`` キー"
"ワードを使用して式と分離しなければなりません。"

#: ../../source/screens.rst:2308
msgid "Use and Transclude"
msgstr "Use と Transclude"

#: ../../source/screens.rst:2310
msgid ""
"A use statement may also take a block containing screen language statements. "
"When a block is given, the screen that is used may contain the "
"``transclude`` statement. The ``transclude`` statement is replaced with the "
"statements contained within the use statement's block."
msgstr ""
"use ステートメントはスクリーン言語ステートメントのブロックも受け取れます。ブ"
"ロック指定時に使用されるスクリーンには ``transclude`` ステートメントがあるで"
"しょう。 ``transclude`` ステートメントは use ステートメントのブロック内にある"
"ステートメントで置き換えられます。"

#: ../../source/screens.rst:2315
msgid ""
"This makes it possible to define reusable layouts using screens. For "
"example, the screen::"
msgstr ""
"これによりスクリーンを使用して再利用可能なレイアウトが定義出来るようになりま"
"す。例えば次のスクリーン ::"

#: ../../source/screens.rst:2328
msgid ""
"is meant to be a reusable component that wraps other components. Here's an "
"example of how it can be used::"
msgstr ""
"これは他の要素をラップする再利用可能な要素であることを意図しています。次のよ"
"うに使用します。 ::"

#: ../../source/screens.rst:2340
msgid ""
"The use and transclude constructs form the basis of :ref:`creator-defined "
"screen language statements <creator-defined-sl>`."
msgstr ""
"use と transclude は :ref:`ユーザー定義スクリーン言語ステートメント <creator-"
"defined-sl>` に基づいて形式を組み立てます。"

#: ../../source/screens.rst:2346
msgid "Python"
msgstr "Python"

#: ../../source/screens.rst:2348
msgid ""
"The screen language also includes single-line and multiple-line Python "
"statements, which can execute Python. The Python runs in the scope of the "
"screen."
msgstr ""
"スクリーン言語には python コードを実行する一行または複数行の python ステート"
"メントも含まれます。このコードはそのスクリーンのスコープで実行します。"

#: ../../source/screens.rst:2352
msgid ""
"**Python must not cause side effects that are visible from outside the "
"screen.** Ren'Py will run a screen multiple times, as it deems necessary. It "
"runs a screen as part of the image prediction process, before the screen is "
"first shown. As a result, if a screen has side effects, those side effects "
"may occur at unpredictable times."
msgstr ""
"**python コードはスクリーンの外への副作用を起こしてはいけません。** Ren'Py は"
"スクリーンが最初に表示される前に画像予測処理の一部として必要なら何度もスク"
"リーンのコードを実行します。結果としてスクリーンのコードが副作用を持つなら、"
"それが何回実行されるかはわかりません。"

#: ../../source/screens.rst:2374
msgid "Showif Statement"
msgstr "Showif Statement"

#: ../../source/screens.rst:2376
msgid ""
"The ``showif`` statement takes a condition. It shows its children when the "
"condition is true, and hides the children when the condition is false. When "
"showif's children have transforms, it will supply them with ATL events to "
"manage the show and hide process, so that Ren'Py can animate the show and "
"hide process."
msgstr ""
"``showif`` ステートメントは条件を受け取ります。条件が Trueならその子を表示"
"し、 False ならその子を非表示にします。 showif の子が transform を持つなら、"
"子に ATL イベントを送り、表示、非表示処理を管理して Ren'Py がアニメーションで"
"表示、非表示出来るようにします。"

#: ../../source/screens.rst:2382
msgid ""
"The ``showif`` statement wraps its children in a displayable that manages "
"the show and hide process."
msgstr ""
"``showif`` ステートメントは displayable 内のその子を表示非表示処理を管理する "
"displayable にラップします。"

#: ../../source/screens.rst:2385
msgid ""
"Multiple showif statements can be grouped together into a single ``showif``/"
"``elif``/``else`` construct, similiar to an if statement. **Unlike the if "
"statement, showif executes all of its blocks, including Python, even if the "
"condition is false.** This is because the showif statement needs to create "
"the children that it is hiding."
msgstr ""
"複数の showif ステートメントは if ステートメント同様 1 つの ``showif``/"
"``elif``/``else`` 構造に纏められます。**if ステートメントとは違い、条件が "
"False であっても python コードを含むそのブロックを showif はすべて実行しま"
"す。** これは showif ステートメントが非表示される子を作成する必要があるためで"
"す。 "

#: ../../source/screens.rst:2391
msgid "Showif delivers three events to its children:"
msgstr "showif は 3 つのイベントをその子に送ります。"

#: ../../source/screens.rst:2394
msgid "``appear``"
msgstr "``appear``"

#: ../../source/screens.rst:2394
msgid ""
"Is delivered if the condition is true when the screen is first shown, to "
"instantly show the child."
msgstr ""
"スクリーンが最初に表示されたときに条件が True なら送られ、即座に子を表示しま"
"す。"

#: ../../source/screens.rst:2396
msgid "``show``"
msgstr "``show``"

#: ../../source/screens.rst:2397
msgid "Is delivered when the condition changes from false to true."
msgstr "条件が False から True に変わると送られます。"

#: ../../source/screens.rst:2399
msgid "``hide``"
msgstr "``hide``"

#: ../../source/screens.rst:2399
msgid "Is delivered when the condition changes from true to false."
msgstr "条件が True から False に変わると送られます。"

#: ../../source/screens.rst:2401
msgid ""
"For these purposes, the condition of an ``elif`` clause is always false if "
"any prior condition is true, while the condition of an else clause is only "
"true when all prior conditions are false."
msgstr ""
"これらの目的のため、 ``elif`` 節の条件はそれ以前の条件が True なら常に False "
"で、すべての前の条件が False なら else 節だけが True になります。"

#: ../../source/screens.rst:2405
msgid "For example::"
msgstr "例 ::"

#: ../../source/screens.rst:2442
msgid "Screen Statements"
msgstr "スクリーン・ステートメント"

#: ../../source/screens.rst:2444
msgid ""
"In addition to the screen statement, there are three Ren'Py script language "
"statements that involve screens."
msgstr ""
"Ren'Py 言語にはスクリーンに作用する三つのスクリーンステートメントがあります。"

#: ../../source/screens.rst:2450
msgid "Show Screen"
msgstr "Show Screen"

#: ../../source/screens.rst:2452
msgid ""
"The ``show screen`` statement causes a screen to be shown. It takes an "
"screen name, a series of optional clauses, and optional Python arguments "
"which are passed to the screen. :func:`renpy.show_screen` and :func:`renpy."
"call_screen` take additional specific keywords."
msgstr ""
"``show screen`` ステートメントはスクリーンを表示します。スクリーン名と任意の"
"一連の節、任意の Python 引数を受け取り、スクリーンに渡します。 :func:"
"`show_screen` と :func:`call_screen` は追加の特別なキーワードも受け取ります。"

#: ../../source/screens.rst:2457
msgid ""
"The ``show screen`` statement takes the following clauses, some of them "
"similar to the clauses of the :ref:`show-statement`:"
msgstr ""
"``show screen`` ステートメントは次の節を受け取り、それらの一部は :ref:`show-"
"statement` の節と類似します。 :"

#: ../../source/screens.rst:2463 ../../source/screens.rst:2574
msgid "``as``"
msgstr "``as``"

#: ../../source/screens.rst:2461 ../../source/screens.rst:2572
msgid ""
"The ``as`` clause takes a name. If not specified, it defaults to the tag "
"associated with the screen (see the :ref:`screen-statement`). If that's not "
"specified, it defaults to the name of the screen."
msgstr ""
"``as`` 節は名前を受け取ります。指定されないとそのスクリーンに関連付けられたタ"
"グがデフォルトとなります (:ref:`screen-statement` を参照してください)。それも"
"指定されていないと、スクリーンの名前がデフォルトとなります。"

#: ../../source/screens.rst:2466 ../../source/screens.rst:2577
msgid "``onlayer``"
msgstr "``onlayer``"

#: ../../source/screens.rst:2466 ../../source/screens.rst:2577
msgid "The layer to show the screen on."
msgstr "スクリーンを表示するレイヤーです。"

#: ../../source/screens.rst:2471 ../../source/screens.rst:2582
msgid "``zorder``"
msgstr "``zorder``"

#: ../../source/screens.rst:2469 ../../source/screens.rst:2580
msgid ""
"The zorder to show the screen on. If not specified, defaults to the zorder "
"associated with the screen. If that's not specified, it is 0 by default."
msgstr ""
"そのスクリーンを表示する zorder です。指定されないとそのスクリーンに関連付け"
"られた zorder がデフォルトとなります (:ref:`screen-statement` を参照してくだ"
"さい)。それも指定されていないと、 0 がデフォルトとなります。"

#: ../../source/screens.rst:2481 ../../source/screens.rst:2598
msgid "``expression``"
msgstr "``expression``"

#: ../../source/screens.rst:2474
msgid ""
"If the ``expression`` keyword is given, the expression following it will be "
"evaluated as the screen name. To pass arguments to the screen with the "
"expression keyword, separate the expression and arguments with the ``pass`` "
"keyword::"
msgstr ""
"``expression`` キーワードが指定されると、それに続く式がスクリーン名として評価"
"されます。expression キーワードでスクリーンに引数を渡すには、式と引数を "
"``pass`` キーワードで区切ります。 ::"

#: ../../source/screens.rst:2487 ../../source/screens.rst:2605
msgid "``with``"
msgstr "``with``"

#: ../../source/screens.rst:2484
msgid ""
"This is interpreted in the same way that the with clause of a ``show`` "
"statement is::"
msgstr "``show screen`` ステートメントの with 節と同様に解釈されます。 ::"

#: ../../source/screens.rst:2498 ../../source/screens.rst:2592
msgid "``nopredict``"
msgstr "``nopredict``"

#: ../../source/screens.rst:2490
msgid ""
"The ``nopredict`` keyword doesn't take a value. It prevents screen "
"prediction from occurring. During screen prediction, arguments to the screen "
"are evaluated. Please ensure that evaluating the screen arguments does not "
"cause unexpected side-effects to occur."
msgstr ""
"``nopredict`` キーワードは値を受け取りません。スクリーンの予測を禁止します。"
"スクリーンの予測中にスクリーンへの引数は評価されます。スクリーン引数の評価が"
"不測の副作用を起さないように確認してください。"

#: ../../source/screens.rst:2497 ../../source/screens.rst:2591
msgid ""
"If evaluating the arguments to a screen causes side-effects to occur, your "
"game may behave in unexpected ways."
msgstr ""
"スクリーンの引数の評価が副作用を起すなら、あなたのゲームは予測しない方法で動"
"作するかもしれません。"

#: ../../source/screens.rst:2500
msgid ""
"Screens shown in this way are displayed until they are explicitly hidden. "
"This allows them to be used for overlay purposes."
msgstr ""
"このように表示されたスクリーンは明示的に非表示にされるまで表示されます。これ"
"によりそれらで意図的に上書きが出来ます。"

#: ../../source/screens.rst:2514
msgid "Hide Screen"
msgstr "Hide Screen"

#: ../../source/screens.rst:2516
msgid ""
"The ``hide screen`` statement is used to hide a screen that is currently "
"being shown. It takes a screen tag. It first tries to find a screen with the "
"given tag on the given layer (see the ``onlayer`` clause). If none is found, "
"it looks for a screen with that name on the layer, regardless of the tag the "
"screen is shown as. If none is found, nothing happens::"
msgstr ""
"``hide screen`` ステートメントを使用して現在表示されているスクリーンを非表示"
"します。スクリーンタグを受け取ります。まず指定されたタグを指定のレイヤーで探"
"そうとし (``onlayer`` 節を参照してください)、見つからなければ、そのスクリーン"
"が表示されたタグに関係なくそのレイヤー上の元のスクリーン名で探します。それで"
"も見つからなければ何もしません。 ::"

#: ../../source/screens.rst:2538
msgid ""
"It also takes the ``onlayer`` clause, which defaults to the ``screens`` "
"layer."
msgstr ""
"It also takes the ``onlayer`` clause, which defaults to the ``screens`` "
"layer."

#: ../../source/screens.rst:2541
msgid ""
"The with clause is interpreted the same way the ``with`` clause of a :ref:"
"`show-statement` is."
msgstr "with 節は :ref:`show-statement` の ``show`` 節と同様に解釈されます。"

#: ../../source/screens.rst:2544
msgid ""
"Similar to the ``show screen`` statement, ``hide screen`` also takes the "
"``expression`` keyword, allowing to use an arbitrary expression as the "
"screen name."
msgstr ""
"``show screen`` ステートメントと同様に、 ``hide screen`` も ``expression`` "
"キーワードを受け取り、任意の式をスクリーン名として使用できます。"

#: ../../source/screens.rst:2558
msgid "Call Screen"
msgstr "Call Screen"

#: ../../source/screens.rst:2560
msgid ""
"The ``call screen`` statement shows a screen, and then hides it again at the "
"end of the current interaction. If the screen returns a value, then the "
"value is placed in the global ``_return`` variable."
msgstr ""
"``call screen`` ステートメントはスクリーンを表示し、現在のインタラクションが"
"終了するとそれを非表示にします。そのスクリーンが値を返すならその値はグローバ"
"ルの ``_return`` 変数に代入されます。"

#: ../../source/screens.rst:2564
msgid ""
"This can be used to display an imagemap. The imagemap can place a value into "
"the ``_return`` variable using the :func:`Return` action, or can jump to a "
"label using the :func:`Jump` action."
msgstr ""
"これは imagemap を表示するために使用されます。 imagemap は :func:`Return` ア"
"クションを利用して値を変数 `_return` に代入するか、 :func:`Jump` アクションを"
"使用してラベルにジャンプできます。"

#: ../../source/screens.rst:2568
msgid ""
"The call screen statement takes various optional clauses, most of them "
"similar to those of the :ref:`show-screen-statement`:"
msgstr ""
"call screen ステートメントは様々な任意の節を受け取られ、それらの殆どは :ref:"
"`show-screen-statement` のものと類似します。 :"

#: ../../source/screens.rst:2585
msgid ""
"This keyword prevents screen prediction from occurring. During screen "
"prediction, arguments to the screen are evaluated. Please ensure that "
"evaluating the screen arguments does not cause unexpected side-effects to "
"occur."
msgstr ""
"このキーワードはスクリーンの予測を近視します。スクリーンの予測中にスクリーン"
"への引数は評価されます。スクリーン引数の評価が不測の副作用を起さないように確"
"認してください。"

#: ../../source/screens.rst:2595
msgid ""
"Similar to the ``show screen`` statement, ``call screen`` also takes the "
"``expression`` keyword, allowing to use an arbitrary expression as the "
"screen name. This also comes with the ``pass`` keyword, allowing arguments "
"to be passed to the screen."
msgstr ""
"``show screen`` ステートメントと同様に、 ``call screen`` も ``expression`` "
"キーワードを受け取り、任意の式をスクリーン名として使用できます。スクリーンへ"
"引数を渡す ``pass`` キーワードも同様です。"

#: ../../source/screens.rst:2601
msgid ""
"In a call screen statement, the ``with`` clause causes a transition to occur "
"when the screen is shown."
msgstr ""
"call screen ステートメントで、 ``with`` 節はそのスクリーン表示時にトランジ"
"ションを起こさせます。"

#: ../../source/screens.rst:2604
msgid ""
"This does **not** cause a ``with None`` occur before the screen is shown, so "
"all show and hide statements before the screen will run. If you need a "
"``with None``, add one."
msgstr ""
"これはスクリーンが表示される前に `` with None`` を発生させないため、そのスク"
"リーンの前のすべての show ステートメントと hide ステートメントが実行されま"
"す。 `` with None`` が必要な場合は、追加してください。"

#: ../../source/screens.rst:2607
msgid ""
"Since calling a screen is an interaction, and interactions trigger an "
"implicit ``with None``, using a ``with`` statement after the ``call screen`` "
"instruction won't make the screen disappear using the transition, as the "
"screen will already will be gone. To disable the implicit ``with None`` "
"transition, pass the ``_with_none=False`` special keyword argument to the "
"screen, as in the example below."
msgstr ""
"スクリーンの呼び出しはインタラクションであり、インタラクションは暗黙に "
"``with None`` を伴うため、 ``call screen`` の後に ``with`` ステートメントを続"
"けてもすでにそのスクリーンは表示されていないため、トランジションを使用してス"
"クリーンを消しません。暗黙の ``with None`` トランジションを無効にするには、特"
"別なキーワード引数 ``_with_none=False`` を以下の例のようにスクリーンに渡して"
"ください。"

#: ../../source/screens.rst:2614
msgid ""
"Other ways of triggering transitions also work, such as the "
"``[ With(dissolve), Return() ]`` action list."
msgstr ""
"``[ With(dissolve), Return() ]`` アクションリストのようなトランジションを発生"
"させる他の方法も動作します。"

#: ../../source/screens.rst:2638
msgid "Screen Variants"
msgstr "スクリーン variant"

#: ../../source/screens.rst:2640
msgid ""
"Ren'Py runs both on traditional mouse-oriented devices such as Windows, Mac, "
"and Linux PCs, and newer touch-oriented devices such as Android-based "
"smartphones and tablets. Screen variants allow a game to supply multiple "
"versions of a screen, and use the version that best matches the hardware it "
"is running on."
msgstr ""
"Ren'Py は Windows, Mac, Linux PC のような伝統的なマウスを持つデバイスと "
"Android ベースのスマートフォンやタブレットのような最新のタッチベースのデバイ"
"ス両方で動作します。スクリーン variant によりゲームは複数の種類のスクリーンを"
"提供でき、実行中のハードウェアに最適なものを使用できます。"

#: ../../source/screens.rst:2646
msgid ""
"Ren'Py chooses a screen variant to use by searching variants in the order "
"they are listed in :var:`config.variants`. The first variant that exists is "
"used."
msgstr ""
"Ren'Py は :var:`config.variants` にリストされた順番で variant を探索して使用"
"するスクリーン variant を選択します。存在する最初の variant が使用されます。"

#: ../../source/screens.rst:2650
msgid ""
"If the RENPY_VARIANT environment variable is present, config.variants is "
"initialized by splitting the value of the variable on whitespace, and then "
"appending ``None``. Setting RENPY_VARIANT to a value such as ``\"medium "
"tablet touch\"`` or ``\"small phone touch\"`` allows screens intended for "
"Android devices to be tested on a PC."
msgstr ""
"環境変数 RENPY_VARIANT があれば空白でその変数を分割し、 ``None`` を追加して "
"config.variants を初期化します。RENPY_VARIANT を 「medium tablet touch」や"
"「small phone touch」のように設定すると PC で android デバイス用のスクリーン"
"をテスト出来ます。"

#: ../../source/screens.rst:2656
msgid ""
"If the environment variable is not present, a list of variants is built up "
"automatically, by going through the following list in order and choosing the "
"entries that apply to the current platform."
msgstr ""
"環境変数がなければ variant のリストは以下のリストを順番に探索して現在のプラッ"
"トフォームに対応するものを選んで自動的に生成されます。"

#: ../../source/screens.rst:2661
msgid "``\"steam_deck\"``"
msgstr "``\"steam_deck\"``"

#: ../../source/screens.rst:2661
msgid "True if running on a Steam Deck or equivalent hardware."
msgstr ""
"Steam Deck またはそれに相当するハードウェアで実行していれば True です。"

#: ../../source/screens.rst:2664
msgid "``\"steam_big_picture\"``"
msgstr "``\"steam_big_picture\"``"

#: ../../source/screens.rst:2664
msgid "True if running in Steam Big Picture mode."
msgstr "Steam Big Picture モードで実行していれば True です。"

#: ../../source/screens.rst:2669
msgid "``\"large\"``"
msgstr "``\"large\"``"

#: ../../source/screens.rst:2667
msgid ""
"A screen large enough that relatively small text can be comfortably read, "
"and buttons can be easily clicked. This is used for computer screens."
msgstr ""
"比較的小さなテキストを快適に読め、ボタンを簡単にクリックできる十分大きな画面"
"です。これはコンピューターの画面に使用されます。"

#: ../../source/screens.rst:2674
msgid "``\"medium\"``"
msgstr "``\"medium\"``"

#: ../../source/screens.rst:2672
msgid ""
"A screen where smallish text can be read, but buttons may need to grow in "
"size so they can be comfortably pressed. This is used for tablets."
msgstr ""
"やや小さいテキストは読めるが、ボタンは快適に押せるためにはサイズを大きくしな"
"ければならない画面です。これはタブレットで使用されます。"

#: ../../source/screens.rst:2680
msgid "``\"small\"``"
msgstr "``\"small\"``"

#: ../../source/screens.rst:2677
msgid ""
"A screen where text must be expanded in order to be read. This is used for "
"phones and televisions. (A television might be physically large, but it's "
"often far away, making it hard to read.)"
msgstr ""
"テキストを読むためにも字を大きくする必要がある画面です。これは携帯やテレビで"
"使用されます ( テレビは物理的には大きいですが、大概遠くて見にくいです )。"

#: ../../source/screens.rst:2685
msgid "``\"tablet\"``"
msgstr "``\"tablet\"``"

#: ../../source/screens.rst:2683
msgid ""
"Defined on touchscreen based devices where the screen has a diagonal size of "
"6 inches or more. (In general, ``\"medium\"`` should be used instead of ``"
"\"tablet\"``.)"
msgstr ""
"画面の対角線が 6 インチタッチかそれ以上のタッチスクリーンベースのデバイスで定"
"義されます ( 通常は「 medium 」が「 tablet 」の代わりに使用されます )。"

#: ../../source/screens.rst:2691
msgid "``\"phone\"``"
msgstr "``\"phone\"``"

#: ../../source/screens.rst:2688
msgid ""
"Defined on touchscreen-based devices where the diagonal size of the screen "
"is less than 6 inches. On such a small device, it's important to make "
"buttons large enough a user can easily choose them. (In general, ``\"small"
"\"`` should be used instead of ``\"phone\"``.)"
msgstr ""
"画面の対角線が 6 インチタッチかそれ以下のタッチスクリーンベースのデバイスで定"
"義されます。そのような小さなデバイスではボタンを十分に大きくして簡単に選択で"
"きるようにすることが重要です ( 通常は「 small 」が「 phone 」の代わりに使用さ"
"れます )。"

#: ../../source/screens.rst:2694
msgid "``\"touch\"``"
msgstr "``\"touch\"``"

#: ../../source/screens.rst:2694
msgid "Defined on touchscreen-based devices."
msgstr "タッチスクリーンベースのデバイスで定義されます。"

#: ../../source/screens.rst:2697
msgid "``\"tv\"``"
msgstr "``\"tv\"``"

#: ../../source/screens.rst:2697
msgid "Defined on television-based devices."
msgstr "TV ベースのデバイスで定義されます。"

#: ../../source/screens.rst:2700
msgid "``\"firetv\"``"
msgstr "``\"firetv\"``"

#: ../../source/screens.rst:2700
msgid ""
"Defined on the Amazon Fire TV console. (``\"tv\"`` and ``\"small\"`` are "
"also defined.)"
msgstr ""
"Amazon Fire TV のコンソール上で定義されます (\"tv\" と \"small\" も定義されま"
"す )。"

#: ../../source/screens.rst:2703
msgid "``\"chromeos\"``"
msgstr "``\"chromeos\"``"

#: ../../source/screens.rst:2703
msgid "Defined when running as an Android app on a Chromebook."
msgstr "Chromebook 上で Android app として実行時に定義されます。"

#: ../../source/screens.rst:2706
msgid "``\"android\"``"
msgstr "``\"android\"``"

#: ../../source/screens.rst:2706
msgid "Defined on all Android devices."
msgstr "すべての Android デバイスで定義されます。"

#: ../../source/screens.rst:2711
msgid "``\"ios\"``"
msgstr "``\"ios\"``"

#: ../../source/screens.rst:2709
msgid ""
"Defined on iOS devices, like the iPad (where ``\"tablet\"`` and ``\"medium"
"\"`` are also defined) and the iPhone (where ``\"phone\"`` and ``\"small\"`` "
"are also defined)."
msgstr ""
"iPad ( ``\"tablet\"`` と ``\"medium\"`` も定義されます )や iPhone (``\"phone"
"\"`` と ``\"small\"`` も定義されます)のような iOS デバイスで定義されます。"

#: ../../source/screens.rst:2714
msgid "``\"mobile\"``"
msgstr "``\"mobile\"``"

#: ../../source/screens.rst:2714
msgid ""
"Defined on mobile platforms, such as Android, iOS and mobile web browsers."
msgstr ""
"Android や iOS, モバイルウェブブラウザー のようなモバイルプラットフォームを定"
"義します。"

#: ../../source/screens.rst:2719
msgid "``\"pc\"``"
msgstr "``\"pc\"``"

#: ../../source/screens.rst:2717
msgid ""
"Defined on Windows, Mac OS X, and Linux. A PC is expected to have a mouse "
"and keyboard present, to allow buttons to be hovered, and to allow precise "
"pointing."
msgstr ""
"Windows, Mac OS X, Linux で定義されます。 PCはマウスとキーボードを所持し、ボ"
"タンへのフォーカスと正確な移動が出来ると期待されます。"

#: ../../source/screens.rst:2722
msgid "``\"web\"``"
msgstr "``\"web\"``"

#: ../../source/screens.rst:2722
msgid "Defined when running inside a web browser."
msgstr "ウェブブラウザー内部で実行しているときに定義されます。"

#: ../../source/screens.rst:2725
msgid "``None``"
msgstr "``None``"

#: ../../source/screens.rst:2725
msgid "Always defined."
msgstr "常に定義されます。"

#: ../../source/screens.rst:2727
msgid "An example of defining a screen variant is:"
msgstr "スクリーン variant を定義する例です。 :"

#: ../../source/screens.rst:2742
msgid "See also"
msgstr "以下も参照してください"

#: ../../source/screens.rst:2744
msgid ""
":doc:`screen_actions` : a comprehensive list of actions and other tools to "
"be used with screens."
msgstr ""
":doc:`screen_actions` : スクリーンと使用するためのアクションやその他ツールの"
"包括的なリストです。"

#: ../../source/screens.rst:2747
msgid ""
":doc:`screen_optimization` : some useful ways of making screens as efficient "
"as possible."
msgstr ""
":doc:`screen_optimization` : できるだけ効率のよいスクリーンを作成する便利な方"
"法があります。"

#: ../../source/screens.rst:2750
msgid ""
":doc:`screen_python` : go from using Ren'Py's predefined tools, to extending "
"Ren'Py."
msgstr ""
":doc:`screen_python` : Ren'Py であらかじめ定義されたツールの使用から、Ren'Py "
"の拡張までがあります。"

#~ msgid ""
#~ "The alignment of the bar thumb, relative to the bar. If the bar and thumb "
#~ "are different sizes - for example, the thumb is taller than the height of "
#~ "a horizontal bar - thumb_align can be set to 0.5 so the centers of the "
#~ "bar and thumb are aligned."
#~ msgstr ""
#~ "バーに対するバーのつまみのアライメントです。バーとつまみのサイズが異なる場"
#~ "合、例えばつまみが水平バーの高さよりも高い場合は、 thumb_align を 0.5 に設"
#~ "定するとバーとつまみの中心が揃うようにできます。"

#~ msgid ""
#~ "If True (the default), the arrow keys can be used to move the caret left "
#~ "and right within the input. If False, arrow keys are ignored, making them "
#~ "available for other uses, like changing focus."
#~ msgstr ""
#~ "True (既定値) の場合、矢印キーを使用して、 input 内でキャレットを左右に移"
#~ "動できます。False の場合、矢印キーは無視され、フォーカスの変更など、他の用"
#~ "途に使用できます。"

#~ msgid ""
#~ "The use statement may take clauses properties, ``id`` and ``as``. These "
#~ "properties must be placed after the parameter list, if present, and must "
#~ "be on the first line of the statement, not in th block."
#~ msgstr ""
#~ "use ステートメントは、節プロパティー ``id`` と ``as`` を取れます。これらの"
#~ "プロパティーを記述するなら、パラメーターリストの後に配置しなければならず、"
#~ "ブロック内ではなくそのステートメントの 1 行目に配置する必要があります。"

#~ msgid ""
#~ "The ``as`` clause should be followed by a variable name. When the used "
#~ "screen finishes, the binding of the `main` variable in the screen is "
#~ "assigned to the given variable. For example::"
#~ msgstr ""
#~ "``as`` 節はに続いて変数名がくるべきです。使用されるスクリーンが終了する"
#~ "と、そのスクリーンの `main` 変数の中身が指定の変数に代入されます。例 :"

#~ msgid "If given, positioning the child above the focus rect is preferred."
#~ msgstr "指定するとその子をフォーカスされた矩形上部に優先的に配置されます。"

#~ msgid "By default, the ``id`` is automatically-generated."
#~ msgstr "デフォルトでは ``id`` は自動的に生成されます。"

#~ msgid "`modal`"
#~ msgstr "`modal`"

#~ msgid "`sensitive`"
#~ msgstr "`sensitive`"

#~ msgid "`tag`"
#~ msgstr "`tag`"

#~ msgid "`zorder`"
#~ msgstr "`zorder`"

#~ msgid "`variant`"
#~ msgstr "`variant`"

#~ msgid "`style_prefix`"
#~ msgstr "`style_prefix`"

#~ msgid "`layer`"
#~ msgstr "`layer`"

#~ msgid "`roll_forward`"
#~ msgstr "`roll_forward`"

#~ msgid "`at`"
#~ msgstr "`at`"

#~ msgid "`default_focus`"
#~ msgstr "`default_focus`"

#~ msgid "`id`"
#~ msgstr "`id`"

#~ msgid "`prefer_screen_to_id`"
#~ msgstr "`prefer_screen_to_id`"

#~ msgid "`style`"
#~ msgstr "`style`"

#~ msgid "`style_group`"
#~ msgstr "`style_group`"

#~ msgid "`style_suffix`"
#~ msgstr "`style_suffix`"

#~ msgid "`focus`"
#~ msgstr "`focus`"

#~ msgid "`tooltip`"
#~ msgstr "`tooltip`"

#~ msgid "`arguments`"
#~ msgstr "`arguments`"

#~ msgid "`properties`"
#~ msgstr "`properties`"

#~ msgid "`value`"
#~ msgstr "`value`"

#~ msgid "`range`"
#~ msgstr "`range`"

#~ msgid "`adjustment`"
#~ msgstr "`adjustment`"

#~ msgid "`changed`"
#~ msgstr "`changed`"

#~ msgid "`hovered`"
#~ msgstr "`hovered`"

#~ msgid "`unhovered`"
#~ msgstr "`unhovered`"

#~ msgid "`released`"
#~ msgstr "`released`"

#~ msgid "`action`"
#~ msgstr "`action`"

#~ msgid "`alternate`"
#~ msgstr "`alternate`"

#~ msgid "`selected`"
#~ msgstr "`selected`"

#~ msgid "`keysym`"
#~ msgstr "`keysym`"

#~ msgid "`alternate_keysym`"
#~ msgstr "`alternate_keysym`"

#~ msgid "`transpose`"
#~ msgstr "`transpose`"

#~ msgid "`auto`"
#~ msgstr "`auto`"

#~ msgid "`insensitive`"
#~ msgstr "`insensitive`"

#~ msgid "`idle`"
#~ msgstr "`idle`"

#~ msgid "`hover`"
#~ msgstr "`hover`"

#~ msgid "`selected_idle`"
#~ msgstr "`selected_idle`"

#~ msgid "`selected_hover`"
#~ msgstr "`selected_hover`"

#~ msgid "`default`"
#~ msgstr "`default`"

#~ msgid "`length`"
#~ msgstr "`length`"

#~ msgid "`pixel_width`"
#~ msgstr "`pixel_width`"

#~ msgid "`allow`"
#~ msgstr "`allow`"

#~ msgid "`exclude`"
#~ msgstr "`exclude`"

#~ msgid "`copypaste`"
#~ msgstr "`copypaste`"

#~ msgid "`prefix`"
#~ msgstr "`prefix`"

#~ msgid "`suffix`"
#~ msgstr "`suffix`"

#~ msgid "`mask`"
#~ msgstr "`mask`"

#~ msgid "`caret_blink`"
#~ msgstr "`caret_blink`"

#~ msgid "`multiline`"
#~ msgstr "`multiline`"

#~ msgid "`capture`"
#~ msgstr "`capture`"

#~ msgid "`text_style`"
#~ msgstr "`text_style`"

#~ msgid "`text_`-"
#~ msgstr "`text_`-"

#~ msgid "`focus_mask`"
#~ msgstr "`focus_mask`"

#~ msgid "`rect`"
#~ msgstr "`rect`"

#~ msgid "`prefer_top`"
#~ msgstr "`prefer_top`"

#~ msgid "`width`"
#~ msgstr "`width`"

#~ msgid "`height`"
#~ msgstr "`height`"

#~ msgid "`spacing`"
#~ msgstr "`spacing`"

#~ msgid "`repeat`"
#~ msgstr "`repeat`"

#~ msgid "`child_size`"
#~ msgstr "`child_size`"

#~ msgid "`mousewheel`"
#~ msgstr "`mousewheel`"

#~ msgid "`draggable`"
#~ msgstr "`draggable`"

#~ msgid "`edgescroll`"
#~ msgstr "`edgescroll`"

#~ msgid "`xadjustment`"
#~ msgstr "`xadjustment`"

#~ msgid "`yadjustment`"
#~ msgstr "`yadjustment`"

#~ msgid "`xinitial`"
#~ msgstr "`xinitial`"

#~ msgid "`yinitial`"
#~ msgstr "`yinitial`"

#~ msgid "`scrollbars`"
#~ msgstr "`scrollbars`"

#~ msgid "`arrowkeys`"
#~ msgstr "`arrowkeys`"

#~ msgid "`pagekeys`"
#~ msgstr "`pagekeys`"

#~ msgid "`cols`"
#~ msgstr "`cols`"

#~ msgid "`rows`"
#~ msgstr "`rows`"

#~ msgid "`ground`"
#~ msgstr "`ground`"

#~ msgid "`alpha`"
#~ msgstr "`alpha`"

#~ msgid "`cache`"
#~ msgstr "`cache`"

#~ msgid "`position`"
#~ msgstr "`position`"

#~ msgid "`finished`"
#~ msgstr "`finished`"

#~ msgid "`persist`"
#~ msgstr "`persist`"

#~ msgid "``drag``"
#~ msgstr "``drag``"

#~ msgid ""
#~ "Creates a :class:`DragGroup`. A drag group may have zero or more drags as "
#~ "its children."
#~ msgstr ""
#~ ":class:`DragGroup` クラスを作成します。DragGroup はその子として 0 以上の "
#~ "drag を持ちます。"

#~ msgid ""
#~ "The ``hide screen`` statement is used to hide a screen that is currently "
#~ "being shown. If the screen is not being shown, nothing happens. The with "
#~ "clause is interpreted the same way the ``with`` clause of a show "
#~ "statement is."
#~ msgstr ""
#~ "``hide screen`` ステートメントは現在表示されているスクリーンを非表示にしま"
#~ "す。そのスクリーンが表示されていなければ何もしません。 with 節は show ス"
#~ "テートメントの ``with`` 節と同様に解釈されます。"

#~ msgid ""
#~ "The call screen statement takes an optional ``nopredict`` keyword, which "
#~ "prevents screen prediction from occurring. During screen prediction, "
#~ "arguments to the screen are evaluated. Please ensure that evaluating the "
#~ "screen arguments does not cause unexpected side-effects to occur."
#~ msgstr ""
#~ "call screen ステートメントは任意で ``nopredict`` キーワードを受け取り、ス"
#~ "クリーンの予測を禁止します。スクリーンの予測中にスクリーンへの引数は評価さ"
#~ "れます。スクリーン引数の評価が不測の副作用を起さないように確認してくださ"
#~ "い。"

#~ msgid "If True, dragging the mouse will scroll the viewport."
#~ msgstr "True ならマウスのドラッグで viewport をスクロール出来ます。"

#~ msgid ""
#~ "If `scrollbars` is not None, the viewport takes properties prefixed with "
#~ "\"side_\". These are passed to the created side layout."
#~ msgstr ""
#~ "`scrollbars` が None でなければ viewport は「side_」で始まるプロパティーを"
#~ "受け取ります。これらは作成された side レイアウトに渡されます。"

#~ msgid ""
#~ "If the used screen includes parameters, its scope is initialized to the "
#~ "result of assigning the arguments to those parameters. Otherwise, it is "
#~ "passed the scope of the current screen, updated with any keyword "
#~ "arguments passed to the screen."
#~ msgstr ""
#~ "使用したスクリーンにパラメーターがあれば、引数をそれらのパラメーターに代入"
#~ "した結果でそのスコープは初期化されます。そうでなければ現在のスクリーンのス"
#~ "コープが渡され、そのキーワード引数で更新されます。"

#~ msgid "``\"ouya\"``"
#~ msgstr "``\"ouya\"``"

#~ msgid ""
#~ "Defined on the OUYA console. (``\"tv\"`` and ``\"small\"`` are also "
#~ "defined.)"
#~ msgstr ""
#~ "OUYA のコンソール上で定義されます (``\"tv\"`` と ``\"small\"`` も定義され"
#~ "ます )。"

#~ msgid ""
#~ "The call screen statement takes an optional ``with`` keyword, followed by "
#~ "a transition. The transition takes place when the screen is first "
#~ "displayed. A with statement after the transition runs after the screen is "
#~ "hidden, provided control is not transferred."
#~ msgstr ""
#~ "call screen ステートメントは任意で ``with`` キーワードに続くトランジション"
#~ "を受け取ります。トランジションはスクリーンが最初に置き換えられると実行され"
#~ "ます。"

#, fuzzy
#~ msgid ""
#~ "Two of these statements take a keyword argument list. This is a Python "
#~ "argument list, in parentheses, consisting of only keyword arguments. "
#~ "Positional arguments, extra positional arguments (*), and extra keyword "
#~ "arguments (**) are not allowed."
#~ msgstr ""
#~ "これらのステートメントのうち二つはキーワード引数を取ります。これは python "
#~ "の引数と同様ですが、括弧の中にはキーワード引数のみが入ります。位置引数、可"
#~ "変長の位置引数 (*) とキーワード引数 (**) は許可されません。"

#~ msgid ""
#~ "The default statement sets the default value of a variable when the "
#~ "screen is first one. :func:`SetScreenVariable`"
#~ msgstr ""
#~ "default ステートメントはそのスクリーンが最初の 1 つなら変数のデフォルト値"
#~ "を設定します。 :func:`SetScreenVariable`"

#~ msgid ":ref:`position-style-properties`00"
#~ msgstr ":ref:`position-style-properties`00"

#, fuzzy
#~ msgid "The spacing between cells, measured in pixels."
#~ msgstr "行間のピクセル数での空間"

#~ msgid ""
#~ "In addition, a vpgrid takes all properties a :ref:`viewport <sl-"
#~ "viewport>` can. It takes multiple children, up to the size of the grid. "
#~ "If there are not enough children to fill all cells, some cells are not "
#~ "rendered."
#~ msgstr ""
#~ "加えて、 vpgrid は :ref:`viewport <sl-viewport>` のすべてのプロパティーと"
#~ "グリッドのサイズまでの複数の子を受け取ります。セルを埋めるのに十分な子がな"
#~ "ければ、いくつかのセルはレンダリングされません。"

#~ msgid ""
#~ "If True, the mouse wheel can be used to scroll the viewport vertically. "
#~ "If \"horizontal\", the mouse wheel can be used to scroll the viewport "
#~ "horizontally."
#~ msgstr ""
#~ "True ならマウスホイールで viewport を縦にスクロール出来ます。 "
#~ "「horizontal」ならマウスホイールは viewport を横にスクロールします。"

#~ msgid "If True, the mouse wheel can be used to scroll the viewport."
#~ msgstr ""
#~ "True なら viewport をスクロールするためにマウスホイールが使用可能です。"

#~ msgid ""
#~ "Setting a group of ``None`` disables this behavior for a displayable and "
#~ "all of its children."
#~ msgstr ""
#~ "``None`` のグループを設定すると displayable とそのすべての子の動作は無効化"
#~ "されます。"

#~ msgid ""
#~ "The current value of the bar. This can be either a Value object, or a "
#~ "number."
#~ msgstr "現在のバーの値です。これは Value オブジェクトか数字です。"

#~ msgid ""
#~ "The scope of the included code includes the scope of the current "
#~ "statement's code, updated by assinging the parameters their new values."
#~ msgstr ""
#~ "導入されたコードのスコープには現在のステートメントのコードのスコープも含ま"
#~ "れ、新しい値が引数に代入されて更新されます。"

#~ msgid ""
#~ "For example, if `auto` is \"imagemap_%s.png\", and `idle` is omitted, "
#~ "then idle defaults to \"imagemap_idle.png\"."
#~ msgstr ""
#~ "例えば、 `auto` が「imagemap_%s.png」で `idle` が省略されていれば、 idle "
#~ "デフォルトで「 imagemap_idle.png 」になります。"

#~ msgid ""
#~ "A hotspot creates a fixed, allowing children to be added to it. The fixed "
#~ "has an area that is the same size as the hotspot, meaning that the "
#~ "children will be positioned relative to the hotpsot."
#~ msgstr ""
#~ "hotspot は fixed を作成し、そこに子を追加出来るようにします。 fixed は "
#~ "hotspot と同じ大きさの領域を持つので、子は hotspot に対する相対距離で配置"
#~ "されます。"

#~ msgid ""
#~ "The has statment allows you to specify a container to use, instead of "
#~ "fixed, for statements that take only one child. The has statement may "
#~ "only be used inside a statement that takes one child. The keyword ``has`` "
#~ "is followed (on the same line) by another statement, which must be a "
#~ "statement that creates a container displayable, one that takes more than "
#~ "one child."
#~ msgstr ""
#~ "has ステートメントは fixed の代わりに子を一つだけ受け取るステートメントの"
#~ "ために使用するコンテナを指定できるようにします。 has ステートメントはおそ"
#~ "らく一つの子を受け取るステートメントの内部でのみ使用されるでしょう。キー"
#~ "ワード引数 ``has`` の (同じ行の) 後にはもう一つのステートメントが続き、そ"
#~ "れは一つ以上の子を受け取るコンテナの displayable を作成するステートメント"
#~ "でなければなりません。"

#~ msgid ""
#~ "The for statement is similar to the Python for statment, except that it "
#~ "does not support the else clause. It supports assignment to (optionally "
#~ "nested) tuple patterns, as well as variables."
#~ msgstr ""
#~ "for ステートメントは同様の python ステートメントと等価ですが、else節をサ"
#~ "ポートしていません。変数同様にタプルもサポートしています。"

#~ msgid ""
#~ "Defined on touchscren-based devices where the diagonal size of the screen "
#~ "is less than 6 inches. On such a small device, it's important to make "
#~ "buttons large enough a user can easily choose them. (In general, ``\"small"
#~ "\"`` should be used instead of ``\"phone\"``.)"
#~ msgstr ""
#~ "画面の対角線が 6 インチタッチかそれ以下のタッチスクリーンベースのデバイス"
#~ "で定義されます。そのような小さなデバイスではボタンを十分に大きくして簡単に"
#~ "選択できるようにすることが重要です。 ( 通常は「 small 」が「 phone 」の代"
#~ "わりに使用されます。 )"

#~ msgid ""
#~ "The show screen statement causes a screen to be shown. It takes an screen "
#~ "name, and an optional argument list. If present, the arguments are used "
#~ "to intialize the scope of the screen."
#~ msgstr ""
#~ "show screen ステートメントはスクリーンを表示します。スクリーンの名前と任意"
#~ "で引数を取ます。与えられるとその引数はスクリーンのスコープを初期化するため"
#~ "に使用されます。"

#~ msgid ""
#~ "For example, if `auto` is \"button_%s.png\", and `idle` is omitted, then "
#~ "idle defaults to \"button_idle.png\"."
#~ msgstr ""
#~ "例えば、 `auto` が「button_%s.png」で `idle` が省略されていれば、 idle は"
#~ "デフォルトで「 button_idle.png 」になります。"

#~ msgid ""
#~ "If not None, scrollbars are added allong with this viewport. This works "
#~ "by creating a side layout, and placing the created viewport in the center "
#~ "of the side. If `scrollbars` is \"horizontal\", a horizontal scrollbar is "
#~ "placed beneath the viewport. If `scrollbars` is \"vertical\", a vertical "
#~ "scrollbar is placed to the right of the viewport. If `scrollbars` is "
#~ "\"both\", both horizontal and vertical scrollbars are created."
#~ msgstr ""
#~ "None でなければスクロールバーがこの viewport に追加されます。これは side "
#~ "レイアウトを作成し、その sideの中心に viewport を作成した viewport を置く"
#~ "ことで動作します。 `scrollbars` が \"horizontal\"  なら水平なスクロール"
#~ "バーが viewport の下に追加され、 `scrollbars` が \"vertical\" なら垂直なス"
#~ "クロールバーが viewport の右に追加されます。 `scrollbars` が \"both\" なら"
#~ "水平垂直両方のスクロールバーが作成されます。"
