# Japanese translation for renpy-doc
# Copyright (c) 2013 Rosetta Contributors and Canonical Ltd 2013
# This file is distributed under the same license as the renpy-doc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: renpy-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-20 21:53+0900\n"
"PO-Revision-Date: 2023-08-08 15:44+0900\n"
"Last-Translator: kyouryuukunn <akakyouryuu@gmail.com>\n"
"Language-Team: Japanese <ja@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2014-06-21 06:27+0000\n"
"X-Generator: Poedit 2.2.4\n"

#: ../../source/statement_equivalents.rst:3
msgid "Statement Equivalents"
msgstr "ステートメントに相当するもの"

#: ../../source/statement_equivalents.rst:5
msgid ""
"To allow Ren'Py to be scripted in Python, each Ren'Py statement has a Python "
"equivalent. This usually consists of a Python function, but may also consist "
"of a pattern of Python calls that perform an action equivalent to the "
"statement."
msgstr ""
"Ren'Py のスクリプトを Python コードで記述できるようにするため、それぞれの "
"Ren'Py のステートメントには Python のコードで相当するものがあります。これは通"
"常 Python の関数で構成されていますが、ステートメントに相当した動作をする複数"
"のコードで構成されることもあります。"

#: ../../source/statement_equivalents.rst:10
msgid ""
"Note that using statement equivalents in lieu of the original statements "
"usually removes any possible :ref:`lint` checks and prediction "
"optimizations, making your game less easily checkable and possibly less "
"fluid. It can also disable features in certain cases."
msgstr ""
"元のステートメントの代わりに相当するステートメントを使用すると、通常 :ref:"
"`lint` によるチェックと予測最適化がなくなるため、ゲームのチェックが容易にでき"
"なくなり、動作の軽快さも低下する可能性があるので注意してください。場合によっ"
"ては機能を無化する可能性もあります。"

#: ../../source/statement_equivalents.rst:16
msgid "Dialogue"
msgstr "台詞"

#: ../../source/statement_equivalents.rst:20
msgid ""
"Several features, such as skipping already-seen dialogues, are not available "
"using the python version and only enabled when using the native say "
"statement."
msgstr ""
"既読文章のスキップのようないくつかの機能は python 版では利用出来ず、通常の "
"say ステートメントの使用でのみ有効です。"

#: ../../source/statement_equivalents.rst:24
msgid ""
"The Ren'Py :ref:`say-statement` is equivalent to calling the character "
"object (when any is present) as a function. Displaying narration (meaning "
"when no character is supplied) can be done the same way, by using the "
"``narrator`` character. ::"
msgstr ""
"Ren'Py の :ref:`say-statement` は(作成された)キャラクターオブジェクトの関数と"
"しての呼び出しに相当します。ナレーションの表示も ``narrator`` キャラクターを"
"使用して同様に行われます。 ::"

#: ../../source/statement_equivalents.rst:38
msgid "Proxy functions"
msgstr "Proxy 関数"

#: ../../source/statement_equivalents.rst:40
msgid ""
"This equivalence of characters and function objects works in the other "
"direction as well. It is possible to declare a Python function, and then use "
"that function in the place of a character object in a native say statement. "
"For example, the following function uses a variable to choose between two "
"characters. ::"
msgstr ""
"キャラクターと関数オブジェクトの等価性はその他の面でも同様に働きます。 "
"python 関数を宣言して、キャラクターオブジェクトの代わりに使用できます。例え"
"ば、以下の関数は二人のキャラクターを選択するために変数を使用しています。 ::"

#: ../../source/statement_equivalents.rst:67
msgid ""
"A function used in this way should either ignore unknown keyword arguments, "
"or pass them to a character function. Doing this will allow the game to "
"continue working if future versions of Ren'Py add additional keyword "
"arguments to character calls."
msgstr ""
"このように使用された関数は未知のキーワード引数を無視するか、 キャラクター関数"
"に渡すべきです。これによりゲームは Ren'Py が将来のバージョンで追加のキーワー"
"ド引数をキャラクター呼び出しに加えても動作し続けられます。"

#: ../../source/statement_equivalents.rst:72
msgid ""
"Note that unlike other possible arguments, ``interact=True`` will always be "
"passed to the function - unless manually passing ``(interact=False)``. A :"
"ref:`say-with-arguments` sees the arguments (including the supplementary "
"`interact`) passed to the function. For example::"
msgstr ""
"他の引数とは異なり、 ``interact=True`` は常に関数に渡されることに注意してくだ"
"さい - 手動で ``(interact=False)`` を渡さない限り。 :ref:`say-with-"
"arguments` では、関数に渡される引数（補足の `interact` を含む）を参照します。"
"例 ::"

#: ../../source/statement_equivalents.rst:79
msgid "resolves to the following call::"
msgstr "これは次の呼び出しと等しいです。 ::"

#: ../../source/statement_equivalents.rst:83
msgid ""
"Note that it's not required to pass ``interact=True`` when calling a "
"Character object for it to work as intended. The following works just as "
"well::"
msgstr ""
"キャラクターオブジェクトを呼び出して意図したように動作させるときには、 "
"``interact=True`` を渡す必要はないことに注意してください。次の記述は同様に動"
"作します。 :"

#: ../../source/statement_equivalents.rst:88
msgid "When e is a Character, this is further equivalent to::"
msgstr "e がキャラクターならば、これはさらに次と等しいです。 ::"

#: ../../source/statement_equivalents.rst:92
msgid ""
"But it's possible to use :var:`config.say_arguments_callback` or have ``e`` "
"wrap a character to do things differently."
msgstr ""
"しかし、 :var:`config.say_arguments_callback` を使用したり、 ``e`` にキャラク"
"ターをラップさせて異なる動作をさせられます。"

#: ../../source/statement_equivalents.rst:95
msgid ""
"There is one additional way of replacing the say statement using Python:"
msgstr ""
"say ステートメントを Python を使用して置き換える方法はもう一つあります。 :"

#: ../../source/statement_equivalents.rst:100
msgid "Dialogue Window Management"
msgstr "台詞ウィンドウの管理"

#: ../../source/statement_equivalents.rst:102
msgid ""
":ref:`Window management <dialogue-window-management>` is performed by "
"setting the :var:`_window` and :var:`_window_auto` variables, and by using "
"the following two functions:"
msgstr ""
":ref:`テキストウィンドウの管理 <dialogue-window-management>` は :var:"
"`_window` と :var:`_window_auto` 変数の設定と次の2つの関数により処理されま"
"す。 :"

#: ../../source/statement_equivalents.rst:109
msgid "Choice Menus"
msgstr "選択肢"

#: ../../source/statement_equivalents.rst:111
msgid "The :doc:`menu statement <menus>` has an equivalent Python function."
msgstr ":doc:`menu statement <menus>` に相当する Python 関数があります。"

#: ../../source/statement_equivalents.rst:117
msgid "Displaying Images"
msgstr "画像の表示"

#: ../../source/statement_equivalents.rst:119
msgid ""
"The image, scene, show, and hide statements each have an equivalent Python "
"function (see :doc:`displaying_images` for the original statements)."
msgstr ""
"image, scene, show, hide ステートメントはそれぞれ相当する python 関数を持ちま"
"す (元のステートメントは :doc:`displaying_images` を参照してください。)"

#: ../../source/statement_equivalents.rst:125
msgid "Transitions"
msgstr "トランジション"

#: ../../source/statement_equivalents.rst:127
msgid ""
"The equivalent of the :ref:`with-statement` is the :func:`renpy."
"with_statement` function."
msgstr ""
":ref:`with-statement` に相当する :func:`renpy.with_statement` 関数です。"

#: ../../source/statement_equivalents.rst:133
msgid "Jump"
msgstr "Jump"

#: ../../source/statement_equivalents.rst:135
msgid ""
"The equivalent of the :ref:`jump-statement` is the :func:`renpy.jump` "
"function."
msgstr ""
":ref:`jump-statement` ステートメントは :func:`renpy.jump` 関数に相当します。"

#: ../../source/statement_equivalents.rst:140
msgid "Call"
msgstr "Call"

#: ../../source/statement_equivalents.rst:142
msgid ""
"The equivalent of the :ref:`call-statement` is the :func:`renpy.call` "
"function."
msgstr ":ref:`call-statement` に相当するものは :func:`renpy.call` 関数です。"

#: ../../source/statement_equivalents.rst:147
msgid "Pause"
msgstr "Pause"

#: ../../source/statement_equivalents.rst:149
msgid ""
"The equivalent of the :ref:`pause-statement` is the :func:`renpy.pause` "
"function."
msgstr ":ref:`pause-statement` は :func:`renpy.jump` 関数に相当します"

#: ../../source/statement_equivalents.rst:154
msgid "Layeredimage"
msgstr "Layeredimage"

#: ../../source/statement_equivalents.rst:156
msgid ""
"The :ref:`layeredimage-statement` statement has Python equivalents. The "
"group statement does not: the name of the group is supplied to :class:"
"`Attribute`, and the ``auto`` feature can be implemented using :func:`renpy."
"list_images`."
msgstr ""
":ref:`layeredimage-statement` ステートメントには Python で相当する物がありま"
"すが、グループステートメントはありません。グループ名は :class:`Attribute` に"
"渡され、その ``auto`` 機能は :func:`renpy.list_images` を使用して実装できま"
"す。"

#~ msgid "The equivalent of the say statement."
#~ msgstr "say ステートメントに相当するものです。"

#~ msgid "`who`"
#~ msgstr "`who`"

#~ msgid ""
#~ "Either the character that will say something, None for the narrator, or a "
#~ "string giving the character name. In the latter case, the :var:`say` "
#~ "store function is called."
#~ msgstr ""
#~ "発言するキャラクターかキャラクター名の文字列で、ナレーターなら None,です。"
#~ "文字列の場合、 :var:`say` store 関数が呼び出されます。"

#~ msgid "`what`"
#~ msgstr "`what`"

#~ msgid ""
#~ "A string giving the line to say. Percent-substitutions are performed in "
#~ "this string."
#~ msgstr "発言する文字列です。 % 置換文字列はこの文字列で使用されます。"

#~ msgid "`interact`"
#~ msgstr "`interact`"

#~ msgid ""
#~ "If true, Ren'Py waits for player input when displaying the dialogue. If "
#~ "false, Ren'Py shows the dialogue, but does not perform an interaction. "
#~ "(This is passed in as a keyword argument.)"
#~ msgstr ""
#~ "True なら Ren'Py は台詞表示時にプレイヤーの入力を待ちます。 False なら "
#~ "Ren'Py は台詞を表示しますが、インタラクションを実行しません(これはキーワー"
#~ "ド引数として渡されます)。"

#~ msgid ""
#~ "This function is rarely necessary, as the following three lines are "
#~ "equivalent. ::"
#~ msgstr "次の3行が相当するため、この関数は滅多に必要ありません。 :"

#~ msgid "The Python equivalent of the ``window hide`` statement."
#~ msgstr "``window hide`` ステートメントに相当する python コードです。"

#~ msgid "`trans`"
#~ msgstr "`trans`"

#~ msgid ""
#~ "If False, the default window hide transition is used. If None, no "
#~ "transition is used. Otherwise, the specified transition is used."
#~ msgstr ""
#~ "False ならデフォルトのウィンドウ非表示トランジションが使用されます。 None "
#~ "なら、トランジションは使用されません。そうでなければ、指定のトランジション"
#~ "が使用されます。"

#~ msgid "`auto`"
#~ msgstr "`auto`"

#~ msgid ""
#~ "If True, this becomes the equivalent of the ``window auto hide`` statment."
#~ msgstr ""
#~ "True なら、 ``window auto hide`` ステートメントに相当するものとなります。"

#~ msgid "The Python equivalent of the ``window show`` statement."
#~ msgstr "``window show`` ステートメントに相当する python コードです。"

#~ msgid ""
#~ "If False, the default window show transition is used. If None, no "
#~ "transition is used. Otherwise, the specified transition is used."
#~ msgstr ""
#~ "False ならデフォルトのウィンドウ表示トランジションが使用されます。 None な"
#~ "ら、トランジションは使用されません。そうでなければ、指定のトランジションが"
#~ "使用されます。"

#~ msgid ""
#~ "If True, this becomes the equivalent of the ``window auto show`` statment."
#~ msgstr ""
#~ "True なら、 ``window auto show`` ステートメントに相当するものとなります。"

#~ msgid ""
#~ "This displays a menu to the user. `items` should be a list of 2-item "
#~ "tuples. In each tuple, the first item is a textual label, and the second "
#~ "item is the value to be returned if that item is selected. If the value "
#~ "is None, the first item is used as a menu caption."
#~ msgstr ""
#~ "これはユーザーに選択肢を表示します。 `items` は 2 つの要素のタプルのリスト"
#~ "です。各タプルの最初の要素はメニューに表示される文字通りのラベルで、 2 つ"
#~ "目の要素はその要素が選択された時に返される値です。値が None ならその最初の"
#~ "要素はキャプションに使用されます。"

#~ msgid ""
#~ "This function takes many arguments, of which only a few are documented. "
#~ "Except for `items`, all arguments should be given as keyword arguments."
#~ msgstr ""
#~ "この関数は多くの引数を受け取りますが、一部のみドキュメントに記載されていま"
#~ "す。 `items` を除いてすべての引数はキーワード引数で指定されるべきです。"

#~ msgid "If false, the menu is displayed, but no interaction is performed."
#~ msgstr ""
#~ "False なら選択肢は表示されますが、インタラクションは実行されません。"

#~ msgid "`screen`"
#~ msgstr "`screen`"

#~ msgid "The name of the screen used to display the menu."
#~ msgstr "選択肢を表示するために使用されるスクリーンの名前です。"

#~ msgid ""
#~ "Note that most Ren'Py games do not use menu captions, but use narration "
#~ "instead. To display a menu using narration, write::"
#~ msgstr ""
#~ "ほとんどの Ren'Py ゲームはメニューのキャプションを使用せず、代わりにナレー"
#~ "ションを使用します。ナレーションを使用してメニューを表示するには次のように"
#~ "記述します。 ::"

#~ msgid ""
#~ "Returns the list of transforms being applied to the image with tag `name` "
#~ "on `layer`. Returns an empty list if no transforms are being applied, or "
#~ "None if the image is not shown."
#~ msgstr ""
#~ "`layer` 上の `name` タグの画像に適用されている transform のリストを返しま"
#~ "す。 transform が適用されていなければ空のリストを返し、画像が表示されてい"
#~ "なければ None 返します。"

#~ msgid "If `layer` is None, uses the default layer for the given tag."
#~ msgstr ""
#~ "`layer` が None なら、指定されたタグのデフォルトレイヤーを使用します。"

#~ msgid ""
#~ "Hides an image from a layer. The Python equivalent of the hide statement."
#~ msgstr ""
#~ "レイヤーから画像を非表示します。 hide ステートメントに相当する python コー"
#~ "ドです。"

#~ msgid "`name`"
#~ msgstr "`name`"

#~ msgid ""
#~ "The name of the image to hide. Only the image tag is used, and any image "
#~ "with the tag is hidden (the precise name does not matter)."
#~ msgstr ""
#~ "非表示する画像の名前です。画像タグのみが使用され、そのタグのすべての画像が"
#~ "非表示されます(正確な画像名は必要ありません)。"

#~ msgid "`layer`"
#~ msgstr "`layer`"

#~ msgid ""
#~ "The layer on which this function operates. If None, uses the default "
#~ "layer associated with the tag."
#~ msgstr ""
#~ "この関数が処理するレイヤーです。None ならタグのデフォルトレイヤーを使用し"
#~ "ます。"

#~ msgid ""
#~ "Defines an image. This function is the Python equivalent of the image "
#~ "statement."
#~ msgstr ""
#~ "画像を定義する。この関数は image ステートメントに相当する python コードで"
#~ "す。"

#~ msgid "The name of the image to display, a string."
#~ msgstr "表示する画像の名前で、文字列です。"

#~ msgid "`d`"
#~ msgstr "`d`"

#~ msgid "The displayable to associate with that image name."
#~ msgstr "その画像名に関連付けられる displayable です。"

#~ msgid ""
#~ "This function may only be run from inside an init block. It is an error "
#~ "to run this function once the game has started."
#~ msgstr ""
#~ "この関数は init ブロック内でのみ実行されます。一旦ゲームが実行されてからこ"
#~ "の関数が実行されると、エラーになります。"

#~ msgid ""
#~ "Removes all displayables from `layer`. This is equivalent to the scene "
#~ "statement, when the scene statement is not given an image to show."
#~ msgstr ""
#~ "`layer` からすべての displayable を除去します。これは表示する画像が与えら"
#~ "れない時の scene ステートメントに相当します。"

#~ msgid ""
#~ "A full scene statement is equivalent to a call to renpy.scene followed by "
#~ "a call to :func:`renpy.show`. For example::"
#~ msgstr ""
#~ "scene ステートメントは renpy.scene とそれに続く :func:`renpy.show` の呼び"
#~ "出しに相当します。例えば ::"

#~ msgid "is equivalent to::"
#~ msgstr "これは次に相当します ::"

#~ msgid ""
#~ "Shows an image on a layer. This is the programmatic equivalent of the "
#~ "show statement."
#~ msgstr ""
#~ "レイヤーに画像を表示します。これは show ステートメントにプログラム的に相当"
#~ "します。"

#~ msgid "The name of the image to show, a string."
#~ msgstr "表示する画像の名前で、文字列です。"

#~ msgid "`at_list`"
#~ msgstr "`at_list`"

#~ msgid ""
#~ "A list of transforms that are applied to the image. The equivalent of the "
#~ "``at`` property."
#~ msgstr ""
#~ "画像に適用される transform のリストです。 ``at`` プロパティーに相当しま"
#~ "す。"

#~ msgid ""
#~ "A string, giving the name of the layer on which the image will be shown. "
#~ "The equivalent of the ``onlayer`` property. If None, uses the default "
#~ "layer associated with the tag."
#~ msgstr ""
#~ "画像が表示されるレイヤーの名前の文字列です。 ``onlayer`` に相当します。"
#~ "None ならそのタグに関連付けられたデフォルトレイヤーを使用します。"

#~ msgid ""
#~ "If not None, this is a displayable that will be shown in lieu of looking "
#~ "on the image. (This is the equivalent of the show expression statement.) "
#~ "When a `what` parameter is given, `name` can be used to associate a tag "
#~ "with the image."
#~ msgstr ""
#~ "None でないならこれは画像を 探す代わりに表示される displayable です ( これ"
#~ "は show expression ステートメントに相当します )。 `what` パラメーターが与"
#~ "えられると、 `name` はその画像とタグを関連づけるために使用されます。"

#~ msgid "`zorder`"
#~ msgstr "`zorder`"

#~ msgid ""
#~ "An integer, the equivalent of the ``zorder`` property. If None, the "
#~ "zorder is preserved if it exists, and is otherwise set to 0."
#~ msgstr ""
#~ "``zorder`` プロパティーに相当する整数です。 None だと zorder があれば維持"
#~ "され、そうでなければ 0 に設定されます。"

#~ msgid "`tag`"
#~ msgstr "`tag`"

#~ msgid ""
#~ "A string, used to specify the image tag of the shown image. The "
#~ "equivalent of the ``as`` property."
#~ msgstr ""
#~ "表示される画像の画像タグを指定するために使用される文字列です。 ``as`` プロ"
#~ "パティーに相当します。"

#~ msgid "`behind`"
#~ msgstr "`behind`"

#~ msgid ""
#~ "A list of strings, giving image tags that this image is shown behind. The "
#~ "equivalent of the ``behind`` property."
#~ msgstr ""
#~ "この画像が背後に表示される画像タグの文字列のリストです。 ``behind`` プロパ"
#~ "ティーに相当します。"

#~ msgid ""
#~ "The Python equivalent of the ``show layer`` `layer` ``at`` `at_list` "
#~ "statement. If `camera` is True, the equivalent of the ``camera`` "
#~ "statement."
#~ msgstr ""
#~ "``show layer`` `layer` ``at`` `at_list` ステートメントに Python コードで相"
#~ "当するものです。 `camera` が True なら、 ``camera`` ステートメントに相当す"
#~ "る物でもあります。"

#~ msgid "`reset`"
#~ msgstr "`reset`"

#~ msgid ""
#~ "If true, the transform state is reset to the start when it is shown. If "
#~ "false, the transform state is persisted, allowing the new transform to "
#~ "update that state."
#~ msgstr ""
#~ "True なら、 transform の状態はその表示時までリセットされ、 False なら持続"
#~ "し、次のt ransform で状態を更新できるようにします。"

#~ msgid ""
#~ "Causes a transition to occur. This is the Python equivalent of the with "
#~ "statement."
#~ msgstr ""
#~ "トランジションを実行します。これは with ステートメントに相当する python "
#~ "コードです。"

#~ msgid "The transition."
#~ msgstr "トランジション"

#~ msgid "`always`"
#~ msgstr "`always`"

#~ msgid ""
#~ "If True, the transition will always occur, even if the user has disabled "
#~ "transitions."
#~ msgstr ""
#~ "True なら、トランジションはユーザーがトランジションを無効化していても常に"
#~ "実行します。"

#~ msgid ""
#~ "This function returns true if the user chose to interrupt the transition, "
#~ "and false otherwise."
#~ msgstr ""
#~ "この関数はユーザーがトランジションの中断を選択するなら True を、そうでない"
#~ "なら False を返します。"

#~ msgid ""
#~ "Causes the current statement to end, and control to jump to the given "
#~ "label."
#~ msgstr "現在のステートメントを終了し、制御を指定されたラベルに移します。"

#~ msgid ""
#~ "Causes the current Ren'Py statement to terminate, and a jump to a `label` "
#~ "to occur. When the jump returns, control will be passed to the statement "
#~ "following the current statement."
#~ msgstr ""
#~ "現在の Ren'Py ステートメントを終了し、指定された `label` にジャンプしま"
#~ "す。ジャンプから戻ると、現在のステートメントに続くステートメントに制御が移"
#~ "ります。"

#~ msgid ""
#~ "The label must be either of the form \"global_name\" or \"global_name."
#~ "local_name\". The form \".local_name\" is not allowed."
#~ msgstr ""
#~ "ラベルは \"global_name\" または \"global_name.local_name\" の形式でなけれ"
#~ "ばなりません。 \".local_name\" の形式は未許可です。"

#~ msgid "`from_current`"
#~ msgstr "`from_current`"

#~ msgid ""
#~ "If true, control will return to the current statement, rather than the "
#~ "statement following the current statement. (This will lead to the current "
#~ "statement being run twice. This must be passed as a keyword argument.)"
#~ msgstr ""
#~ "True なら、制御は現在のステートメントに続くステートメントではなく現在のス"
#~ "テートメントに返ります(これにより現在のステートメントは二回実行されます。"
#~ "これはキーワード引数として渡されるべきです)。"

#~ msgid "Causes Ren'Py to return from the current Ren'Py-level call."
#~ msgstr "現在の Ren'Py の呼び出しレベルから Ren'Py を返します。"

#~ msgid ""
#~ "Causes Ren'Py to pause. Returns true if the user clicked to end the "
#~ "pause, or false if the pause timed out or was skipped."
#~ msgstr ""
#~ "Ren'Py をポーズさせます。ユーザーがクリックしてポーズを終わらせると True, "
#~ "ポーズがタイムアウトするかスキップされると False を返します。"

#~ msgid "`delay`"
#~ msgstr "`delay`"

#~ msgid "If given, the number of seconds Ren'Py should pause for."
#~ msgstr "指定されると、その秒数 Ren'Py はボーズするはずです。"

#~ msgid "The following should be given as keyword arguments:"
#~ msgstr "以下はキーワード引数として指定するべきです。"

#~ msgid "`hard`"
#~ msgstr "`hard`"

#~ msgid ""
#~ "This must be given as a keyword argument. When True, Ren'Py may prevent "
#~ "the user from clicking to interrupt the pause. If the player enables "
#~ "skipping, the hard pause will be skipped. There may be other "
#~ "circumstances where the hard pause ends early or prevents Ren'Py from "
#~ "operating properly, these will not be treated as bugs."
#~ msgstr ""
#~ "これはキーワード引数として指定されなければなりません。True なら、Ren'Py は"
#~ "クリックでユーザーがポーズを中断できないようにします。プレイヤーがスキップ"
#~ "を有効にした場合はハードポーズはスキップされます。他にも、ハードポーズが早"
#~ "く終了したり、Ren'Py が正しく動作しない状況があるかもしれませんが、これら"
#~ "はバグとして扱われません。"

#~ msgid ""
#~ "In general, using hard pauses is rude. When the user clicks to advance "
#~ "the game, it's an explicit request - the user wishes the game to advance. "
#~ "To override that request is to assume you understand what the player "
#~ "wants more than the player does."
#~ msgstr ""
#~ "一般的に、ハードポーズの使用は失礼にあたります。ユーザーがゲームを進めるた"
#~ "めにクリックするなら、それは明示的な要求です - ユーザーはゲームを進めるこ"
#~ "とを望んでいます。その要求を覆すということは、プレイヤーが何を望んでいるか"
#~ "をプレイヤー以上に理解していると思い込むことです。"

#~ msgid ""
#~ "Calling renpy.pause guarantees that whatever is on the screen will be "
#~ "displayed for at least one frame, and hence has been shown to the player."
#~ msgstr ""
#~ "renpy.pause を呼び出すと、画面に表示されているものが少なくとも1フレームは"
#~ "プレーヤーに表示されることが保証されます。"

#~ msgid "tl;dr - Don't use renpy.pause with hard=True."
#~ msgstr "つまり、 hard = True にして renpy.pause を使用しないでください。"

#~ msgid "`predict`"
#~ msgstr "`predict`"

#~ msgid ""
#~ "If True, Ren'Py will end the pause when all prediction, including "
#~ "prediction scheduled with :func:`renpy.start_predict` and :func:`renpy."
#~ "start_predict_screen`, has been finished."
#~ msgstr ""
#~ "True の場合、Ren'Py は :func:`renpy.start_predict` と :func:`renpy."
#~ "start_predict_screen` でスケジュールした予測も含め、すべての予測が終了した"
#~ "ときにポーズを終了します。"

#~ msgid ""
#~ "This also causes Ren'Py to prioritize prediction over display smoothness "
#~ "for the duration of the pause. Because of that, it's recommended to not "
#~ "display animations during prediction."
#~ msgstr ""
#~ "また、Ren'Py はポーズの間、表示の滑らかさよりも予測を優先させます。そのた"
#~ "め、予測中のアニメーション表示は非推奨です。"

#~ msgid "`modal`"
#~ msgstr "`modal`"

#~ msgid ""
#~ "If True or None, the pause will not end when a modal screen is being "
#~ "displayed. If False, the pause will end while a modal screen is being "
#~ "displayed."
#~ msgstr ""
#~ "True または None なら、ポーズはモーダルスクリーンが表示されているときは終"
#~ "わりません。 False なら、ポーズはモーダルスクリーンが表示されていても終わ"
#~ "ります。"

#~ msgid ""
#~ "This is used to represent a layer of an LayeredImage that is controlled "
#~ "by an attribute. A single attribute can control multiple layers, in which "
#~ "case all layers corresponding to that attribute will be displayed."
#~ msgstr ""
#~ "これを使用して属性に制御される LayerdImage のレイヤーを表します。1つの属性"
#~ "で複数のレイヤーを制御でき、この場合、その属性に対応する全てのレイヤーが表"
#~ "示されます。"

#~ msgid "`group`"
#~ msgstr "`group`"

#~ msgid ""
#~ "A string giving the group the attribute is part of. This may be None, in "
#~ "which case a group with the same name as the attribute is created."
#~ msgstr ""
#~ "属性が加わるグループの文字列です。 None である場合、属性と同じ名前のグルー"
#~ "プが作成されます。"

#~ msgid "`attribute`"
#~ msgstr "`attribute`"

#~ msgid "A string giving the name of the attribute."
#~ msgstr "属性の名前の文字列です。"

#~ msgid "`image`"
#~ msgstr "`image`"

#~ msgid ""
#~ "If not None, this should be a displayable that is displayed when this "
#~ "attribute is shown."
#~ msgstr "これは None または、この属性が表示される displayable です。"

#~ msgid "`default`"
#~ msgstr "`default`"

#~ msgid ""
#~ "If True, and no other attribute for the group is selected, this attribute "
#~ "is."
#~ msgstr ""
#~ "True かつそのグループの他の属性が選択されていなければ、この属性となりま"
#~ "す。"

#~ msgid "The following keyword arguments are also known:"
#~ msgstr "次のキーワード引数もあります。 :"

#~ msgid "`at`"
#~ msgstr "`at`"

#~ msgid "A transform or list of transforms that are applied to the image."
#~ msgstr "画像に適用される transform または transform のリストです。"

#~ msgid "`if_all`"
#~ msgstr "`if_all`"

#~ msgid ""
#~ "An attribute or list of attributes. The displayable is only shown if all "
#~ "of these are showing."
#~ msgstr ""
#~ "属性または属性のリストです。 displayable はこれらの全てがあるときだけ表示"
#~ "されます。"

#~ msgid "`if_any`"
#~ msgstr "`if_any`"

#~ msgid ""
#~ "An attribute or list of attributes. if not empty, the displayable is only "
#~ "shown if any of these are showing."
#~ msgstr ""
#~ "属性または属性のリストです。 displayable はこれらのどれかがあるときだけ表"
#~ "示されます。"

#~ msgid "`if_not`"
#~ msgstr "`if_not`"

#~ msgid ""
#~ "An attribute or list of attributes. The displayable is only shown if none "
#~ "of these are showing."
#~ msgstr ""
#~ "属性または属性のリストです。 displayable はこれらの全てがないときだけ表示"
#~ "されます。"

#~ msgid ""
#~ "Other keyword arguments are interpreted as transform properties. If any "
#~ "are present, a transform is created that wraps the image. (For example, "
#~ "pos=(100, 200) can be used to offset the image by 100 pixels horizontally "
#~ "and 200 vertically.)"
#~ msgstr ""
#~ "他のキーワード引数は transform プロパティーとして解釈されます。与えられる"
#~ "と、画像をラップする transform が作成されます(例えば、 pos=(100, 200) を使"
#~ "用して、画像を 100 ピクセル横に、 200 ピクセル縦にオフセットできます)。"

#~ msgid ""
#~ "If the `image` parameter is omitted or None, and the LayeredImage has "
#~ "been given the `image_format` parameter, the image_format is used to "
#~ "generate an image filename."
#~ msgstr ""
#~ "`image` パラメーターが省略されるか None であり、LayerdImage に "
#~ "`image_format` パラメーターが与えられると、 image_format を使用して画像"
#~ "ファイル名を生成します。"

#~ msgid ""
#~ "When the condition is true, the layer is displayed. Otherwise, nothing is "
#~ "displayed."
#~ msgstr ""
#~ "条件が True ならそのレイヤーが表示されます。そうでなければ何も表示されませ"
#~ "ん。"

#~ msgid ""
#~ "This is used to implement a single ``if``, ``elif`` **or** ``else`` "
#~ "layeredimage statement (for ``else``, `condition` should be \"True\"). "
#~ "Several Conditions can then be passed to a :class:`ConditionGroup` to "
#~ "emulate a full if/elif/else statement."
#~ msgstr ""
#~ "これは ``if`` や ``elif``, ``else`` レイヤー画像を実装するのに使用されま"
#~ "す (``else`` では `condition` は \"True\" であるべきです)。いくつかの "
#~ "Conditions が :class:`ConditionGroup` に渡され、 if/elif/else ステートメン"
#~ "トを再現します。"

#~ msgid "`condition`"
#~ msgstr "`condition`"

#~ msgid ""
#~ "This should be a string giving a Python condition that determines if the "
#~ "layer is displayed."
#~ msgstr "レイヤーが表示されるかどうかを決定する Python  の条件の文字列です。"

#~ msgid ""
#~ "If not None, this should be a displayable that is displayed when the "
#~ "condition is true."
#~ msgstr "これは None または条件が True なら表示される displayable です。"

#~ msgid ""
#~ "An attribute or list of attributes. The condition is only evaluated if "
#~ "all of these are showing."
#~ msgstr ""
#~ "属性または属性のリストです。これらのすべてがあるときのみ条件は評価されま"
#~ "す。"

#~ msgid ""
#~ "An attribute or list of attributes. If not empty, the condition is only "
#~ "evaluated if any of these are showing."
#~ msgstr ""
#~ "属性または属性のリストです。これらのどれかがあるときのみ条件は評価されま"
#~ "す。"

#~ msgid ""
#~ "An attribute or list of attributes. The condition is only evaluated if "
#~ "none of these are showing."
#~ msgstr ""
#~ "属性または属性のリストです。これらのすべてがないときのみ条件は評価されま"
#~ "す。"

#~ msgid ""
#~ "Other keyword arguments are interpreted as transform properties. If any "
#~ "is present, a transform is created that wraps the image. (For example, "
#~ "pos=(100, 200) can be used to offset the image by 100 pixels horizontally "
#~ "and 200 vertically.)"
#~ msgstr ""
#~ "他のキーワード引数は transform プロパティーとして解釈されます。どれかが与"
#~ "えられると、画像をラップする transform が作成されます(例えば pos=(100, "
#~ "200) を使用して画像を 100 ピクセル水平に、 200 ピクセル垂直にオフセットで"
#~ "きます)。"

#~ msgid ""
#~ "Takes a list of :class:`Condition` to combine them into a single :func:"
#~ "`ConditionSwitch`."
#~ msgstr ""
#~ ":class:`Condition` のリストを受け取って 1 つの :func:`ConditionSwitch` に"
#~ "組み込みます。"

#~ msgid "Implements the if/elif/else statement."
#~ msgstr "if/elif/else ステートメントを実装します。"

#~ msgid ""
#~ "This is an image-like object that, when shown with the proper set of "
#~ "attributes, shows a displayable created by compositing together the "
#~ "displayables associated with those attribute."
#~ msgstr ""
#~ "これは画像のようなオブジェクトで、適切な属性の組み合わせで表示されると、そ"
#~ "れらの属性と関連付けられた displayable を合成して作成した displayable を表"
#~ "示します。"

#~ msgid "`attributes`"
#~ msgstr "`attributes`"

#~ msgid ""
#~ "This must be a list of Attribute, Condition, ConditionGroup or :doc:"
#~ "`displayable <displayables>` objects. Each one reflects a displayable "
#~ "that may or may not be displayed as part of the image. The items in this "
#~ "list are in back-to-front order, with the first item further from the "
#~ "viewer and the last closest. Passing a displayable directly is the "
#~ "equivalent of the `always` layeredimage statement."
#~ msgstr ""
#~ "これは Attribute や Condition, ConditionGroup, :doc:`displayable "
#~ "<displayables>` オブジェクトのリストでなければいけません。それぞれは画像の"
#~ "一部として表示される、またはされない Displayable を反映します。このリスト"
#~ "の要素は後ろから前の順で、最初の要素は遠く、最後のは近くになります。直接 "
#~ "displayable を渡のは `always` レイヤー画像ステートメントに相当します。"

#~ msgid ""
#~ "A transform or list of transforms that are applied to the displayable "
#~ "after it is parameterized."
#~ msgstr ""
#~ "合成後に displayable に適用される transform または transform のリストで"
#~ "す。"

#~ msgid ""
#~ "The name of the layeredimage. This is used as part of the names of image "
#~ "components."
#~ msgstr "レイヤー画像の名前で、画像要素の名前の一部として使用されます。"

#~ msgid "`image_format`"
#~ msgstr "`image_format`"

#~ msgid ""
#~ "When a given image is a string, and this is supplied, the image name is "
#~ "interpolated into `image_format` to make an image file. For example, "
#~ "\"sprites/eileen/{image}.png\" will look for the image in a subdirectory "
#~ "of sprites. (This is not used by auto groups, which look for images and "
#~ "not image files.)"
#~ msgstr ""
#~ "文字列で画像が与えられており、かつこのプロパティーが与えられていると、"
#~ "`image_format` にその画像名が補完され、画像ファイルになります。例えば、 "
#~ "\"sprites/eileen/{image}.png\" ならsptritesのサブディレクトリーからその画"
#~ "像を探します ( これは画像ファイルではなく画像を探す自動グループでは使用さ"
#~ "れません )。"

#~ msgid "`format_function`"
#~ msgstr "`format_function`"

#~ msgid ""
#~ "A function that is used instead of `layeredimage.format_function` to "
#~ "format the image information into a displayable."
#~ msgstr ""
#~ "`layeredimage.format_function` の代わりに使用して画像の情報を displayable "
#~ "形式にする関数です。"

#~ msgid "`attribute_function`"
#~ msgstr "`attribute_function`"

#~ msgid ""
#~ "If not None, a function that's called with a set of attributes supplied "
#~ "to the image, and returns the set of attributes used to select layers. "
#~ "This is called when determining the layers to display, after the "
#~ "attribute themselves have been chosen. It can be used to express complex "
#~ "dependencies between attributes or select attributes at random."
#~ msgstr ""
#~ "None を指定するか、画像に渡される属性の set で呼び出され、レイヤーの選択に"
#~ "使用される属性の set を返す関数です。"

#~ msgid "`offer_screen`"
#~ msgstr "`offer_screen`"

#~ msgid ""
#~ "Sets whether or not the available area is taken into account as for how "
#~ "children are placed and how they are sized (when they have variable "
#~ "size). If False, the available area is considered, and if True it is not. "
#~ "If None, defaults to :var:`config.layeredimage_offer_screen`."
#~ msgstr ""
#~ "子の配置と (可変サイズである場合) サイズ合わせで利用可能な領域を考慮するか"
#~ "どうか設定します。 False であれば利用可能な領域を考慮し、True であれば考慮"
#~ "しません。 None の場合、デフォルトは :var:`config."
#~ "layeredimage_offer_screen` です。"

#~ msgid ""
#~ "Additional keyword arguments may contain transform properties. If any are "
#~ "present, a transform is created that wraps the result image. Remaining "
#~ "keyword arguments are passed to a Fixed that is created to hold the "
#~ "layer. Unless explicitly overridden, xfit and yfit are set to true on the "
#~ "Fixed, which means it will shrink to the smallest size that fits all of "
#~ "the layer images it is showing."
#~ msgstr ""
#~ "追加のキーワード引数には transofrm プロパティーが含められます。与えられれ"
#~ "ば Transorm が作成され結果の画像をラップします。残りのキーワード引数はレイ"
#~ "ヤーを貼り付けるために作成された Fixed に渡されます。明示的な上書きがなけ"
#~ "れば、 xfit と yfit は Fixed で True に設定され、表示している全てのレイ"
#~ "ヤー画像にフィットする最小サイズに縮みます。"

#~ msgid ""
#~ "A LayeredImage is not a displayable, and can't be used in all the places "
#~ "a displayable can be used. This is because it requires an image name "
#~ "(generally including image attributes) to be provided. As such, it should "
#~ "either be displayed through a scene or show statement, or by an image "
#~ "name string used as a displayable."
#~ msgstr ""
#~ "LayerdImage は displayable ではなく、 displayable が使用可能な全ての場所で"
#~ "は使用出来ません。これは (一般的に画像属性を含む) 画像名 の提供が必要なた"
#~ "めです。そういうわけで、 LayerdImage は scene や show ステートメントか、 "
#~ "displayable として使用される画像名の文字列から表示されるべきです。"

#~ msgid "`a`"
#~ msgstr "`a`"

#~ msgid ""
#~ "An Attribute, Condition, ConditionGroup or :doc:`displayable "
#~ "<displayables>` object."
#~ msgstr ""
#~ "Attribute や Condition, ConditionGroup, :doc:`displayable <displayables>` "
#~ "オブジェクト"

#~ msgid ""
#~ "This method adds the provided layer to the list of layers of the "
#~ "layeredimage, as if it had been passed in the `attributes` argument to "
#~ "the constructor."
#~ msgstr ""
#~ "このメソッドはレイヤー画像のレイヤーのリストに `attributes` 引数がコンスト"
#~ "ラクターに渡されたかのように指定のレイヤーが加えられます。"

#~ msgid ""
#~ "Displaying narration can be done the same way, by using the ``narrator`` "
#~ "character. When calling a character, it's possible to supply the keyword "
#~ "argument ``interact``. When ``interact`` is False, Ren'Py will display "
#~ "the character dialogue box, and will then return before performing an "
#~ "interaction."
#~ msgstr ""
#~ "台詞の表示は ``narrator`` キャラクターを用いて同様に行えます。キャラクター"
#~ "を呼び出すときは、キーワード引数 ``interact`` を与えられます。"
#~ "``interact`` が False なら、 Ren'Py はキャラクターのダイアログボックスを表"
#~ "示しますが、インタラクションを実行する前に処理を戻します。"

#~ msgid "The layer on which this function operates."
#~ msgstr "この関数を実行するレイヤー"

#~ msgid "An integer, the equivalent of the ``zorder`` property."
#~ msgstr "``zorder`` プロパティーと等価な整数です。"
