# Japanese translation for renpy-doc
# Copyright (c) 2013 Rosetta Contributors and Canonical Ltd 2013
# This file is distributed under the same license as the renpy-doc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: renpy-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-30 11:19+0900\n"
"PO-Revision-Date: 2023-12-30 14:45+0900\n"
"Last-Translator: akakyouryuu <akakyouryuu@gmail.com>\n"
"Language-Team: Japanese <ja@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2015-03-29 05:43+0000\n"
"X-Generator: Poedit 3.0.1\n"

#: ../../source/transitions.rst:5
msgid "Transitions"
msgstr "トランジション"

#: ../../source/transitions.rst:7
msgid ""
"Transitions can be used as part of the :ref:`with statement <with-"
"statement>`, as well as in other parts of Ren'Py, to apply effects to "
"changes in the scene. Ren'Py comes with a small number of pre-defined "
"transitions, which can be given directly to the with statement. It also "
"includes transition classes, which can be used to create new transitions."
msgstr ""
"トランジションは :ref:`with ステートメント <with-statement>` やその他の場面で"
"使え、場面の変化に効果を適用します。Ren'Py には定義済みのトランジションがあ"
"り、with ステートメントに直接指定できます。トランジションクラスを使って新しい"
"トランジションを作成することもできます。"

#: ../../source/transitions.rst:15
msgid "Pre-Defined Transitions"
msgstr "定義済みのトランジション"

#: ../../source/transitions.rst:17
msgid ""
"Pre-defined transitions can be given directly to the with statement. For "
"example::"
msgstr ""
"定義済みのトランジションは、with ステートメントに直接指定できます。例 ::"

#: ../../source/transitions.rst:25
msgid ""
"Takes 0.5 seconds to fade to black, and then 0.5 seconds to fade to the new "
"screen. An instance of the :func:`Fade` transition class."
msgstr ""
"0.5 秒かけてフェードで暗転し、さらに 0.5 秒かけて新しい画面にフェードしま"
"す。 :func:`Fade` トランジションクラスのインスタンスです。"

#: ../../source/transitions.rst:31
msgid ""
"Takes 0.5 seconds to dissolve from the old to the new screen. An instance of "
"the :func:`Dissolve` transition class."
msgstr ""
"0.5 秒かけて元の画面から新しい画面にディゾルブします。 :func:`Dissolve` トラ"
"ンジションクラスのインスタンスです。"

#: ../../source/transitions.rst:36
msgid ""
"Pixellates the old scene for .5 seconds, and the new scene for another .5 "
"seconds. An instance of the :func:`Pixellate` transition class."
msgstr ""
"0.5 秒かけて元の画面をピクセレートアウトし、さらに 0.5 秒かけて新しい画面をピ"
"クセレートインします。:func:`Pixellate` トランジションクラスのインスタンスで"
"す。"

#: ../../source/transitions.rst:42
msgid ""
"Takes 0.5 seconds to the move images that have changed location to their new "
"locations. An instance of the :func:`MoveTransition` transition class."
msgstr ""
"0.5 秒かけて画像を新しい場所に移動します。 :func:`MoveTransition` トランジ"
"ションクラスのインスタンスです(*訳注 タグが同じ画像の移動に使用します)。"

#: ../../source/transitions.rst:46
msgid ""
"Move transitions, and similar transitions like ease, can only be applied to "
"a single layer or all layers at once, using the :ref:`with statement <with-"
"statement>`. It will not work in other contexts such as :ref:`ATL "
"<expression-atl-statement>`, :func:`ComposeTransition`, or other ways of "
"applying transitions."
msgstr ""
"Move トランジションや ease のような類似のトランジションは、 :ref:`with ステー"
"トメント <with-statement>` を使用して、1つのレイヤーまたはすべてのレイヤーに"
"一度にのみ適用できます。このトランジションは :ref:`ATL <expression-atl-"
"statement>` や :func:`ComposeTransition` などの異なるトランジションの適用方法"
"をするコンテキストでは動作しません。"

#: ../../source/transitions.rst:54
msgid "Also: **moveinleft, moveintop, moveinbottom**"
msgstr "Also: **moveinleft, moveintop, moveinbottom**"

#: ../../source/transitions.rst:56
msgid ""
"These move entering images onto the screen from the appropriate side, taking "
"0.5 seconds to do so."
msgstr ""
"0.5 秒かけて画像を画面の対応する方向から進入させます(*訳注 タグが同じ画像がす"
"でにあるとトランジションしません)。"

#: ../../source/transitions.rst:61
msgid "Also: **moveoutleft, moveouttop, moveoutbottom**"
msgstr "Also: **moveoutleft, moveouttop, moveoutbottom**"

#: ../../source/transitions.rst:63
msgid ""
"These move leaving images off the screen via the appropriate side, taking "
"0.5 seconds to do so."
msgstr "0.5 秒かけて画像を画面の対応する方向へ退出させます。"

#: ../../source/transitions.rst:68
msgid ""
"Also: **easeinright, easeinleft, easeintop, easeinbottom, easeoutright, "
"easeoutleft, easeouttop, easeoutbottom**"
msgstr ""
"Also: **easeinright, easeinleft, easeintop, easeinbottom, easeoutright, "
"easeoutleft, easeouttop, easeoutbottom**"

#: ../../source/transitions.rst:70
msgid ""
"These are similar to the move- family of transitions, except that they use a "
"cosine-based curve to slow down the start and end of the transition."
msgstr ""
"move- 類と同じですが、トランジションのはじめと終わりがコサインベースで遅くな"
"ります。"

#: ../../source/transitions.rst:76
msgid "This zooms in entering images, taking 0.5 seconds to do so."
msgstr "0.5 秒かけて画像をズームインで進入させます。"

#: ../../source/transitions.rst:80
msgid "This zooms out leaving images, taking 0.5 seconds to do so."
msgstr "0.5 秒かけて画像をズームアウトで退出させます。"

#: ../../source/transitions.rst:84
msgid ""
"This zooms in entering images and zooms out leaving images, taking 0.5 "
"seconds to do so."
msgstr ""
"0.5 秒かけて画像のズームアウトによる退出と別の画像のズームインによる進入を同"
"時に行います。"

#: ../../source/transitions.rst:88
msgid ""
"When invoked, this transition shakes the screen vertically for a quarter "
"second. Imitating and customizing this transition and :var:`hpunch` is best "
"done using :ref:`atl-transitions`."
msgstr ""
"呼び出されたとき、画面を 4 分の 1 秒間垂直に揺らすトランジションです。このト"
"ランジションと :var:`hpunch` を模倣してカスタマイズするには :ref:`atl-"
"transitions` の使用がベストです。"

#: ../../source/transitions.rst:94
msgid ""
"When invoked, this transition shakes the screen horizontally for a quarter "
"second."
msgstr "呼び出されたとき、画面を 4 分の 1 秒間水平に揺らすトランジションです。"

#: ../../source/transitions.rst:99
msgid ""
"Transitions the screen in a vertical blinds effect lasting 1 second. An "
"instance of the :func:`ImageDissolve` transition class."
msgstr ""
"画面に1秒間続く垂直ブラインド効果を与えるトランジションです。 :func:"
"`ImageDissolve` トランジションクラスのインスタンスです。"

#: ../../source/transitions.rst:104
msgid "Transitions the screen in a squares effect lasting 1 second."
msgstr "画面に1秒間続くスクエア効果を与えるトランジションです。"

#: ../../source/transitions.rst:108
msgid "Also: **wiperight, wipeup, wipedown**"
msgstr "Also: **wiperight, wipeup, wipedown**"

#: ../../source/transitions.rst:110
msgid ""
"Wipes the scene in the given direction. Instances of the :func:`CropMove` "
"transition class."
msgstr ""
"画面を指定の方向へワイプして更新します。 :func:`CropMove` トランジションクラ"
"スのインスタンスです。"

#: ../../source/transitions.rst:115
msgid "Also: **slideright, slideup, slidedown**"
msgstr "Also: **slideright, slideup, slidedown**"

#: ../../source/transitions.rst:117
msgid ""
"Slides the new scene in the given direction. Instances of the :func:"
"`CropMove` transition class."
msgstr ""
"新しい画面を指定の方向からスライドインします。 :func:`CropMove` トランジショ"
"ンクラスのインスタンスです。"

#: ../../source/transitions.rst:122
msgid "Also: **slideawayright, slideawayup, slideawaydown**"
msgstr "Also: **slideawayright, slideawayup, slideawaydown**"

#: ../../source/transitions.rst:124
msgid ""
"Slides the old scene in the given direction. Instances of the :func:"
"`CropMove` transition class."
msgstr ""
"古い画面を指定の方向へスライドアウトします。 :func:`CropMove` トランジション"
"クラスのインスタンスです。"

#: ../../source/transitions.rst:129
msgid "Also: **pushleft, pushup, pushdown**"
msgstr "Also: **pushleft, pushup, pushdown**"

#: ../../source/transitions.rst:131
msgid ""
"These use the new scene to slide the old scene out the named side. Instances "
"of the :func:`PushMove` transition class."
msgstr ""
"指定の方向に新しい画面で以前の画面を押し出します。 :func:`PushMove` トランジ"
"ションクラスのインスタンスです。"

#: ../../source/transitions.rst:136
msgid "Also: **irisout**"
msgstr "Also: **irisout**"

#: ../../source/transitions.rst:138
msgid ""
"Use a rectangular iris to display the new screen, or hide the old screen. "
"Instances of the :func:`CropMove` transition class."
msgstr ""
"新しい画面の表示や元の画面の非表示に矩形の絞りを使います。 :func:`CropMove` "
"トランジションクラスのインスタンスです。"

#: ../../source/transitions.rst:142
msgid "Transition Classes"
msgstr "トランジションクラス"

#: ../../source/transitions.rst:144
msgid ""
"Transition classes are functions that can be called to create new "
"transitions. These functions are parameterized, allowing entire families of "
"transitions to be created."
msgstr ""
"トランジションクラスは、新しいトランジションを作成するために呼び出される関数"
"です。これらの関数にパラメーターを渡して全てのトランジション群を作成できま"
"す。"

#: ../../source/transitions.rst:148
msgid ""
"Calling transition classes can be done as part of the with statement. For "
"example::"
msgstr ""
"トランジションクラスの呼び出しは、with ステートメントの一部としてなされます。"
"例 ::"

#: ../../source/transitions.rst:154
msgid ""
"If we find ourselves calling the same transition class repeatedly, we can "
"use the :ref:`define statement <define-statement>` to assign the transition "
"to a variable::"
msgstr ""
"同じトランジションクラスを何度も呼び出さなくて済むように、 :ref:`define ス"
"テートメント <define-statement>` を使って変数にトランジションを代入できま"
"す ::"

#: ../../source/transitions.rst:165
msgid ""
"The time_warp argument taken by many transition classes can be given builtin "
"warpers found in the ``_warper`` module, see :ref:`warpers <warpers>`."
msgstr ""
"time_warp 引数は多くのトランジションクラスで受け取られ、 ``_warper`` モジュー"
"ルにある組み込みのワーパーを指定できます。 :ref:`warpers <warpers>` を参照し"
"てください。"

#: ../../source/inc/transition:5
msgid ""
"Returns a transition that uses a control displayable (almost always some "
"sort of animated transform) to transition from one screen to another. The "
"transform is evaluated. The new screen is used where the transform is "
"opaque, and the old image is used when it is transparent."
msgstr ""
"制御用の displayable (たいていはATL transform をならべたもの) を使ってあるス"
"クリーンから別のスクリーンへトランジションするトランジションを返します。 "
"transform は評価され、 transform が不透明な領域は新しい 画面が使われ、 "
"transform が透明な領域は元の画面が使われます。"

#: ../../source/inc/transition:11
msgid "`control`"
msgstr "`control`"

#: ../../source/inc/transition:11
msgid "The control transform."
msgstr "制御用の displayable です。"

#: ../../source/inc/transition:14 ../../source/inc/transition:202
#: ../../source/inc/transition:310
msgid "`delay`"
msgstr "`delay`"

#: ../../source/inc/transition:14
msgid "The time the transition takes, before ending."
msgstr "トランジションが終了までにかける時間です。"

#: ../../source/inc/transition:19 ../../source/inc/transition:172
#: ../../source/inc/transition:318
msgid "`reverse`"
msgstr "`reverse`"

#: ../../source/inc/transition:17
msgid ""
"If true, the alpha channel is reversed. Opaque areas are taken from the old "
"image, while transparent areas are taken from the new image."
msgstr ""
"True なら、アルファチャンネルが反転されます。不透明な領域は元の画像が使われ、"
"透明な領域は新しい画像が使われます。"

#: ../../source/inc/transition:24 ../../source/inc/transition:131
#: ../../source/inc/transition:183
msgid "`mipmap`"
msgstr "`mipmap`"

#: ../../source/inc/transition:22 ../../source/inc/transition:129
#: ../../source/inc/transition:180
msgid ""
"When the dissolve will be scaled to less than half its natural size, this "
"can be set to True. This will cause mipmaps to be generated, which will make "
"the dissolve consume more GPU resources, but will reduce artifacts. See :"
"propref:`mipmap` for more information."
msgstr ""
"ディゾルブが元のサイズの半分未満に縮小されると、これは True に設定されます。"
"これにより mipmap が生成され、ディゾルブはより多くの GPU リソースを消費するよ"
"うになりますが歪みは減少します。詳細は :propref:`mipmap` を参照ください。"

#: ../../source/inc/transition:29
msgid ""
"Returns a transition that composes up to three transitions. If not None, the "
"`before` and `after` transitions are applied to the old and new scenes, "
"respectively. These updated old and new scenes are then supplied to the "
"`trans` transition."
msgstr ""
"3 つ以内のトランジションから構成される新しいトランジションを返します。 "
"`before` と `after` トランジションは、None でなければ、元の場面と新しい場面に"
"それぞれ適用されます。更新されたこれらの元の場面と新しい場面が `trans` トラン"
"ジションに提供されます。"

#: ../../source/inc/transition:41
msgid ""
"Returns a transition that works by cropping a scene and positioning it on "
"the screen. This can be used to implement a variety of effects, all of which "
"involve changing rectangular slices of scenes."
msgstr ""
"場面を切り抜いてスクリーンに配置するトランジションを返します。これは、場面の"
"矩形のスライスに関わる様々なエフェクトを実装するのに使えます。"

#: ../../source/inc/transition:46 ../../source/inc/transition:121
#: ../../source/inc/transition:163 ../../source/inc/transition:275
#: ../../source/inc/transition:288
msgid "`time`"
msgstr "`time`"

#: ../../source/inc/transition:46 ../../source/inc/transition:288
msgid "The time the transition takes."
msgstr "トランジションにかける時間です。"

#: ../../source/inc/transition:69 ../../source/inc/transition:293
msgid "`mode`"
msgstr "`mode`"

#: ../../source/inc/transition:49
msgid ""
"The name of the mode of the transition. There are three groups of modes: "
"wipes, slides, and other. This can also be \"custom\", to allow a custom "
"mode to be defined."
msgstr ""
"トランジションのモードの名前です。モードには三種類あります。ワイプ、スライ"
"ド、その他です。カスタムモードを定義するために 「 custom 」 にもできます。"

#: ../../source/inc/transition:53
msgid ""
"In a wipe, the image stays fixed, and more of it is revealed as the "
"transition progresses. For example, in \"wiperight\", a wipe from left to "
"right, first the left edge of the image is revealed at the left edge of the "
"screen, then the center of the image, and finally the right side of the "
"image at the right of the screen. Other supported wipes are \"wipeleft\", "
"\"wipedown\", and \"wipeup\"."
msgstr ""
"ワイプでは、画像は固定されたままで、トランジションが進むにつれて見える領域が"
"増えていきます。例えば、左から右へのワイプである 「 wiperight 」 では、まず画"
"像の左端がスクリーンの左端に現れ、画像の中央が現れ、最後には画像の右端がスク"
"リーンの右端に現れます。ワイプには、その他 「 wipeleft 」,「 wipedown 」, そ"
"して 「 wipeup 」 があります。"

#: ../../source/inc/transition:59
msgid ""
"In a slide, the image moves. So in a \"slideright\", the right edge of the "
"image starts at the left edge of the screen, and moves to the right as the "
"transition progresses. Other slides are \"slideleft\", \"slidedown\", and "
"\"slideup\"."
msgstr ""
"スライドでは、画像が動きます。ですから 「slideright」では、画像は右端がスク"
"リーンの左端から現れ出し、トランジションが進むにつれて右に進みます。スライド"
"には、その他 「slideleft」、「slidedown」, そして 「slideup」 があります。"

#: ../../source/inc/transition:64
msgid ""
"There are also slideaways, in which the old image moves on top of the new "
"image. Slideaways include \"slideawayright\", \"slideawayleft\", "
"\"slideawayup\", and \"slideawaydown\"."
msgstr ""
"スライドアウェイは、元の画像が新しい画像の上を動きます。スライドアウェイに"
"は、「slideawayright」, 「slideawayleft」, 「slideawayup」, そして "
"「slideawaydown」 があります。"

#: ../../source/inc/transition:68
msgid ""
"We also support a rectangular iris in with \"irisin\" and a rectangular iris "
"out with \"irisout\"."
msgstr ""
"矩形の絞りを開く 「irisin」 と矩形の絞りを閉じる 「irisout」 もサポートしてい"
"ます。"

#: ../../source/inc/transition:71
msgid ""
"The following parameters are only respected if the mode is \"custom\". "
"Positions are relative to the size of the screen, while the crops are "
"relative to the size of the image. So a crop of (0.25, 0.0, 0.5, 1.0) takes "
"the middle half of an image."
msgstr ""
"次のパラメーターは、モードが 「custom」 であるときのみ考慮されます。ポジショ"
"ンはスクリーンのサイズに対する割合で、クロップは画像のサイズに対する割合で"
"す。ですから、(0.25, 0.0, 0.5, 1.0) のクロップは画像の中半分を切り抜きます。"

#: ../../source/inc/transition:78
msgid "`startcrop`"
msgstr "`startcrop`"

#: ../../source/inc/transition:77
msgid ""
"The starting rectangle that is cropped out of the top image. A 4-element "
"tuple containing x, y, width, and height."
msgstr ""
"手前の画像から最初に切り抜かれる矩形です。x, y, width, そして height からな"
"る 4 要素のタプルです。"

#: ../../source/inc/transition:82
msgid "`startpos`"
msgstr "`startpos`"

#: ../../source/inc/transition:81
msgid ""
"The starting place that the top image is drawn to the screen at, a 2-element "
"tuple containing x and y."
msgstr ""
"手前の画像が最初に描画されるスクリーン上の場所です。x, y からなる 2 要素のタ"
"プルです。"

#: ../../source/inc/transition:86
msgid "`endcrop`"
msgstr "`endcrop`"

#: ../../source/inc/transition:85
msgid ""
"The ending rectangle that is cropped out of the top image. A 4-element tuple "
"containing x, y, width, and height."
msgstr ""
"手前の画像から最後に切り抜かれる矩形です。x, y, width, そして height からな"
"る 4 要素のタプルです。"

#: ../../source/inc/transition:90
msgid "`endpos`"
msgstr "`endpos`"

#: ../../source/inc/transition:89
msgid ""
"The ending place that the top image is drawn to the screen at, a 2-element "
"tuple containing x and y."
msgstr ""
"手前の画像が最後に描画されるスクリーン上の場所です。x, y からなる 2 要素のタ"
"プルです。"

#: ../../source/inc/transition:94
msgid "`topnew`"
msgstr "`topnew`"

#: ../../source/inc/transition:93
msgid ""
"If true, the scene that is cropped and moved (and is on top of the other "
"scene) is the new scene. If false, it is the old scene."
msgstr ""
"True なら、切り取られてたり動いたりする場面 (1番手前に場面です) は新しい場面"
"です。 False なら、元の場面です。"

#: ../../source/inc/transition:118
msgid ""
"Returns a transition that dissolves from the old scene to the new scene."
msgstr "元の場面から新しい場面にディゾルブするトランジションを返します。"

#: ../../source/inc/transition:121 ../../source/inc/transition:163
msgid "The time the dissolve will take."
msgstr "ディゾルブにかける時間です。"

#: ../../source/inc/transition:126 ../../source/inc/transition:177
#: ../../source/inc/transition:225
msgid "`time_warp`"
msgstr "`time_warp`"

#: ../../source/inc/transition:124 ../../source/inc/transition:175
msgid ""
"A function that adjusts the timeline. If not None, this should be a function "
"that takes a fractional time between 0.0 and 1.0, and returns a number in "
"the same range."
msgstr ""
"タイムラインを調節する関数です。None を設定するか、0.0 から 1.0 の間の小数の"
"時間を引数に受け取り、同じ範囲の数を返す関数を指定します。"

#: ../../source/inc/transition:136
msgid ""
"Returns a transition that takes `out_time` seconds to fade to a screen "
"filled with `color`, holds at that screen for `hold_time` seconds, and then "
"takes `in_time` to fade to then new screen."
msgstr ""
"`out_time` 秒かけて `color` で満たされたスクリーンにフェードし、そのスクリー"
"ンを `hold_time` 秒保ち、それから `in_time` 秒かけて新しいスクリーンにフェー"
"ドするトランジションを返します。"

#: ../../source/inc/transition:153
msgid ""
"Returns a transition that dissolves the old scene into the new scene, using "
"an image to control the dissolve process. This means that white pixels will "
"dissolve in first, and black pixels will dissolve in last."
msgstr ""
"ディゾルブの過程を制御する画像を使い、元の場面から新しい場面にディゾルブする"
"トランジションを返します。この画像の白いビクセルに対応する部分が最初にディゾ"
"ルブし、黒いピクセルに対応する部分が最後にディゾルブします。"

#: ../../source/inc/transition:160
msgid "`image`"
msgstr "`image`"

#: ../../source/inc/transition:158
msgid ""
"The control image. This can be any displayable. It should be the size of the "
"scenes being dissolved, and if `reverse=True`, it should be fully opaque."
msgstr ""
"制御画像です。これはどのような Displayable でもよいですが、ディゾルブされる"
"シーンのサイズであるべきです。 `reverse=True` なら、完全に不透明でもあるべき"
"です。"

#: ../../source/inc/transition:169
msgid "`ramplen`"
msgstr "`ramplen`"

#: ../../source/inc/transition:166
msgid ""
"The length of the ramp to use. This must be an integer power of 2. When this "
"is the default value of 8, when a white pixel is fully dissolved, a pixel 8 "
"shades of gray darker will have completed one step of dissolving in."
msgstr ""
"使用する ramp の長さです。これは 2 の整数乗でなければなりません。これがデフォ"
"ルト値の 8 であるとき、白いピクセルが完全にディゾルブすると、一段階ごとに 8 "
"シェード暗いピクセルのディゾルブインが進みます。"

#: ../../source/inc/transition:172
msgid "If True, black pixels will dissolve in before white pixels."
msgstr ""
"True なら、黒いピクセルの方が白いビクセルより先にディゾルブインします。"

#: ../../source/inc/transition:193
msgid ""
"Returns a transition that interpolates the position of images (with the same "
"tag) in the old and new scenes."
msgstr ""
"( 同じタグを持つ ) 画像の以前の場面と新しい場面の座標を補間するトランジション"
"を返します。"

#: ../../source/inc/transition:196
msgid ""
"As only layers have tags, MoveTransitions can only be applied to a single "
"layer or all layers at once, using the :ref:`with statement <with-"
"statement>`. It will not work in other contexts such as :ref:`ATL "
"<expression-atl-statement>`, :func:`ComposeTransition`, or other ways of "
"applying transitions."
msgstr ""
"タグを持つのはレイヤーのみなので、MoveTransitions は :ref:`with ステートメン"
"ト <with-statement>` を使って一つのレイヤーまたはすべてのレイヤーに一度にしか"
"適用できません。 :ref:`ATL <expression-atl-statement>` や :func:"
"`ComposeTransition` のように、異なる方法でトランジションを適用するコンテキス"
"トでは動作しません。"

#: ../../source/inc/transition:202
msgid "The time it takes for the interpolation to finish."
msgstr "補間が終わるまでの時間です。"

#: ../../source/inc/transition:207
msgid "`enter`"
msgstr "`enter`"

#: ../../source/inc/transition:205
msgid ""
"If not None, images entering the scene will also be moved. The value of "
"`enter` should be a transform that is applied to the image to get it in its "
"starting position."
msgstr ""
"None でなければ、その場面に新しく挿入される画像も移動されます。 `enter` に"
"は、その画像が開始位置に至るために適用される transform を指定するべきです。"

#: ../../source/inc/transition:212
msgid "`leave`"
msgstr "`leave`"

#: ../../source/inc/transition:210
msgid ""
"If not None, images leaving the scene will also be moved. The value of "
"`leave` should be a transform that is applied to the image to get it in its "
"ending position."
msgstr ""
"None でなければ、その場面から消される画像も移動されます。 `leave` には、その"
"画像が最終的な位置に至るために適用される transform を指定するべきです。"

#: ../../source/inc/transition:217 ../../source/inc/transition_family:36
msgid "`old`"
msgstr "`old`"

#: ../../source/inc/transition:215 ../../source/inc/transition_family:34
msgid ""
"If true, when a tag gets its image changed during the transition, the old "
"image will be used in preference to the new one. Otherwise, the new images "
"will be used."
msgstr ""
"True ならタグの画像がトランジション中に変更されたとき、新しい画像よりも古い画"
"像が優先して使われます。そうでない場合は、新しい画像が使われます。"

#: ../../source/inc/transition:220 ../../source/inc/transition_family:39
msgid "`layers`"
msgstr "`layers`"

#: ../../source/inc/transition:220
msgid "A list of layers that moves are applied to."
msgstr "トランジションが適用されるレイヤーのリストです。"

#: ../../source/inc/transition:223
msgid ""
"A :ref:`time warp function <warpers>` that's applied to the interpolation. "
"This takes a number between 0.0 and 1.0, and should return a number in the "
"same range."
msgstr ""
"補間に適用される :ref:`time warp 関数 <warpers>` です。これは 0.0 から 1.0 ま"
"での数字を受け取り、同じ範囲の数字を返すべきです。"

#: ../../source/inc/transition:228
msgid "`enter_time_warp`"
msgstr "`enter_time_warp`"

#: ../../source/inc/transition:228
msgid "A time warp function that's applied to images entering the scene."
msgstr "新しく挿入される画像に適用されるタイムワープ関数です。"

#: ../../source/inc/transition:230
msgid "`leave_time_warp`"
msgstr "`leave_time_warp`"

#: ../../source/inc/transition:231
msgid "A time warp function that's applied to images leaving the scene."
msgstr "消える画像に適用されるタイムワープ関数です。"

#: ../../source/inc/transition:235
msgid ""
"Returns a transition that allows multiple transitions to be displayed, one "
"after the other."
msgstr "次々に複数のトランジションを実行できるトランジションを返します。"

#: ../../source/inc/transition:249
msgid "`args`"
msgstr "`args`"

#: ../../source/inc/transition:239
msgid ""
"A **list** containing an odd number of items. The first, third, and other "
"odd-numbered items must be scenes, and the even items must be transitions. A "
"scene can be one of:"
msgstr ""
"奇数個のアイテムが格納された *リスト* です。1番目、3番目、その他の奇数番目の"
"アイテムにはシーンを、偶数番目のアイテムにはトランジションを指定します。シー"
"ンとして指定できるものは次の1つです。 :"

#: ../../source/inc/transition:243
msgid "A displayable."
msgstr "displayable"

#: ../../source/inc/transition:244
msgid "False, to use the old scene."
msgstr "False, トランジション前の場面を表す"

#: ../../source/inc/transition:245
msgid "True, to use the new scene."
msgstr "True, トランジション後の場面を表す"

#: ../../source/inc/transition:247
msgid "Almost always, the first argument will be False and the last True."
msgstr "ほぼ必ず最初の引数は False で最後の引数は True となります。"

#: ../../source/inc/transition:249
msgid ""
"Note that this is a single parameter taking a list, this is not ``*args``."
msgstr ""
"これはリストを取る単一のパラメーターであり、 ``*args`` ではないことに注意して"
"ください。"

#: ../../source/inc/transition:251
msgid ""
"The transitions in `args` are applied in order. For each transition, the old "
"scene is the screen preceding it, and the new scene is the scene following "
"it. For example::"
msgstr ""
"`args` 内のトランジションが順に適用されます。各トランジションは、その前に置か"
"れたスクリーンから後に置かれたスクリーンにトランジションします。たとえば ::"

#: ../../source/inc/transition:261
msgid ""
"This example will dissolve to logo.jpg, wait 1 second, and then dissolve to "
"the new scene."
msgstr ""
"この例は、logo.jpg にディゾルブし、1 秒待ち、それから新しい場面にディゾルブし"
"ます。"

#: ../../source/inc/transition:266
msgid ""
"Returns a transition that only displays the new screen for `delay` seconds. "
"It can be useful as part of a MultipleTransition."
msgstr ""
"新しいスクリーンを `delay` 秒間表示するだけのトランジションを返します。"
"MultipleTransition の一部にするのに便利です。"

#: ../../source/inc/transition:271
msgid ""
"Returns a transition that pixellates out the old screen, and then pixellates "
"in the new screen."
msgstr ""
"元のスクリーンをピクセレートアウトし、それから新しいスクリーンをピクセレート"
"インするトランジションを返します。"

#: ../../source/inc/transition:275
msgid "The total time the transition will take, in seconds."
msgstr "トランジションにかける合計時間の秒数です。"

#: ../../source/inc/transition:279
msgid "`steps`"
msgstr "`steps`"

#: ../../source/inc/transition:278
msgid ""
"The number of steps that will occur, in each direction. Each step creates "
"pixels about twice the size of those in the previous step, so a 5-step "
"pixellation will create 32x32 pixels."
msgstr ""
"それぞれの方向に行われる段階の数です。各段階ごとに、一つ前の段階の 2 倍のピク"
"セルができます。よって、ピクセレートの 5 段階目では 32x32 のピクセルができま"
"す。"

#: ../../source/inc/transition:284
msgid ""
"Returns a transition that works by taking the new scene and using it to "
"\"push\" the old scene off the screen."
msgstr "新しい場面で元の場面を \"plush\" するトランジションを返します。"

#: ../../source/inc/transition:291
msgid ""
"There are four possible modes: \"pushright\", \"pushleft\", \"pushup\", and "
"\"pushdown\", which push the old scene off the screen in the direction "
"indicated."
msgstr ""
"これらには 4 つのモード \"pushright\", \"pushleft\", \"pushup\", \"pushdown"
"\" があり、指定された方向に以前のスクリーン押し出します。"

#: ../../source/inc/transition:304
msgid ""
"A transitions that rotates the old scene 90 degrees around an axis, so that "
"it is edge on with the viewer, switches to the new scene, and then rotates "
"that scene another 90 degrees to show the new scene to the viewer."
msgstr ""
"以前のシーンを画面端の軸中心に90度回転してフェードアウトし、さらにもう90度回"
"転して新しいシーンをフェードインします。"

#: ../../source/inc/transition:310
msgid "How long the transition should take."
msgstr "トランジションにかける時間です。"

#: ../../source/inc/transition:315
msgid "`vertical`"
msgstr "`vertical`"

#: ../../source/inc/transition:313
msgid ""
"If true, the scene is rotate around the x-axis (pixels move vertically). If "
"false, the scene is roated around the y axis, pixels moving horizontally."
msgstr ""
"True なら、シーンは x 軸中心に回転してピクセルは縦に動き、False なら、 y 軸中"
"心に回転してピクセルは水平に動きます。"

#: ../../source/inc/transition:318
msgid "When true, the rotation occurs in the reverse direction."
msgstr "True なら回転は逆方向になります。"

#: ../../source/inc/transition:321
msgid "`background`"
msgstr "`background`"

#: ../../source/inc/transition:321
msgid "A displayable that is placed behind the scene as it rotates."
msgstr "シーンが回転している間背景となる displayable です。"

#: ../../source/inc/transition:325
msgid "`flatten`"
msgstr "`flatten`"

#: ../../source/inc/transition:324
msgid ""
"If true, the scenes are flattened into images the size of the screen before "
"being rotated. Use this if images being not entirely on the screen causes "
"undesired effects."
msgstr ""
"True なら、回転前にシーンは画面のサイズの画像に変換されます。画面に満たない画"
"像が望ましくない作用をするならこれを使用してください。"

#: ../../source/transitions.rst:172
msgid "Transition Families"
msgstr "トランジション族"

#: ../../source/transitions.rst:174
msgid ""
"Transition families are functions that define a large family of related "
"transitions."
msgstr ""
"トランジション族は、大量の関連するトランジション族を定義する関数群です。"

#: ../../source/inc/transition_family:5
msgid ""
"This defines a family of :class:`move transitions <MoveTransition>`, similar "
"to the move and ease transitions. For a given `prefix`, this defines the "
"transitions:"
msgstr ""
"これは、 :class:`move トランジション <MoveTransition>` や ease トランジション"
"のようなトランジション属を定義します。指定の `prefix` に対して、次のトランジ"
"ションを定義します ::"

#: ../../source/inc/transition_family:8
msgid ""
"*prefix*- A transition that takes `delay` seconds to move images that "
"changed positions to their new locations."
msgstr "*prefix- delay* 秒かけて画像を新しい位置に動かすトランジションです。"

#: ../../source/inc/transition_family:11
msgid ""
"*prefix*\\ inleft, *prefix*\\ inright, *prefix*\\ intop, *prefix*\\ inbottom "
"- Transitions that take `delay` seconds to move images that changed "
"positions to their new locations, with newly shown images coming in from the "
"appropriate side."
msgstr ""
"*prefix*\\ inleft, *prefix*\\ inright, *prefix*\\ intop, *prefix*\\ inbottom "
"- `delay` 時間かけて画像を新しい位置に動かすトランジションです。新しく表示さ"
"れる画像は適切な側から現れます。"

#: ../../source/inc/transition_family:16
msgid ""
"*prefix*\\ outleft, *prefix*\\ outright, *prefix*\\ outtop, *prefix*\\ "
"outbottom - Transitions that take `delay` seconds to move images that "
"changed positions to their new locations, with newly hidden images leaving "
"via the appropriate side."
msgstr ""
"*prefix*\\ outleft, *prefix*\\ outright, *prefix*\\ outtop, *prefix*\\ "
"outbottom - `delay` 時間かけて画像を新しい位置に動かすトランジションです。新"
"しく隠蔽される画像は適切な側へ消えます。"

#: ../../source/inc/transition_family:31
msgid "`time_warp`, `in_time_warp`, `out_time_warp`"
msgstr "`time_warp`, `in_time_warp`, `out_time_warp`"

#: ../../source/inc/transition_family:22
msgid ""
"Time warp functions that are given a time from 0.0 to 1.0 representing the "
"fraction of the move that is complete, and return a value in the same range "
"giving the fraction of a linear move that is complete. See :ref:`warpers "
"<warpers>` for more information."
msgstr ""
"タイムワープ関数です。これらは移動が完了するまでの時間に対する割合を表す 0.0 "
"から 1.0 の小数を与えられ、線形移動が完了するまでの距離に対する割合を表す同じ"
"範囲の小数値を返します。詳細は :ref:`ワーパー <warpers>` を参照してください。"

#: ../../source/inc/transition_family:27
msgid ""
"This can be used to define functions that ease the images around, rather "
"than moving them at a constant speed."
msgstr "これは、一定の速度では動かない画像を動かす関数を定義するのに使えます。"

#: ../../source/inc/transition_family:30
msgid ""
"The three arguments are used for images remaining on the screen, newly shown "
"images, and newly hidden images, respectively."
msgstr ""
"これら3つの引数は、スクリーンにある画像、新しく現れる画像、新しく消える画像"
"に、それぞれ使われます。"

#: ../../source/inc/transition_family:39
msgid "The layers the transition will apply to."
msgstr "トランジションが適用されるレイヤーです。"

#: ../../source/transitions.rst:183
msgid "Dict Transitions"
msgstr "辞書トランジション"

#: ../../source/transitions.rst:185
msgid ""
"In many places where Ren'Py takes a transition, it's possible to instead "
"specify a dictionary that maps layer names to this transition. When this is "
"the case, Ren'Py applies each transition to the appropriate layer."
msgstr ""
"Ren'Py がトランジションを受け取る様々な場所で、レイヤー名をこのトランジション"
"に対応付ける辞書を代わりに指定できます。この場合、 Ren'Py は対応するレイヤー"
"にそれぞれのトランジションを適用します。"

#: ../../source/transitions.rst:189
msgid ""
"When a dict is used, the pause that usually occurs when a transition takes "
"place does not occur. Instead, the statement taking the dictionary returns "
"immediately, and the transitions are scheduled to occur at the start of the "
"next interaction."
msgstr ""
"辞書が使用されると、通常行われるトランジション時のポーズは起きません。代わり"
"に辞書を受け取ったステートメントは即座に制御を返し、次のインタラクションの開"
"始時時に実行するようスケジュールされます。"

#: ../../source/transitions.rst:194
msgid ""
"This can be used with the master layer to cause transitions to occur while "
"dialogue is being shown on the screen. For example, if we wrote::"
msgstr ""
"これを使用して,台詞をスクリーンに表示したまま、マスターレイヤーにトランジショ"
"ンを実行できます。例えば、次のように記述してから"

#: ../../source/transitions.rst:199
msgid "and::"
msgstr "次のようにすると :"

#: ../../source/transitions.rst:206
msgid "The dissolve will take place while the text is displayed on the screen."
msgstr "ディゾルブ実行中テキストが表示され続けます。"

#: ../../source/transitions.rst:208
msgid ""
"Dict layer transitions can't be used every place a transition can be used, "
"only places where applying transitions to a layer is possible. It can be "
"used with the ``with`` statement and ``with`` cause of the scene, show, and "
"hide statements. It can also be used with :func:`renpy.with_statement` and :"
"func:`renpy.transition`, the :func:`Show` and :func:`Hide` actions, and "
"various config variables that take transitions. Dict layer transitions *will "
"not* work inside things that don't work with layers, such as ATL, :func:"
"`ComposeTransition` and :func:`MultipleTransition`."
msgstr ""
"辞書トランジションはすべてのトランジションをおける場所で使用できるわけではな"
"く、レイヤーへのトランジションが可能な場面でのみ使用できます。 ``with`` ス"
"テートメントや scene, show, hide ステートメントの ``with`` 節でも使用できま"
"す。  :func:`renpy.with_statement` と :func:`renpy.transition` の関数や  :"
"func:`Show` , :func:`Hide`  アクション、トランジションを受ける様々な設定変数"
"でも使用できます。辞書トランジションは ATL や  :func:`ComposeTransition` と :"
"func:`MultipleTransition` のようなレイヤーに対して動作しないものの内部では動"
"作しないでしょう。"

#: ../../source/transitions.rst:217
msgid ""
"This can interact poorly with statements that cause a transition to occur "
"themselves, like the transitions caused by ``window auto``. That can often "
"be solved with a second dict transition that applies to a different layer. "
"For example, if you are seeing weird blinking when the dialogue window shows "
"and hides, consider changing options.rpy to have::"
msgstr ""
"これは ``window auto`` で起きるトランジションのような、自身でトランジションを"
"起こす with ステートメントに良くない作用をするかもしれません。それには異なる"
"レイヤーには2つ目の辞書トランジションを適用して対処できます。例えば、もし台詞"
"ウィンドウの表示非表示時で唐突な点滅を目にするなら options.rpy を次のように変"
"更することを考えてください。 ::"

#: ../../source/transitions.rst:226
msgid ""
"This works because the dialogue window exists entirely on the screens layer."
msgstr "これは台詞ウィンドウがスクリーンレイヤーにあるために動作します。"

#: ../../source/transitions.rst:232
msgid "Automatic Transitions after Scene, Show, and Hide"
msgstr "Scene, Show, Hide 後の自動トランジション"

#: ../../source/transitions.rst:234
msgid ""
"Ren'Py can automatically show a transition after a series of scene, show, "
"and hide statements. This transition can be enabled by setting the :var:"
"`_scene_show_hide_transition` variable to the transition to be used."
msgstr ""
"Ren'Py は一連の scene, show, hide ステートメントの後に自動的にトランジション"
"を表示できます。このトランジションは使用するトランジションを :var:"
"`_scene_show_hide_transition` 変数に設定して有効化できます。"

#: ../../source/transitions.rst:238
msgid ""
"The transition will occur after one or more ``scene``, ``show``, or ``hide`` "
"statements, provided the statement are not followed by a  with statement, or "
"a transition caused by :ref`dialogue window management <dialogue-window-"
"management>`, like the various ``window`` statements. It's also disabled "
"when in a menu context."
msgstr ""
"このトランジションは with ステートメントや ``window`` ステートメントのよう"
"な :ref`dialogue window management <dialogue-window-management>` が続かない一"
"つ以上の ``scene``, ``show``, ``hide`` ステートメント後に起こります。メニュー"
"コンテキストでも無効化されます。"

#: ../../source/transitions.rst:243
msgid "For example::"
msgstr "例 ::"

#: ../../source/transitions.rst:264
msgid "See Also"
msgstr "次も参照してください。"

#: ../../source/transitions.rst:266
msgid ""
":ref:`atl-transitions`, :ref:`Transitions using Python <transitions-"
"python>` : how to create transitions using the ATL system and Python, "
"respectively"
msgstr ""
":ref:`atl-transitions`, :ref:`Pythonを使用したトランジション <transitions-"
"python>` : それぞれ ATL システムや Python を使用したトランジションの作成方法"
"です。"

#~ msgid ""
#~ "As only layers have tags, MoveTransitions can only be applied to a single "
#~ "layer or all layers at once, using the with statement. It will not work "
#~ "in other contexts, like ATL, :func:`ComposeTransition`, or other ways of "
#~ "applying transitions."
#~ msgstr ""
#~ "タグを持つのはレイヤーのみなので、 MoveTransitions は with ステートメント"
#~ "を使って一度に一つのレイヤーまたはすべてのレイヤーにしか適用できません。 "
#~ "ATL や :func:`ComposeTransition`, その他 transition 適用方法のように、トラ"
#~ "ンジションを適用する他のコンテキストでは動作しません。"

#~ msgid ""
#~ "Move transitions, and similar transitions like ease, can only be applied "
#~ "to one or all layers, not individual displayables."
#~ msgstr ""
#~ "move トランジション、および ease などの類似のトランジションは、1つまたはす"
#~ "べてのレイヤーにのみ適用でき、個々の Displayable には適用できません。"

#~ msgid "`alpha`"
#~ msgstr "`alpha`"

#~ msgid "Ignored."
#~ msgstr "無視されます。"

#~ msgid "If true, the old image will be used in preference to the new one."
#~ msgstr "True なら以前の画像が新しいものに優先して使用されます。"

#~ msgid ""
#~ "If true, the transitions to move the old displayables, rather than the "
#~ "new ones."
#~ msgstr ""
#~ "True なら、トランジションは新しい displayable の代わりに元の displayable "
#~ "を動かします。"

#~ msgid ""
#~ "If true, the image is composited with what's behind it. If false, the "
#~ "default, the image is opaque and overwrites what's behind it."
#~ msgstr ""
#~ "True であれば、画像は背後のものと合成されます。デフォルトの False であれ"
#~ "ば、画像は不透明で背後のものを上書きします。"

#~ msgid ""
#~ "If true, the dissolve will alpha-composite the result of the transition "
#~ "with the screen. If false, the result of the transition will replace the "
#~ "screen, which is more efficient."
#~ msgstr ""
#~ "True なら、ディゾルブはトランジションの結果をスクリーンとアルファ合成しま"
#~ "す。 False なら、トランジションの結果はスクリーンを置き換え、これはより効"
#~ "率的です。"

#~ msgid ""
#~ "A list containing an odd number of items. The first, third, and other odd-"
#~ "numbered items must be scenes, and the even items must be transitions. A "
#~ "scene can be one of:"
#~ msgstr ""
#~ "要素が奇数個あるリストです。1 番目、3 番目などの奇数番目の要素は場面でなく"
#~ "てはならず、偶数番目の要素はトランジションでなくてはなりません。場面は次の"
#~ "うちのいずれかです ::"
